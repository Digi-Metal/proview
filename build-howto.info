A guide on how to build Proview
--------------------------------

Written by: Robert Karlsson

The following libraries (devel and runtime) are needed to build Proview:

Berkeley DB (>= v4.0, recommended v4.3)
antlr (v2.7.5 recommended )
gtk2-devel (>= v2.4, recommended v2.8)
alsa (>= 0.9.8, recommended v1.0.6)

Proview has been built with the follwing compilers:

gcc v3.3.3
gcc v3.4.3
gcc v4.0.2

1. Preparations
--------------

Install the following packages

make
flex
gcc
g++
libgtk2.0-dev
cpp
libasound2-dev
libdb4.3-dev
doxygen

antlr: Download and build source package antlr-2.7.7 from www.antlr.org
       copy includefiles from antlr-2.7.7/lib/cpp/antlr/* 
       to /usr/include/antlr/

java:  Download jdk-6u2-linux-i586.bin from java.sun.com. Define the 
       environment variable jdk to the path where the package is 
       extracted (e.g. /usr/local) and put $jdk/bin in the PATH.

	export jdk=/usr/local/jdk1.6.0_02
	export PATH=$PATH:$jdk/bin

There has to be a valid display.

2. Easy way
-----------
Unpack the source package

> tar -xzvf pwrsrc_4.4.2.tar.gz

Enter the sourcecode root directory

> cd pwr_4.4.2

Execute the makefile

> make

Follow the instructions to insert three lines in your .bashrc file.


3. Thorough way
---------------

This is a more thorough way to install the development environment, which
is recommended if you will make a lots of changes in the source code and
handle different version of proview.

3.1 Setting up the environment
------------------------------

The first thing to do is to set up your environment properly. Add the 
following lines to .bashrc:

# Where /home/robert/x4-4-2 is replaced with wherever you unpacked the sources.
export pwre_bin="/home/robert/x4-4-2/pwr/src/tools/pwre/src/os_linux"
export pwre_dir_symbols="$pwre_bin/dir_symbols.mk"
source $pwre_bin/pwre_function
export pwre_env_db="/home/robert/pwre_new"


3.2 Creating the environment
----------------------------

Creating and handling your environment is done with the pwre-function (added
by sourcing $pwre_bin/pwre_function).

> pwre 

shows all possibilites with the pwre function.

Add environment named 'x442x86' (choose any name you like).

> pwre add x442x86

Source root [...] ? /home/robert/x4-4-2/pwr/src  (where /home/robert/x4-4-2 is
replaced with wherever you unpacked the sources)
Build root [...] ? /home/robert/pwr/x4-4-2/rls_dbg  (choose typically .../pwr/version/rls_dbg)
Build type [dbg] ? 
OS [linux] ? 
Hardware [x86] ?
Description  ? robert's environment  (whatever...)

list all existing environments:

> pwre list
-- Defined environments:
   x442x86
--
himBh

Initiate your new environment:

> pwre init x442x86

Now, create the build tree

> pwre create_all_modules

Finally the environment is set up and we can start the build procedure.

3.3 Building Proview
--------------------

To build Proview from scratch 

> pwre build_all_modules

This will build everything and also produces some documentation.

Otherwise Proview is divided in several modules which can be built
separately. The modules are however not independant of eachother.
The modules currently consists of:

abb, bcomp, inor, java, klocknermoeller, nmps, othermanu, profibus, remote,
siemens, ssabox, telemecanique, tlog, wb and xtt.

On top of this there is also a kernel-module under directory src on the top level.

To "move" between the different modules 

> pwre module wb    (for example)

To "move" back to kernel module just do:

> pwre module 

To build all in current module

> pwre build_all

To build parts of current module (for example lib rt in kernel module)

> pwre build lib rt all	  (command syntax build 'branch' 'subbranch' ['phase'])

Each of the modules have their own build tree. When finished your work in a
specific module this must be merged to the common build tree. This is done
via:

> pwre merge 

Some important environment variables:

$pwre_croot    The source root
$pwre_sroot    Source root in current module
$pwre_broot    The build root
$pwr_eexe      The common exe directory in build tree
$pwr_elib      The common library directory in build tree
$pwr_eobj      The common object directory in build tree
$pwr_exe       The exe directory for current module
$pwr_lib       The library directory for current module
 
4. Start using Proview

When finished building it is time to start using Proview. This intention of
this guide is not to show you how. Instead please refer to documentation from 
the proview homepage [www.proview.se]. There are though some final things you
must set up to be able to work with Proview.

Create directory :

/usr/pwrp/adm/db

This is the place that will keeps track of your projects and volumes aswell as
the different Proview-versions you have installed. If you already have a
Proview-version installed then this directory probably exists.

Copy some files to this directory (if they do not already exist)

> cp $pwre_croot/src/tools/pkg/deb/adm/pwr_* /usr/pwrp/adm/db/.

Create a file name pwr_projectlist.dat in this directory and add the following
line to this file:

%base X4.4.2	/home/robert/pwr/X4-4-2/rls_dbg

where the path is your build-root ($pwre_broot).

Add the following two lines to your .bashrc-file:

export pwra_db="/usr/pwrp/adm/db"
source $pwra_db/pwr_setup.sh

Voila, finished !

