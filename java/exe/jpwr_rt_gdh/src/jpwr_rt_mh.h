/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jpwr_rt_Mh */

#ifndef _Included_jpwr_rt_Mh
#define _Included_jpwr_rt_Mh
#ifdef __cplusplus
extern "C" {
#endif
#undef jpwr_rt_Mh_mh_mEventFlags_Return
#define jpwr_rt_Mh_mh_mEventFlags_Return 1L
#undef jpwr_rt_Mh_mh_mEventFlags_Ack
#define jpwr_rt_Mh_mh_mEventFlags_Ack 2L
#undef jpwr_rt_Mh_mh_mEventFlags_Bell
#define jpwr_rt_Mh_mh_mEventFlags_Bell 4L
#undef jpwr_rt_Mh_mh_mEventFlags_Force
#define jpwr_rt_Mh_mh_mEventFlags_Force 8L
#undef jpwr_rt_Mh_mh_mEventFlags_InfoWindow
#define jpwr_rt_Mh_mh_mEventFlags_InfoWindow 16L
#undef jpwr_rt_Mh_mh_mEventFlags_Returned
#define jpwr_rt_Mh_mh_mEventFlags_Returned 32L
#undef jpwr_rt_Mh_mh_mEventFlags_NoObject
#define jpwr_rt_Mh_mh_mEventFlags_NoObject 64L
#undef jpwr_rt_Mh_mh_mEventStatus_NotRet
#define jpwr_rt_Mh_mh_mEventStatus_NotRet 1L
#undef jpwr_rt_Mh_mh_mEventStatus_NotAck
#define jpwr_rt_Mh_mh_mEventStatus_NotAck 2L
#undef jpwr_rt_Mh_mh_mEventStatus_Block
#define jpwr_rt_Mh_mh_mEventStatus_Block 4L
#undef jpwr_rt_Mh_mh_eEventPrio__
#define jpwr_rt_Mh_mh_eEventPrio__ 0L
#undef jpwr_rt_Mh_mh_eEventPrio_A
#define jpwr_rt_Mh_mh_eEventPrio_A 67L
#undef jpwr_rt_Mh_mh_eEventPrio_B
#define jpwr_rt_Mh_mh_eEventPrio_B 66L
#undef jpwr_rt_Mh_mh_eEventPrio_C
#define jpwr_rt_Mh_mh_eEventPrio_C 65L
#undef jpwr_rt_Mh_mh_eEventPrio_D
#define jpwr_rt_Mh_mh_eEventPrio_D 64L
#undef jpwr_rt_Mh_mh_eEventPrio_
#define jpwr_rt_Mh_mh_eEventPrio_ 63L
#undef jpwr_rt_Mh_mh_eEvent__
#define jpwr_rt_Mh_mh_eEvent__ 0L
#undef jpwr_rt_Mh_mh_eEvent_Ack
#define jpwr_rt_Mh_mh_eEvent_Ack 1L
#undef jpwr_rt_Mh_mh_eEvent_Block
#define jpwr_rt_Mh_mh_eEvent_Block 2L
#undef jpwr_rt_Mh_mh_eEvent_Cancel
#define jpwr_rt_Mh_mh_eEvent_Cancel 3L
#undef jpwr_rt_Mh_mh_eEvent_CancelBlock
#define jpwr_rt_Mh_mh_eEvent_CancelBlock 4L
#undef jpwr_rt_Mh_mh_eEvent_Missing
#define jpwr_rt_Mh_mh_eEvent_Missing 5L
#undef jpwr_rt_Mh_mh_eEvent_Reblock
#define jpwr_rt_Mh_mh_eEvent_Reblock 6L
#undef jpwr_rt_Mh_mh_eEvent_Return
#define jpwr_rt_Mh_mh_eEvent_Return 7L
#undef jpwr_rt_Mh_mh_eEvent_Unblock
#define jpwr_rt_Mh_mh_eEvent_Unblock 8L
#undef jpwr_rt_Mh_mh_eEvent_Info
#define jpwr_rt_Mh_mh_eEvent_Info 32L
#undef jpwr_rt_Mh_mh_eEvent_Alarm
#define jpwr_rt_Mh_mh_eEvent_Alarm 64L
#undef jpwr_rt_Mh_mh_eEvent_
#define jpwr_rt_Mh_mh_eEvent_ 65L
/* Inaccessible static: lastMhrEvent */
/* Inaccessible static: newAlarmArrived */
/* Inaccessible static: newEventArrived */
/* Inaccessible static: clearAlarmList */
/* Inaccessible static: nrOfAlarmsArrived */
/* Inaccessible static: maxNoOfAlarms */
/* Inaccessible static: maxNoOfEvents */
/* Inaccessible static: initDone */
/* Inaccessible static: currentSystemGroup */
/* Inaccessible static: currentUser */
/* Inaccessible static: currentPassword */
/* Inaccessible static: currentPrivilege */
/*
 * Class:     jpwr_rt_Mh
 * Method:    initIDs
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jpwr_rt_Mh_initIDs
  (JNIEnv *, jclass);

/*
 * Class:     jpwr_rt_Mh
 * Method:    outunitAck
 * Signature: (Ljpwr/rt/MhrsEventId;)Ljpwr/rt/PwrtStatus;
 */
JNIEXPORT jobject JNICALL Java_jpwr_rt_Mh_outunitAck
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jpwr_rt_Mh
 * Method:    outunitConnect
 * Signature: (Ljpwr/rt/PwrtObjid;)Ljpwr/rt/PwrtStatus;
 */
JNIEXPORT jobject JNICALL Java_jpwr_rt_Mh_outunitConnect
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jpwr_rt_Mh
 * Method:    outunitDisConnect
 * Signature: ()Ljpwr/rt/PwrtStatus;
 */
JNIEXPORT jobject JNICALL Java_jpwr_rt_Mh_outunitDisConnect
  (JNIEnv *, jobject);

/*
 * Class:     jpwr_rt_Mh
 * Method:    outunitReceive
 * Signature: ()Ljpwr/rt/PwrtStatus;
 */
JNIEXPORT jobject JNICALL Java_jpwr_rt_Mh_outunitReceive
  (JNIEnv *, jobject);

/*
 * Class:     jpwr_rt_Mh
 * Method:    outunitUnBlock
 * Signature: (Ljpwr/rt/PwrtObjid;)Ljpwr/rt/PwrtStatus;
 */
JNIEXPORT jobject JNICALL Java_jpwr_rt_Mh_outunitUnBlock
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jpwr_rt_Mh
 * Method:    outunitUpdate
 * Signature: ()Ljpwr/rt/PwrtStatus;
 */
JNIEXPORT jobject JNICALL Java_jpwr_rt_Mh_outunitUpdate
  (JNIEnv *, jobject);

/*
 * Class:     jpwr_rt_Mh
 * Method:    translateFilename
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jpwr_rt_Mh_translateFilename
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
