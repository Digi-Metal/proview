/* 
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2014 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and 
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of Proview (the version used to produce the 
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */


/**
 * Title:        <p>
 * Description:  Utöka befintliga JButton till PwrButton.<p>
 * Copyright:    Copyright (c) <p>
 * Company:      <p>
 * @author
 * @version 1.0
 */

package jpwr.jop;
import javax.swing.*;
import java.awt.event.*;
import java.awt.*;
import jpwr.rt.*;

public class JopFrame extends JFrame implements GdhApplIfc
{
  public JopSession session;
  public JopEngine engine;
  public PwrtAttrRef utilityAref = null;

  public JopFrame()
  {
    try {
      jbInit();
    }
    catch(Exception e) {
      e.printStackTrace();
    }
  }

  public JopFrame( JopSession session, String instance) {
    this.session = session;
    engine = session.getEngine();
    if ( instance != null) {
      engine.setInstance( instance);

      CdhrAttrRef oret = engine.gdh.nameToAttrRef( instance);
      if ( oret.oddSts()) {
	utilityAref = oret.aref;
      }
    }
    enableEvents(AWTEvent.WINDOW_EVENT_MASK);
  }

  private void jbInit() throws Exception {
    engine = new JopEngine(1000, this);
    session = new JopSession( engine, (Object) this);
    enableEvents(AWTEvent.WINDOW_EVENT_MASK);
    setDefaultCloseOperation( DISPOSE_ON_CLOSE);
  }

  // Exit when window is closed
  protected void processWindowEvent(WindowEvent e) {
    super.processWindowEvent(e);
    if (e.getID() == WindowEvent.WINDOW_CLOSING) {
      session.removeUtility( this);
      System.out.println( "JopFrame closing down...");
      engine.removeWindow( this);
      // System.exit(0);
    }
  }

  // GdhApplIfc function
  public String getPwrHost() {
    return (String)null;
  }
}








