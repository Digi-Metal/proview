! 
!  Proview   Open Source Process Control.
!  Copyright (C) 2005-2014 SSAB AB.
! 
!  This file is part of Proview.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with Proview. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking Proview statically or dynamically with other modules is
!  making a combined work based on Proview. Thus, the terms and 
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  Proview give you permission to, from the build function in the
!  Proview Configurator, combine Proview with modules generated by the
!  Proview PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of Proview (the version used to produce the 
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_currentindex.wb_load -- Defines the class CurrentIndex.
!
SObject NMps:Class
!/**
!  @Version 1.0
!  @Group MaterialPlanning,Plc
!  @Summary Get the index of the current data object in a NMpsCell or a CLoop subwindow.
!
!  Get the index of the current data object in a NMpsCell or a CLoop subwindow.
!  @image orm_currentindex_fo.gif
!  The object is used in a NMpsCell or a CLoop subwindow. 
!
!  A cell subwindow is exectuted one time for each data object in the cell, 
!  in one plc scan, plus one initiate execution.
!  The output hold the index of the currently executed data object.
!  In the initiate execution, the current index is zero.
!
!  In a cloop subwindow, CurrentIndex keeps the index of the current loop.
! @b See also
!  @classlink NMpsCell nmps_nmpscell.html
!  @classlink CLoop nmps_cloop.html
!  @classlink CurrentData nmps_currentdata.html
!*/
  Object CurrentIndex $ClassDef 12
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_DevBodyOnly
      Attr PopEditor = 2
    EndBody
    !
    ! CURRENTINDEX Runtime Body
    !
    Object RtBody $ObjBodyDef 1
      Body SysBody
        Attr StructName = "currentindex"
      EndBody
      !/**
      ! The index of the currently executed data object.
      !*/
      Object DataCurrent_Index $Output 1
        Body SysBody
          Attr PgmName = "CurrentIndex"
	  Attr Flags |= PWR_MASK_STATE
	  Attr Flags |= PWR_MASK_RTVIRTUAL
	  Attr Flags |= PWR_MASK_DEVBODYREF
	  Attr Flags |= PWR_MASK_INVISIBLE
          Attr TypeRef = "pwrs:Type-$Float32"
          Attr GraphName = "Out"
        EndBody
      EndObject
    EndObject
    !
    ! DATACOPY Development Body
    !
    Object GraphPlcNode $GraphPlcNode
      Body SysBody
        Attr object_type = 228
        Attr parameters[0] = 0
        Attr parameters[1] = 0
        Attr parameters[2] = 1
        Attr parameters[3] = 0
        Attr subwindows = 0
        Attr graphmethod = 0
        Attr graphindex = 0
        Attr default_mask[0] = 0
        Attr default_mask[1] = 1
        Attr segname_annotation = 1
        Attr compmethod = 44
        Attr compindex = 0
        Attr tracemethod = 0
        Attr traceindex = 0
	Attr executeordermethod = 2
        Attr objname = "CurrIndex"
        Attr graphname = "CurrIndex"
        Attr debugpar = ""
      EndBody
    EndObject
    Object DevBody $ObjBodyDef 2
      Object CellObject $Intern 1
        Body SysBody
          Attr PgmName = "CellObject"
          Attr TypeRef = "pwrs:Type-$Objid"
	  Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object PlcNode $Buffer 2
        Body SysBody
          Attr Class = pwr_eClass_PlcNode
	  Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
    EndObject
  EndObject
EndSObject
