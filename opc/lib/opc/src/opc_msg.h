/* opc_msg.h
   Generated by wsdl2h 1.2.9d from ./opc.wsdl and typemap.dat
   2007-02-26 09:40:26 GMT
   Copyright (C) 2001-2006 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://opcfoundation.org/webservices/XMLDA/1.0/                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://opcfoundation.org/webservices/XMLDA/1.0/"

*/

//gsoap ns1   schema namespace:	http://opcfoundation.org/webservices/XMLDA/1.0/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "xs:QName"
typedef std::string xsd__QName;

/// Primitive built-in type "xs:decimal"
typedef std::string xsd__decimal;


//  Forward declaration of class ns1__ReplyBase.
class ns1__ReplyBase;

//  Forward declaration of class ns1__ServerStatus.
class ns1__ServerStatus;

//  Forward declaration of class ns1__RequestOptions.
class ns1__RequestOptions;

//  Forward declaration of class ns1__ReadRequestItemList.
class ns1__ReadRequestItemList;

//  Forward declaration of class ns1__ReadRequestItem.
class ns1__ReadRequestItem;

//  Forward declaration of class ns1__ReplyItemList.
class ns1__ReplyItemList;

//  Forward declaration of class ns1__ItemValue.
class ns1__ItemValue;

//  Forward declaration of class ns1__OPCQuality.
class ns1__OPCQuality;

//  Forward declaration of class ns1__OPCError.
class ns1__OPCError;

//  Forward declaration of class ns1__ArrayOfFloat.
class ns1__ArrayOfFloat;

//  Forward declaration of class ns1__ArrayOfInt.
class ns1__ArrayOfInt;

//  Forward declaration of class ns1__ArrayOfUnsignedInt.
class ns1__ArrayOfUnsignedInt;

//  Forward declaration of class ns1__ArrayOfLong.
class ns1__ArrayOfLong;

//  Forward declaration of class ns1__ArrayOfUnsignedLong.
class ns1__ArrayOfUnsignedLong;

//  Forward declaration of class ns1__ArrayOfDouble.
class ns1__ArrayOfDouble;

//  Forward declaration of class ns1__ArrayOfUnsignedShort.
class ns1__ArrayOfUnsignedShort;

//  Forward declaration of class ns1__ArrayOfBoolean.
class ns1__ArrayOfBoolean;

//  Forward declaration of class ns1__ArrayOfString.
class ns1__ArrayOfString;

//  Forward declaration of class ns1__ArrayOfDateTime.
class ns1__ArrayOfDateTime;

//  Forward declaration of class ns1__ArrayOfAnyType.
class ns1__ArrayOfAnyType;

//  Forward declaration of class ns1__ArrayOfDecimal.
class ns1__ArrayOfDecimal;

//  Forward declaration of class ns1__ArrayOfByte.
class ns1__ArrayOfByte;

//  Forward declaration of class ns1__ArrayOfShort.
class ns1__ArrayOfShort;

//  Forward declaration of class ns1__WriteRequestItemList.
class ns1__WriteRequestItemList;

//  Forward declaration of class ns1__SubscribeRequestItemList.
class ns1__SubscribeRequestItemList;

//  Forward declaration of class ns1__SubscribeRequestItem.
class ns1__SubscribeRequestItem;

//  Forward declaration of class ns1__SubscribeReplyItemList.
class ns1__SubscribeReplyItemList;

//  Forward declaration of class ns1__SubscribeItemValue.
class ns1__SubscribeItemValue;

//  Forward declaration of class ns1__SubscribePolledRefreshReplyItemList.
class ns1__SubscribePolledRefreshReplyItemList;

//  Forward declaration of class ns1__BrowseElement.
class ns1__BrowseElement;

//  Forward declaration of class ns1__ItemProperty.
class ns1__ItemProperty;

//  Forward declaration of class ns1__ItemIdentifier.
class ns1__ItemIdentifier;

//  Forward declaration of class ns1__PropertyReplyList.
class ns1__PropertyReplyList;

//  Forward declaration of class _ns1__GetStatus.
class _ns1__GetStatus;

//  Forward declaration of class _ns1__GetStatusResponse.
class _ns1__GetStatusResponse;

//  Forward declaration of class _ns1__Read.
class _ns1__Read;

//  Forward declaration of class _ns1__ReadResponse.
class _ns1__ReadResponse;

//  Forward declaration of class _ns1__Write.
class _ns1__Write;

//  Forward declaration of class _ns1__WriteResponse.
class _ns1__WriteResponse;

//  Forward declaration of class _ns1__Subscribe.
class _ns1__Subscribe;

//  Forward declaration of class _ns1__SubscribeResponse.
class _ns1__SubscribeResponse;

//  Forward declaration of class _ns1__SubscriptionPolledRefresh.
class _ns1__SubscriptionPolledRefresh;

//  Forward declaration of class _ns1__SubscriptionPolledRefreshResponse.
class _ns1__SubscriptionPolledRefreshResponse;

//  Forward declaration of class _ns1__SubscriptionCancel.
class _ns1__SubscriptionCancel;

//  Forward declaration of class _ns1__SubscriptionCancelResponse.
class _ns1__SubscriptionCancelResponse;

//  Forward declaration of class _ns1__Browse.
class _ns1__Browse;

//  Forward declaration of class _ns1__BrowseResponse.
class _ns1__BrowseResponse;

//  Forward declaration of class _ns1__GetProperties.
class _ns1__GetProperties;

//  Forward declaration of class _ns1__GetPropertiesResponse.
class _ns1__GetPropertiesResponse;

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":serverState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__serverState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__serverState
{
	ns1__serverState__running,	///< xs:string value="running"
	ns1__serverState__failed,	///< xs:string value="failed"
	ns1__serverState__noConfig,	///< xs:string value="noConfig"
	ns1__serverState__suspended,	///< xs:string value="suspended"
	ns1__serverState__test,	///< xs:string value="test"
	ns1__serverState__commFault,	///< xs:string value="commFault"
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":interfaceVersion is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__interfaceVersion' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__interfaceVersion
{
	ns1__interfaceVersion__XML_USCOREDA_USCOREVersion_USCORE1_USCORE0,	///< xs:string value="XML_DA_Version_1_0"
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":qualityBits is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__qualityBits' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__qualityBits
{
	ns1__qualityBits__bad,	///< xs:string value="bad"
	ns1__qualityBits__badConfigurationError,	///< xs:string value="badConfigurationError"
	ns1__qualityBits__badNotConnected,	///< xs:string value="badNotConnected"
	ns1__qualityBits__badDeviceFailure,	///< xs:string value="badDeviceFailure"
	ns1__qualityBits__badSensorFailure,	///< xs:string value="badSensorFailure"
	ns1__qualityBits__badLastKnownValue,	///< xs:string value="badLastKnownValue"
	ns1__qualityBits__badCommFailure,	///< xs:string value="badCommFailure"
	ns1__qualityBits__badOutOfService,	///< xs:string value="badOutOfService"
	ns1__qualityBits__badWaitingForInitialData,	///< xs:string value="badWaitingForInitialData"
	ns1__qualityBits__uncertain,	///< xs:string value="uncertain"
	ns1__qualityBits__uncertainLastUsableValue,	///< xs:string value="uncertainLastUsableValue"
	ns1__qualityBits__uncertainSensorNotAccurate,	///< xs:string value="uncertainSensorNotAccurate"
	ns1__qualityBits__uncertainEUExceeded,	///< xs:string value="uncertainEUExceeded"
	ns1__qualityBits__uncertainSubNormal,	///< xs:string value="uncertainSubNormal"
	ns1__qualityBits__good,	///< xs:string value="good"
	ns1__qualityBits__goodLocalOverride,	///< xs:string value="goodLocalOverride"
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":limitBits is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__limitBits' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__limitBits
{
	ns1__limitBits__none,	///< xs:string value="none"
	ns1__limitBits__low,	///< xs:string value="low"
	ns1__limitBits__high,	///< xs:string value="high"
	ns1__limitBits__constant,	///< xs:string value="constant"
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":browseFilter is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns1__browseFilter' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__browseFilter
{
	ns1__browseFilter__all,	///< xs:string value="all"
	ns1__browseFilter__branch,	///< xs:string value="branch"
	ns1__browseFilter__item,	///< xs:string value="item"
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyBase is a complexType.
class ns1__ReplyBase
{ public:
/// Attribute RcvTime of type xs:dateTime.
   @time_t                               RcvTime                        1;	///< Required attribute.
/// Attribute ReplyTime of type xs:dateTime.
   @time_t                               ReplyTime                      1;	///< Required attribute.
/// Attribute ClientRequestHandle of type xs:string.
   @std::string*                         ClientRequestHandle            0;	///< Optional attribute.
/// Attribute RevisedLocaleID of type xs:string.
   @std::string*                         RevisedLocaleID                0;	///< Optional attribute.
/// Attribute ServerState of type "http://opcfoundation.org/webservices/XMLDA/1.0/":serverState.
   @enum ns1__serverState                ServerState                    1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ServerStatus is a complexType.
class ns1__ServerStatus
{ public:
/// Element StatusInfo of type xs:string.
    std::string*                         StatusInfo                     0;	///< Optional element.
/// Element VendorInfo of type xs:string.
    std::string*                         VendorInfo                     0;	///< Optional element.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > SupportedLocaleIDs             0;
/// Vector of enum ns1__interfaceVersion with length 0..unbounded
    std::vector<enum ns1__interfaceVersion> SupportedInterfaceVersions     0;
/// Attribute StartTime of type xs:dateTime.
   @time_t                               StartTime                      1;	///< Required attribute.
/// Attribute ProductVersion of type xs:string.
   @std::string*                         ProductVersion                 0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":RequestOptions is a complexType.
class ns1__RequestOptions
{ public:
/// Attribute ReturnErrorText of type xs:boolean.
   @bool*                                ReturnErrorText                0;	///< Optional attribute.
/// Attribute ReturnDiagnosticInfo of type xs:boolean.
   @bool*                                ReturnDiagnosticInfo           0;	///< Optional attribute.
/// Attribute ReturnItemTime of type xs:boolean.
   @bool*                                ReturnItemTime                 0;	///< Optional attribute.
/// Attribute ReturnItemPath of type xs:boolean.
   @bool*                                ReturnItemPath                 0;	///< Optional attribute.
/// Attribute ReturnItemName of type xs:boolean.
   @bool*                                ReturnItemName                 0;	///< Optional attribute.
/// Attribute RequestDeadline of type xs:dateTime.
   @time_t*                              RequestDeadline                0;	///< Optional attribute.
/// Attribute ClientRequestHandle of type xs:string.
   @std::string*                         ClientRequestHandle            0;	///< Optional attribute.
/// Attribute LocaleID of type xs:string.
   @std::string*                         LocaleID                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ReadRequestItemList is a complexType.
class ns1__ReadRequestItemList
{ public:
/// Vector of ns1__ReadRequestItem* with length 0..unbounded
    std::vector<ns1__ReadRequestItem*  > Items                          0;
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ReqType of type xs:QName.
   @xsd__QName*                          ReqType                        0;	///< Optional attribute.
/// Attribute MaxAge of type xs:int.
   @int*                                 MaxAge                         0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ReadRequestItem is a complexType.
class ns1__ReadRequestItem
{ public:
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ReqType of type xs:QName.
   @xsd__QName*                          ReqType                        0;	///< Optional attribute.
/// Attribute ItemName of type xs:string.
   @std::string*                         ItemName                       0;	///< Optional attribute.
/// Attribute ClientItemHandle of type xs:string.
   @std::string*                         ClientItemHandle               0;	///< Optional attribute.
/// Attribute MaxAge of type xs:int.
   @int*                                 MaxAge                         0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyItemList is a complexType.
class ns1__ReplyItemList
{ public:
/// Vector of ns1__ItemValue* with length 0..unbounded
    std::vector<ns1__ItemValue*        > Items                          0;
/// Attribute Reserved of type xs:string.
   @std::string*                         Reserved                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ItemValue is a complexType.
class ns1__ItemValue
{ public:
/// Element DiagnosticInfo of type xs:string.
    std::string*                         DiagnosticInfo                 0;	///< Optional element.
/// Element 'Value' has no type or ref: assuming XML content.
    _XML                                 Value                          0;	///< Optional element.
/// Element Quality of type "http://opcfoundation.org/webservices/XMLDA/1.0/":OPCQuality.
    ns1__OPCQuality*                     Quality                        0;	///< Optional element.
/// Attribute ValueTypeQualifier of type xs:QName.
   @xsd__QName*                          ValueTypeQualifier             0;	///< Optional attribute.
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ItemName of type xs:string.
   @std::string*                         ItemName                       0;	///< Optional attribute.
/// Attribute ClientItemHandle of type xs:string.
   @std::string*                         ClientItemHandle               0;	///< Optional attribute.
/// Attribute Timestamp of type xs:dateTime.
   @time_t*                              Timestamp                      0;	///< Optional attribute.
/// Attribute ResultID of type xs:QName.
   @xsd__QName*                          ResultID                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":OPCQuality is a complexType.
class ns1__OPCQuality
{ public:
/// Attribute QualityField of type "http://opcfoundation.org/webservices/XMLDA/1.0/":qualityBits.
   @enum ns1__qualityBits*               QualityField                   0;	///< Optional attribute.
/// Attribute LimitField of type "http://opcfoundation.org/webservices/XMLDA/1.0/":limitBits.
   @enum ns1__limitBits*                 LimitField                     0;	///< Optional attribute.
/// Attribute VendorField of type xs:unsignedByte.
   @unsigned short*                      VendorField                    0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":OPCError is a complexType.
class ns1__OPCError
{ public:
/// Element Text of type xs:string.
    std::string*                         Text                           0;	///< Optional element.
/// Attribute ID of type xs:QName.
   @xsd__QName                           ID                             1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfFloat is a complexType.
class ns1__ArrayOfFloat
{ public:
/// Vector of float with length 0..unbounded
    std::vector<float                  > float_                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfInt is a complexType.
class ns1__ArrayOfInt
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > int_                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfUnsignedInt is a complexType.
class ns1__ArrayOfUnsignedInt
{ public:
/// Vector of unsigned int with length 0..unbounded
    std::vector<unsigned int           > unsignedInt                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfLong is a complexType.
class ns1__ArrayOfLong
{ public:
/// Vector of LONG64 with length 0..unbounded
    std::vector<LONG64                 > long_                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfUnsignedLong is a complexType.
class ns1__ArrayOfUnsignedLong
{ public:
/// Vector of ULONG64 with length 0..unbounded
    std::vector<ULONG64                > unsignedLong                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfDouble is a complexType.
class ns1__ArrayOfDouble
{ public:
/// Vector of double with length 0..unbounded
    std::vector<double                 > double_                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfUnsignedShort is a complexType.
class ns1__ArrayOfUnsignedShort
{ public:
/// Vector of unsigned short with length 0..unbounded
    std::vector<unsigned short         > unsignedShort                  0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfBoolean is a complexType.
class ns1__ArrayOfBoolean
{ public:
/// Vector of bool with length 0..unbounded
    std::vector<bool                   > boolean                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfString is a complexType.
class ns1__ArrayOfString
{ public:
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > string                         0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfDateTime is a complexType.
class ns1__ArrayOfDateTime
{ public:
/// Vector of time_t with length 0..unbounded
    std::vector<time_t                 > dateTime                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfAnyType is a complexType.
class ns1__ArrayOfAnyType
{ public:
/// Element 'anyType' has no type or ref: assuming XML content.
/// Vector of XML with length 0..unbounded
    std::vector<_XML                   > anyType                        0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfDecimal is a complexType.
class ns1__ArrayOfDecimal
{ public:
/// Vector of xsd__decimal with length 0..unbounded
    std::vector<xsd__decimal           > decimal                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfByte is a complexType.
class ns1__ArrayOfByte
{ public:
/// Vector of char with length 0..unbounded
    std::vector<char                   > byte                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ArrayOfShort is a complexType.
class ns1__ArrayOfShort
{ public:
/// Vector of short with length 0..unbounded
    std::vector<short                  > short_                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":WriteRequestItemList is a complexType.
class ns1__WriteRequestItemList
{ public:
/// Vector of ns1__ItemValue* with length 0..unbounded
    std::vector<ns1__ItemValue*        > Items                          0;
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribeRequestItemList is a complexType.
class ns1__SubscribeRequestItemList
{ public:
/// Vector of ns1__SubscribeRequestItem* with length 0..unbounded
    std::vector<ns1__SubscribeRequestItem*> Items                          0;
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ReqType of type xs:QName.
   @xsd__QName*                          ReqType                        0;	///< Optional attribute.
/// Attribute Deadband of type xs:float.
   @float*                               Deadband                       0;	///< Optional attribute.
/// Attribute RequestedSamplingRate of type xs:int.
   @int*                                 RequestedSamplingRate          0;	///< Optional attribute.
/// Attribute EnableBuffering of type xs:boolean.
   @bool*                                EnableBuffering                0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribeRequestItem is a complexType.
class ns1__SubscribeRequestItem
{ public:
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ReqType of type xs:QName.
   @xsd__QName*                          ReqType                        0;	///< Optional attribute.
/// Attribute ItemName of type xs:string.
   @std::string*                         ItemName                       0;	///< Optional attribute.
/// Attribute ClientItemHandle of type xs:string.
   @std::string*                         ClientItemHandle               0;	///< Optional attribute.
/// Attribute Deadband of type xs:float.
   @float*                               Deadband                       0;	///< Optional attribute.
/// Attribute RequestedSamplingRate of type xs:int.
   @int*                                 RequestedSamplingRate          0;	///< Optional attribute.
/// Attribute EnableBuffering of type xs:boolean.
   @bool*                                EnableBuffering                0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribeReplyItemList is a complexType.
class ns1__SubscribeReplyItemList
{ public:
/// Vector of ns1__SubscribeItemValue* with length 0..unbounded
    std::vector<ns1__SubscribeItemValue*> Items                          0;
/// Attribute RevisedSamplingRate of type xs:int.
   @int*                                 RevisedSamplingRate            0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribeItemValue is a complexType.
class ns1__SubscribeItemValue
{ public:
/// Element ItemValue of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ItemValue.
    ns1__ItemValue*                      ItemValue                      0;	///< Optional element.
/// Attribute RevisedSamplingRate of type xs:int.
   @int*                                 RevisedSamplingRate            0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribePolledRefreshReplyItemList is a complexType.
class ns1__SubscribePolledRefreshReplyItemList
{ public:
/// Vector of ns1__ItemValue* with length 0..unbounded
    std::vector<ns1__ItemValue*        > Items                          0;
/// Attribute SubscriptionHandle of type xs:string.
   @std::string*                         SubscriptionHandle             0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":BrowseElement is a complexType.
class ns1__BrowseElement
{ public:
/// Vector of ns1__ItemProperty* with length 0..unbounded
    std::vector<ns1__ItemProperty*     > Properties                     0;
/// Attribute Name of type xs:string.
   @std::string*                         Name                           0;	///< Optional attribute.
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ItemName of type xs:string.
   @std::string*                         ItemName                       0;	///< Optional attribute.
/// Attribute IsItem of type xs:boolean.
   @bool                                 IsItem                         1;	///< Required attribute.
/// Attribute HasChildren of type xs:boolean.
   @bool                                 HasChildren                    1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ItemProperty is a complexType.
class ns1__ItemProperty
{ public:
/// Element 'Value' has no type or ref: assuming XML content.
    _XML                                 Value                          0;	///< Optional element.
/// Attribute Name of type xs:QName.
   @xsd__QName                           Name                           1;	///< Required attribute.
/// Attribute Description of type xs:string.
   @std::string*                         Description                    0;	///< Optional attribute.
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ItemName of type xs:string.
   @std::string*                         ItemName                       0;	///< Optional attribute.
/// Attribute ResultID of type xs:QName.
   @xsd__QName*                          ResultID                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ItemIdentifier is a complexType.
class ns1__ItemIdentifier
{ public:
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ItemName of type xs:string.
   @std::string*                         ItemName                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":PropertyReplyList is a complexType.
class ns1__PropertyReplyList
{ public:
/// Vector of ns1__ItemProperty* with length 0..unbounded
    std::vector<ns1__ItemProperty*     > Properties                     0;
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ItemName of type xs:string.
   @std::string*                         ItemName                       0;	///< Optional attribute.
/// Attribute ResultID of type xs:QName.
   @xsd__QName*                          ResultID                       0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":GetStatus of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":GetStatus is a complexType.
class _ns1__GetStatus
{ public:
/// Attribute LocaleID of type xs:string.
   @std::string*                         LocaleID                       0;	///< Optional attribute.
/// Attribute ClientRequestHandle of type xs:string.
   @std::string*                         ClientRequestHandle            0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":GetStatusResponse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":GetStatusResponse is a complexType.
class _ns1__GetStatusResponse
{ public:
/// Element GetStatusResult of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyBase.
    ns1__ReplyBase*                      GetStatusResult                0;	///< Optional element.
/// Element Status of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ServerStatus.
    ns1__ServerStatus*                   Status                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":Read of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":Read is a complexType.
class _ns1__Read
{ public:
/// Element Options of type "http://opcfoundation.org/webservices/XMLDA/1.0/":RequestOptions.
    ns1__RequestOptions*                 Options                        0;	///< Optional element.
/// Element ItemList of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReadRequestItemList.
    ns1__ReadRequestItemList*            ItemList                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":ReadResponse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":ReadResponse is a complexType.
class _ns1__ReadResponse
{ public:
/// Element ReadResult of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyBase.
    ns1__ReplyBase*                      ReadResult                     0;	///< Optional element.
/// Element RItemList of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyItemList.
    ns1__ReplyItemList*                  RItemList                      0;	///< Optional element.
/// Vector of ns1__OPCError* with length 0..unbounded
    std::vector<ns1__OPCError*         > Errors                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":Write of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":Write is a complexType.
class _ns1__Write
{ public:
/// Element Options of type "http://opcfoundation.org/webservices/XMLDA/1.0/":RequestOptions.
    ns1__RequestOptions*                 Options                        0;	///< Optional element.
/// Element ItemList of type "http://opcfoundation.org/webservices/XMLDA/1.0/":WriteRequestItemList.
    ns1__WriteRequestItemList*           ItemList                       0;	///< Optional element.
/// Attribute ReturnValuesOnReply of type xs:boolean.
   @bool                                 ReturnValuesOnReply            1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":WriteResponse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":WriteResponse is a complexType.
class _ns1__WriteResponse
{ public:
/// Element WriteResult of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyBase.
    ns1__ReplyBase*                      WriteResult                    0;	///< Optional element.
/// Element RItemList of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyItemList.
    ns1__ReplyItemList*                  RItemList                      0;	///< Optional element.
/// Vector of ns1__OPCError* with length 0..unbounded
    std::vector<ns1__OPCError*         > Errors                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":Subscribe of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":Subscribe is a complexType.
class _ns1__Subscribe
{ public:
/// Element Options of type "http://opcfoundation.org/webservices/XMLDA/1.0/":RequestOptions.
    ns1__RequestOptions*                 Options                        0;	///< Optional element.
/// Element ItemList of type "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribeRequestItemList.
    ns1__SubscribeRequestItemList*       ItemList                       0;	///< Optional element.
/// Attribute ReturnValuesOnReply of type xs:boolean.
   @bool                                 ReturnValuesOnReply            1;	///< Required attribute.
/// Attribute SubscriptionPingRate of type xs:int.
   @int*                                 SubscriptionPingRate           0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribeResponse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribeResponse is a complexType.
class _ns1__SubscribeResponse
{ public:
/// Element SubscribeResult of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyBase.
    ns1__ReplyBase*                      SubscribeResult                0;	///< Optional element.
/// Element RItemList of type "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscribeReplyItemList.
    ns1__SubscribeReplyItemList*         RItemList                      0;	///< Optional element.
/// Vector of ns1__OPCError* with length 0..unbounded
    std::vector<ns1__OPCError*         > Errors                         0;
/// Attribute ServerSubHandle of type xs:string.
   @std::string*                         ServerSubHandle                0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscriptionPolledRefresh of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscriptionPolledRefresh is a complexType.
class _ns1__SubscriptionPolledRefresh
{ public:
/// Element Options of type "http://opcfoundation.org/webservices/XMLDA/1.0/":RequestOptions.
    ns1__RequestOptions*                 Options                        0;	///< Optional element.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > ServerSubHandles               0;
/// Attribute HoldTime of type xs:dateTime.
   @time_t*                              HoldTime                       0;	///< Optional attribute.
/// Attribute WaitTime of type xs:int.
   @int*                                 WaitTime                       0;	///< Optional attribute.
/// Attribute ReturnAllItems of type xs:boolean.
   @bool*                                ReturnAllItems                 0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscriptionPolledRefreshResponse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscriptionPolledRefreshResponse is a complexType.
class _ns1__SubscriptionPolledRefreshResponse
{ public:
/// Element SubscriptionPolledRefreshResult of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyBase.
    ns1__ReplyBase*                      SubscriptionPolledRefreshResult 0;	///< Optional element.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > InvalidServerSubHandles        0;
/// Vector of ns1__SubscribePolledRefreshReplyItemList* with length 0..unbounded
    std::vector<ns1__SubscribePolledRefreshReplyItemList*> RItemList                      0;
/// Vector of ns1__OPCError* with length 0..unbounded
    std::vector<ns1__OPCError*         > Errors                         0;
/// Attribute DataBufferOverflow of type xs:boolean.
   @bool*                                DataBufferOverflow             0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscriptionCancel of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscriptionCancel is a complexType.
class _ns1__SubscriptionCancel
{ public:
/// Attribute ServerSubHandle of type xs:string.
   @std::string*                         ServerSubHandle                0;	///< Optional attribute.
/// Attribute ClientRequestHandle of type xs:string.
   @std::string*                         ClientRequestHandle            0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscriptionCancelResponse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":SubscriptionCancelResponse is a complexType.
class _ns1__SubscriptionCancelResponse
{ public:
/// Attribute ClientRequestHandle of type xs:string.
   @std::string*                         ClientRequestHandle            0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":Browse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":Browse is a complexType.
class _ns1__Browse
{ public:
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > PropertyNames                  0;
/// Attribute LocaleID of type xs:string.
   @std::string*                         LocaleID                       0;	///< Optional attribute.
/// Attribute ClientRequestHandle of type xs:string.
   @std::string*                         ClientRequestHandle            0;	///< Optional attribute.
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ItemName of type xs:string.
   @std::string*                         ItemName                       0;	///< Optional attribute.
/// Attribute ContinuationPoint of type xs:string.
   @std::string*                         ContinuationPoint              0;	///< Optional attribute.
/// Attribute MaxElementsReturned of type xs:int.
   @int*                                 MaxElementsReturned            0;	///< Optional attribute.
/// Attribute BrowseFilter of type "http://opcfoundation.org/webservices/XMLDA/1.0/":browseFilter.
   @enum ns1__browseFilter*              BrowseFilter                   0;	///< Optional attribute.
/// Attribute ElementNameFilter of type xs:string.
   @std::string*                         ElementNameFilter              0;	///< Optional attribute.
/// Attribute VendorFilter of type xs:string.
   @std::string*                         VendorFilter                   0;	///< Optional attribute.
/// Attribute ReturnAllProperties of type xs:boolean.
   @bool*                                ReturnAllProperties            0;	///< Optional attribute.
/// Attribute ReturnPropertyValues of type xs:boolean.
   @bool*                                ReturnPropertyValues           0;	///< Optional attribute.
/// Attribute ReturnErrorText of type xs:boolean.
   @bool*                                ReturnErrorText                0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":BrowseResponse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":BrowseResponse is a complexType.
class _ns1__BrowseResponse
{ public:
/// Element BrowseResult of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyBase.
    ns1__ReplyBase*                      BrowseResult                   0;	///< Optional element.
/// Vector of ns1__BrowseElement* with length 0..unbounded
    std::vector<ns1__BrowseElement*    > Elements                       0;
/// Vector of ns1__OPCError* with length 0..unbounded
    std::vector<ns1__OPCError*         > Errors                         0;
/// Attribute ContinuationPoint of type xs:string.
   @std::string*                         ContinuationPoint              0;	///< Optional attribute.
/// Attribute MoreElements of type xs:boolean.
   @bool*                                MoreElements                   0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":GetProperties of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":GetProperties is a complexType.
class _ns1__GetProperties
{ public:
/// Vector of ns1__ItemIdentifier* with length 0..unbounded
    std::vector<ns1__ItemIdentifier*   > ItemIDs                        0;
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > PropertyNames                  0;
/// Attribute LocaleID of type xs:string.
   @std::string*                         LocaleID                       0;	///< Optional attribute.
/// Attribute ClientRequestHandle of type xs:string.
   @std::string*                         ClientRequestHandle            0;	///< Optional attribute.
/// Attribute ItemPath of type xs:string.
   @std::string*                         ItemPath                       0;	///< Optional attribute.
/// Attribute ReturnAllProperties of type xs:boolean.
   @bool*                                ReturnAllProperties            0;	///< Optional attribute.
/// Attribute ReturnPropertyValues of type xs:boolean.
   @bool*                                ReturnPropertyValues           0;	///< Optional attribute.
/// Attribute ReturnErrorText of type xs:boolean.
   @bool*                                ReturnErrorText                0;	///< Optional attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://opcfoundation.org/webservices/XMLDA/1.0/":GetPropertiesResponse of complexType.

/// "http://opcfoundation.org/webservices/XMLDA/1.0/":GetPropertiesResponse is a complexType.
class _ns1__GetPropertiesResponse
{ public:
/// Element GetPropertiesResult of type "http://opcfoundation.org/webservices/XMLDA/1.0/":ReplyBase.
    ns1__ReplyBase*                      GetPropertiesResult            0;	///< Optional element.
/// Vector of ns1__PropertyReplyList* with length 0..unbounded
    std::vector<ns1__PropertyReplyList*> PropertyLists                  0;
/// Vector of ns1__OPCError* with length 0..unbounded
    std::vector<ns1__OPCError*         > Errors                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	Service 
//gsoap ns1  service type:	Service 
//gsoap ns1  service namespace:	http://opcfoundation.org/webservices/XMLDA/1.0/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref Service

*/

/**

@page Service Binding "Service"

@section Service_operations Operations of Binding  "Service"
  - @ref __ns1__GetStatus
  - @ref __ns1__Read
  - @ref __ns1__Write
  - @ref __ns1__Subscribe
  - @ref __ns1__SubscriptionPolledRefresh
  - @ref __ns1__SubscriptionCancel
  - @ref __ns1__Browse
  - @ref __ns1__GetProperties

@section Service_ports Endpoints of Binding  "Service"

*/

/******************************************************************************\
 *                                                                            *
 * Service                                                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns1__GetStatus                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetStatus" of service binding "Service"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://opcfoundation.org/webservices/XMLDA/1.0/GetStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetStatus*                    ns1__GetStatus,
    // response parameters:
    _ns1__GetStatusResponse*            ns1__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetStatus(
    struct soap *soap,
    // request parameters:
    _ns1__GetStatus*                    ns1__GetStatus,
    // response parameters:
    _ns1__GetStatusResponse*            ns1__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapServiceProxy.h):
  class Service;

*/

//gsoap ns1  service method-style:	GetStatus document
//gsoap ns1  service method-encoding:	GetStatus literal
//gsoap ns1  service method-action:	GetStatus http://opcfoundation.org/webservices/XMLDA/1.0/GetStatus
int __ns1__GetStatus(
    _ns1__GetStatus*                    ns1__GetStatus,	///< Request parameter
    _ns1__GetStatusResponse*            ns1__GetStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__Read                                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Read" of service binding "Service"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://opcfoundation.org/webservices/XMLDA/1.0/Read"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Read(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__Read*                         ns1__Read,
    // response parameters:
    _ns1__ReadResponse*                 ns1__ReadResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Read(
    struct soap *soap,
    // request parameters:
    _ns1__Read*                         ns1__Read,
    // response parameters:
    _ns1__ReadResponse*                 ns1__ReadResponse
  );
@endcode

C++ proxy class (defined in soapServiceProxy.h):
  class Service;

*/

//gsoap ns1  service method-style:	Read document
//gsoap ns1  service method-encoding:	Read literal
//gsoap ns1  service method-action:	Read http://opcfoundation.org/webservices/XMLDA/1.0/Read
int __ns1__Read(
    _ns1__Read*                         ns1__Read,	///< Request parameter
    _ns1__ReadResponse*                 ns1__ReadResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__Write                                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Write" of service binding "Service"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://opcfoundation.org/webservices/XMLDA/1.0/Write"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Write(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__Write*                        ns1__Write,
    // response parameters:
    _ns1__WriteResponse*                ns1__WriteResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Write(
    struct soap *soap,
    // request parameters:
    _ns1__Write*                        ns1__Write,
    // response parameters:
    _ns1__WriteResponse*                ns1__WriteResponse
  );
@endcode

C++ proxy class (defined in soapServiceProxy.h):
  class Service;

*/

//gsoap ns1  service method-style:	Write document
//gsoap ns1  service method-encoding:	Write literal
//gsoap ns1  service method-action:	Write http://opcfoundation.org/webservices/XMLDA/1.0/Write
int __ns1__Write(
    _ns1__Write*                        ns1__Write,	///< Request parameter
    _ns1__WriteResponse*                ns1__WriteResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__Subscribe                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Subscribe" of service binding "Service"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://opcfoundation.org/webservices/XMLDA/1.0/Subscribe"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Subscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__Subscribe*                    ns1__Subscribe,
    // response parameters:
    _ns1__SubscribeResponse*            ns1__SubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Subscribe(
    struct soap *soap,
    // request parameters:
    _ns1__Subscribe*                    ns1__Subscribe,
    // response parameters:
    _ns1__SubscribeResponse*            ns1__SubscribeResponse
  );
@endcode

C++ proxy class (defined in soapServiceProxy.h):
  class Service;

*/

//gsoap ns1  service method-style:	Subscribe document
//gsoap ns1  service method-encoding:	Subscribe literal
//gsoap ns1  service method-action:	Subscribe http://opcfoundation.org/webservices/XMLDA/1.0/Subscribe
int __ns1__Subscribe(
    _ns1__Subscribe*                    ns1__Subscribe,	///< Request parameter
    _ns1__SubscribeResponse*            ns1__SubscribeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__SubscriptionPolledRefresh                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SubscriptionPolledRefresh" of service binding "Service"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://opcfoundation.org/webservices/XMLDA/1.0/SubscriptionPolledRefresh"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SubscriptionPolledRefresh(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SubscriptionPolledRefresh*    ns1__SubscriptionPolledRefresh,
    // response parameters:
    _ns1__SubscriptionPolledRefreshResponse* ns1__SubscriptionPolledRefreshResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SubscriptionPolledRefresh(
    struct soap *soap,
    // request parameters:
    _ns1__SubscriptionPolledRefresh*    ns1__SubscriptionPolledRefresh,
    // response parameters:
    _ns1__SubscriptionPolledRefreshResponse* ns1__SubscriptionPolledRefreshResponse
  );
@endcode

C++ proxy class (defined in soapServiceProxy.h):
  class Service;

*/

//gsoap ns1  service method-style:	SubscriptionPolledRefresh document
//gsoap ns1  service method-encoding:	SubscriptionPolledRefresh literal
//gsoap ns1  service method-action:	SubscriptionPolledRefresh http://opcfoundation.org/webservices/XMLDA/1.0/SubscriptionPolledRefresh
int __ns1__SubscriptionPolledRefresh(
    _ns1__SubscriptionPolledRefresh*    ns1__SubscriptionPolledRefresh,	///< Request parameter
    _ns1__SubscriptionPolledRefreshResponse* ns1__SubscriptionPolledRefreshResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__SubscriptionCancel                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__SubscriptionCancel" of service binding "Service"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://opcfoundation.org/webservices/XMLDA/1.0/SubscriptionCancel"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__SubscriptionCancel(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SubscriptionCancel*           ns1__SubscriptionCancel,
    // response parameters:
    _ns1__SubscriptionCancelResponse*   ns1__SubscriptionCancelResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__SubscriptionCancel(
    struct soap *soap,
    // request parameters:
    _ns1__SubscriptionCancel*           ns1__SubscriptionCancel,
    // response parameters:
    _ns1__SubscriptionCancelResponse*   ns1__SubscriptionCancelResponse
  );
@endcode

C++ proxy class (defined in soapServiceProxy.h):
  class Service;

*/

//gsoap ns1  service method-style:	SubscriptionCancel document
//gsoap ns1  service method-encoding:	SubscriptionCancel literal
//gsoap ns1  service method-action:	SubscriptionCancel http://opcfoundation.org/webservices/XMLDA/1.0/SubscriptionCancel
int __ns1__SubscriptionCancel(
    _ns1__SubscriptionCancel*           ns1__SubscriptionCancel,	///< Request parameter
    _ns1__SubscriptionCancelResponse*   ns1__SubscriptionCancelResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__Browse                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Browse" of service binding "Service"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://opcfoundation.org/webservices/XMLDA/1.0/Browse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Browse(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__Browse*                       ns1__Browse,
    // response parameters:
    _ns1__BrowseResponse*               ns1__BrowseResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Browse(
    struct soap *soap,
    // request parameters:
    _ns1__Browse*                       ns1__Browse,
    // response parameters:
    _ns1__BrowseResponse*               ns1__BrowseResponse
  );
@endcode

C++ proxy class (defined in soapServiceProxy.h):
  class Service;

*/

//gsoap ns1  service method-style:	Browse document
//gsoap ns1  service method-encoding:	Browse literal
//gsoap ns1  service method-action:	Browse http://opcfoundation.org/webservices/XMLDA/1.0/Browse
int __ns1__Browse(
    _ns1__Browse*                       ns1__Browse,	///< Request parameter
    _ns1__BrowseResponse*               ns1__BrowseResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__GetProperties                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetProperties" of service binding "Service"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://opcfoundation.org/webservices/XMLDA/1.0/GetProperties"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetProperties*                ns1__GetProperties,
    // response parameters:
    _ns1__GetPropertiesResponse*        ns1__GetPropertiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetProperties(
    struct soap *soap,
    // request parameters:
    _ns1__GetProperties*                ns1__GetProperties,
    // response parameters:
    _ns1__GetPropertiesResponse*        ns1__GetPropertiesResponse
  );
@endcode

C++ proxy class (defined in soapServiceProxy.h):
  class Service;

*/

//gsoap ns1  service method-style:	GetProperties document
//gsoap ns1  service method-encoding:	GetProperties literal
//gsoap ns1  service method-action:	GetProperties http://opcfoundation.org/webservices/XMLDA/1.0/GetProperties
int __ns1__GetProperties(
    _ns1__GetProperties*                ns1__GetProperties,	///< Request parameter
    _ns1__GetPropertiesResponse*        ns1__GetPropertiesResponse	///< Response parameter
);

/* End of opc_msg.h */
