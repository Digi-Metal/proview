/* opc_soap_ServiceProxy.h
   Generated by gSOAP 2.7.9d from opc_msg.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef opc_soap_Service_H
#define opc_soap_Service_H
#include "opc_soap_H.h"
class Service
{   public:
	struct soap *soap;
	const char *endpoint;
	Service()
	{ soap = soap_new(); endpoint = "http://localhost:80"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://opcfoundation.org/webservices/XMLDA/1.0/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	virtual ~Service() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	virtual int __ns1__GetStatus(_ns1__GetStatus *ns1__GetStatus, _ns1__GetStatusResponse *ns1__GetStatusResponse) { return soap ? soap_call___ns1__GetStatus(soap, endpoint, NULL, ns1__GetStatus, ns1__GetStatusResponse) : SOAP_EOM; };
	virtual int __ns1__Read(_ns1__Read *ns1__Read, _ns1__ReadResponse *ns1__ReadResponse) { return soap ? soap_call___ns1__Read(soap, endpoint, NULL, ns1__Read, ns1__ReadResponse) : SOAP_EOM; };
	virtual int __ns1__Write(_ns1__Write *ns1__Write, _ns1__WriteResponse *ns1__WriteResponse) { return soap ? soap_call___ns1__Write(soap, endpoint, NULL, ns1__Write, ns1__WriteResponse) : SOAP_EOM; };
	virtual int __ns1__Subscribe(_ns1__Subscribe *ns1__Subscribe, _ns1__SubscribeResponse *ns1__SubscribeResponse) { return soap ? soap_call___ns1__Subscribe(soap, endpoint, NULL, ns1__Subscribe, ns1__SubscribeResponse) : SOAP_EOM; };
	virtual int __ns1__SubscriptionPolledRefresh(_ns1__SubscriptionPolledRefresh *ns1__SubscriptionPolledRefresh, _ns1__SubscriptionPolledRefreshResponse *ns1__SubscriptionPolledRefreshResponse) { return soap ? soap_call___ns1__SubscriptionPolledRefresh(soap, endpoint, NULL, ns1__SubscriptionPolledRefresh, ns1__SubscriptionPolledRefreshResponse) : SOAP_EOM; };
	virtual int __ns1__SubscriptionCancel(_ns1__SubscriptionCancel *ns1__SubscriptionCancel, _ns1__SubscriptionCancelResponse *ns1__SubscriptionCancelResponse) { return soap ? soap_call___ns1__SubscriptionCancel(soap, endpoint, NULL, ns1__SubscriptionCancel, ns1__SubscriptionCancelResponse) : SOAP_EOM; };
	virtual int __ns1__Browse(_ns1__Browse *ns1__Browse, _ns1__BrowseResponse *ns1__BrowseResponse) { return soap ? soap_call___ns1__Browse(soap, endpoint, NULL, ns1__Browse, ns1__BrowseResponse) : SOAP_EOM; };
	virtual int __ns1__GetProperties(_ns1__GetProperties *ns1__GetProperties, _ns1__GetPropertiesResponse *ns1__GetPropertiesResponse) { return soap ? soap_call___ns1__GetProperties(soap, endpoint, NULL, ns1__GetProperties, ns1__GetPropertiesResponse) : SOAP_EOM; };
};
#endif
