Volume OtherIO $ClassVolume 0.0.250.10 
  Body SysBody 01-JAN-1970 01:00:00.00
    Attr NextOix = "_X54"
    Attr NextCix = "_X5"
    Attr NextTix[0] = "_X4"
  EndBody
  Object Type $TypeHier 1 15-NOV-2007 14:35:37.90
    Object MotionControl_StatusEnum $TypeDef 1 15-NOV-2007 14:36:24.17
      Body SysBody 07-FEB-2008 15:54:27.87
        Attr TypeRef = "pwrs:Type-$Enum"
        Attr Elements = 1
      EndBody
      Object Success $Value 3 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Success"
          Attr PgmName = "Success"
        EndBody
      EndObject
      Object FindDevice $Value 4 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Unable to find device"
          Attr PgmName = "FindDevice"
          Attr Value = 1
        EndBody
      EndObject
      Object ConnectDevice $Value 5 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Unable to connect to device"
          Attr PgmName = "ConnectDevice"
          Attr Value = 2
        EndBody
      EndObject
      Object NotConnected $Value 6 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Device not connected"
          Attr PgmName = "NotConnected"
          Attr Value = 8
        EndBody
      EndObject
      Object Write $Value 7 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Unable to write to device"
          Attr PgmName = "Write"
          Attr Value = 10
        EndBody
      EndObject
      Object WriteFind $Value 8 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Unable to find device at write"
          Attr PgmName = "WriteFind"
          Attr Value = 11
        EndBody
      EndObject
      Object Read $Value 9 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Unable to read device"
          Attr PgmName = "Read"
          Attr Value = 12
        EndBody
      EndObject
      Object ReadTimeout $Value 10 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Read timeout"
          Attr PgmName = "ReadTimeout"
          Attr Value = 13
        EndBody
      EndObject
      Object CommandReply $Value 11 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Error in command reply"
          Attr PgmName = "CommandReply"
          Attr Value = 14
        EndBody
      EndObject
      Object Command $Value 12 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "No such command (USBIO)"
          Attr PgmName = "Command"
          Attr Value = 15
        EndBody
      EndObject
      Object Parameter $Value 13 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Parameter error"
          Attr PgmName = "Parameter"
          Attr Value = 16
        EndBody
      EndObject
      Object Function $Value 14 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Unable to activate function"
          Attr PgmName = "Function"
          Attr Value = 17
        EndBody
      EndObject
      Object NotActivated $Value 15 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Not activated, execute configuration"
          Attr PgmName = "NotActivated"
          Attr Value = 18
        EndBody
      EndObject
      Object Checksum $Value 16 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Checksum error"
          Attr PgmName = "Checksum"
          Attr Value = 19
        EndBody
      EndObject
      Object SPI $Value 17 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "SPI error"
          Attr PgmName = "SPI"
          Attr Value = 21
        EndBody
      EndObject
      Object ADSwitch $Value 18 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "AD switch error"
          Attr PgmName = "ADSwitch"
          Attr Value = 22
        EndBody
      EndObject
      Object Hardware $Value 19 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Not working in this hardware"
          Attr PgmName = "Hardware"
          Attr Value = 23
        EndBody
      EndObject
      Object Unknown $Value 20 15-NOV-2007 14:36:24.17
        Body SysBody 15-NOV-2007 14:36:24.17
          Attr Text = "Unknown error"
          Attr PgmName = "Unknown"
          Attr Value = 30
        EndBody
      EndObject
    EndObject
    Object Modbus_FCEnum $TypeDef 2 07-FEB-2008 16:09:36.40
      Body SysBody 07-FEB-2008 15:54:31.76
        Attr TypeRef = "pwrs:Type-$Enum"
        Attr Elements = 1
      EndBody
      Object ReadCoils $Value 32 07-FEB-2008 15:55:06.66
        Body SysBody 07-FEB-2008 15:55:26.18
          Attr Text = "ReadCoils"
          Attr PgmName = "ReadCoils"
          Attr Value = 1
        EndBody
      EndObject
      Object ReadDiscreteInputs $Value 33 07-FEB-2008 15:56:05.69
        Body SysBody 07-FEB-2008 15:56:14.27
          Attr Text = "ReadDiscreteInputs"
          Attr PgmName = "ReadDiscreteInputs"
          Attr Value = 2
        EndBody
      EndObject
      Object ReadHoldingRegisters $Value 34 07-FEB-2008 15:56:23.59
        Body SysBody 07-FEB-2008 15:56:30.00
          Attr Text = "ReadHoldingRegisters"
          Attr PgmName = "ReadHoldingRegisters"
          Attr Value = 3
        EndBody
      EndObject
      Object ReadInputRegisters $Value 35 07-FEB-2008 15:57:07.91
        Body SysBody 07-FEB-2008 15:57:13.83
          Attr Text = "ReadInputRegisters"
          Attr PgmName = "ReadInputRegisters"
          Attr Value = 4
        EndBody
      EndObject
      Object WriteMultipleCoils $Value 36 07-FEB-2008 15:57:24.44
        Body SysBody 07-FEB-2008 15:57:51.21
          Attr Text = "WriteMultipleCoils"
          Attr PgmName = "WriteMultipleCoils"
          Attr Value = 15
        EndBody
      EndObject
      Object WriteMultipleRegisters $Value 37 20-FEB-2008 15:35:34.05
        Body SysBody 20-FEB-2008 16:15:32.34
          Attr Text = "WriteMultipleRegisters"
          Attr PgmName = "WriteMultipleRegisters"
          Attr Value = 16
        EndBody
      EndObject
    EndObject
    Object ModbusModule_StatusEnum $TypeDef 3 08-FEB-2008 11:25:12.96
      Body SysBody 08-FEB-2008 11:24:46.54
        Attr TypeRef = "pwrs:Type-$Enum"
        Attr Elements = 1
      EndBody
      Object OK $Value 49 08-FEB-2008 11:25:30.56
        Body SysBody 08-FEB-2008 11:25:33.87
          Attr Text = "OK"
          Attr PgmName = "OK"
        EndBody
      EndObject
      Object IllegalFunction $Value 50 08-FEB-2008 11:26:14.38
        Body SysBody 08-FEB-2008 11:26:17.90
          Attr Text = "IllegalFunction"
          Attr PgmName = "IllegalFunction"
          Attr Value = 1
        EndBody
      EndObject
      Object IllegalDataAddress $Value 51 08-FEB-2008 11:26:30.03
        Body SysBody 08-FEB-2008 11:26:34.18
          Attr Text = "IllegalDataAddress"
          Attr PgmName = "IllegalDataAddress"
          Attr Value = 2
        EndBody
      EndObject
      Object IllegalDataValue $Value 52 08-FEB-2008 11:26:41.68
        Body SysBody 08-FEB-2008 11:27:07.31
          Attr Text = "IllegalDataValue"
          Attr PgmName = "IllegalDataValue"
          Attr Value = 3
        EndBody
      EndObject
      Object SlaveServiceFailure $Value 53 08-FEB-2008 11:26:56.15
        Body SysBody 08-FEB-2008 11:27:02.26
          Attr Text = "SlaveServiceFailure"
          Attr PgmName = "SlaveServiceFailure"
          Attr Value = 4
        EndBody
      EndObject
      Object StatusUnknown $Value 54 08-FEB-2008 11:27:44.77
        Body SysBody 08-FEB-2008 11:27:49.93
          Attr Text = "StatusUnknown"
          Attr PgmName = "StatusUnknown"
          Attr Value = 5
        EndBody
      EndObject
    EndObject
  EndObject
  Object Class $ClassHier 2 15-NOV-2007 14:35:40.72
    !/**
    !  @Version 1.0
    !  @Group IO
    !  @Summary Rack object for Motion Control USB I/O.
    !  Rack object for Motion Control USB I/O.
    ! 	
    !  @classlink MotionControl_USBIO otherio_motioncontrol_usbio.html
    !  @link Datasheet ../dsh/motioncontrol_usbio.pdf
    !*/
    Object MotionControl_USB $ClassDef 1 15-NOV-2007 14:36:42.44
      Body SysBody 21-NOV-2007 14:53:31.69
        Attr Editor = 0
        Attr Method = 0
        Attr Flags = 10320
      EndBody
      Object RtBody $ObjBodyDef 1 15-NOV-2007 14:36:42.44
        Body SysBody 15-NOV-2007 14:36:42.44
          Attr StructName = "MotionControl_USB"
          Attr NextAix = "_X13"
        EndBody
        !/**
        ! Optional description.
        !*/
        Object Description $Attribute 9 15-NOV-2007 14:36:42.44
          Body SysBody 15-NOV-2007 14:36:42.44
            Attr PgmName = "Description"
            Attr TypeRef = "pwrs:Type-$String80"
          EndBody
        EndObject
        !/**
        ! @Summary Process that handles the card. Plc(1), rt_io_comm(2) or application process(4).
        ! Process that handles the card.
        ! 
        ! 1: The card is read by the plc process, and is handled by a specific
        !    thread in the plc, which is specified in the ThreadObject attribute.
        ! 2: The card is read by the rt_io_comm process.
        ! 4: The card is handled by an application program.
        !*/
        Object Process $Attribute 10 15-NOV-2007 14:36:42.44
          Body SysBody 30-MAY-2008 15:06:38.05
            Attr PgmName = "Process"
            Attr TypeRef = "pwrb:Type-IoProcessMask"
          EndBody
        EndObject
        !/**
        ! @Summary Plc thread that handles the card.
        ! The PlcThread object of the plc thread that handles the card.
        ! The card is read with the scantime of the thread.
        !*/
        Object ThreadObject $Attribute 11 15-NOV-2007 14:36:42.44
          Body SysBody 15-NOV-2007 14:36:42.44
            Attr PgmName = "ThreadObject"
            Attr TypeRef = "pwrs:Type-$Objid"
          EndBody
        EndObject
        !/**
        ! Status from the USB I/O driver.
        !*/
        Object Status $Attribute 12 15-NOV-2007 14:36:42.44
          Body SysBody 08-FEB-2008 11:23:01.09
            Attr PgmName = "Status"
            Attr Flags = 1040
            Attr TypeRef = "OtherIO:Type-MotionControl_StatusEnum"
          EndBody
        EndObject
      EndObject
      Object ConfiguratorPoson $Menu 21 15-NOV-2007 14:36:42.44
        Object Pointed $Menu 22 15-NOV-2007 14:36:42.44
          Object Connect $MenuButton 23 15-NOV-2007 14:36:42.44
            Body SysBody 15-NOV-2007 14:36:42.44
              Attr ButtonName = "Connect PlcThread"
              Attr MethodName = "$Objid-Connect"
              Attr MethodArguments[0] = "ThreadObject"
              Attr MethodArguments[1] = "PlcThread"
              Attr FilterName = "$Objid-IsOkConnect"
              Attr FilterArguments[0] = "ThreadObject"
              Attr FilterArguments[1] = "PlcThread"
            EndBody
          EndObject
        EndObject
      EndObject
      Object IoMethods $RtMethod 24 15-NOV-2007 14:36:42.44
        Object IoRackInit $Method 25 15-NOV-2007 14:36:42.44
          Body SysBody 15-NOV-2007 14:36:42.44
            Attr MethodName = "MotionControl_USB-IoRackInit"
          EndBody
        EndObject
        Object IoRackClose $Method 26 15-NOV-2007 14:36:42.44
          Body SysBody 21-NOV-2007 14:50:39.55
            Attr MethodName = "MotionControl_USB-IoRackClose"
          EndBody
        EndObject
      EndObject
      Object Template MotionControl_USB 2147975168 01-JAN-1970 01:00:00.00
        Body RtBody 15-NOV-2007 14:37:52.21
          Attr Process = 1
        EndBody
      EndObject
    EndObject
    !/**
    !  @Version 1.0
    !  @Group IO
    !  @Summary Card object for Motion Control USB I/O.
    !  Card object for Motion Control USB I/O.
    ! 	
    !  Motion Control USB I/O is an I/O connected to the USB bus.
    !  The device has 21 channels, divided in ports A, B and C.
    !  The channels are configured by placing channel objects under the
    !  card object. The Number attribute in the channel object states which
    !  channel it represents. Below is a list of how the channels can be 
    !  configured.
    ! 
    !  Channel    Type                     Number
    !  ------------------------------------------
    !  A1         ChanDo                     0
    !  A2         ChanDo                     1
    !  A3         ChanDo                     2
    !  A4         ChanDo                     3
    !  A5         ChanDi                     4
    !  A6         ChanDi                     5
    !  A7         ChanDi                     6
    !  A8         ChanDi                     7
    !  B1         ChanDi, ChanDo or ChanAi   8
    !  B2         ChanDi, ChanDo or ChanAi   9
    !  B3         ChanDi, ChanDo or ChanAi  10
    !  B4         ChanDi, ChanDo or ChanAi  11
    !  B5         ChanDi, ChanDo or ChanAi  12
    !  B6         ChanDi, ChanDo or ChanAi  13
    !  B7         ChanDi, ChanDo or ChanAi  14
    !  B8         ChanDi, ChanDo or ChanAi  15
    !  C1         ChanDi, ChanDo            16
    !  C2         ChanDi, ChanDo            17
    !  C3         ChanDi, ChanDo            18
    !  C4         ChanDi, ChanDo or ChanAo  19
    !  C5         ChanDi, ChanDo or ChanAo  20
    ! 
    !  @b Ai configuration
    !  The Ai channels has the rawvalue range 0-1023, and the signal value 
    !  range 0 - 5 V, i.e. the RawValRange and ChannelSigValRange should
    !  be set to:
    ! 
    !  RawValRangeLow             0
    !  RawValRangeHigh         1023
    !  ChannelSigValRangeLow      0
    !  ChannelSigValRangeHigh     5
    !  
    !  For example to get ActualValue range to 0 - 100 set
    !  SensorSigValRangeLow       0
    !  SensorSigValRangeHigh      5
    !  ActValRangeLow             0
    !  ActValRangeHigh          100
    ! 
    !  @b Ao configuration
    !  The Ao channels has the rawvalue range 0 - 5, and the signal value 
    !  range 0 - 5 V, i.e. the RawValRange and ChannelSigValRange should
    !  be set to:
    ! 
    !  RawValRangeLow             0
    !  RawValRangeHigh            5
    !  ChannelSigValRangeLow      0
    !  ChannelSigValRangeHigh     5
    !  
    !  For example to get ActualValue range to 0 - 100 set
    !  SensorSigValRangeLow       0
    !  SensorSigValRangeHigh      5
    !  ActValRangeLow             0
    !  ActValRangeHigh          100
    ! 
    !  @classlink MotionControl_USB otherio_motioncontrol_usb.html
    !  @link Datasheet ../dsh/motioncontrol_usbio.pdf
    !*/
    Object MotionControl_USBIO $ClassDef 2 15-NOV-2007 14:36:59.65
      Body SysBody 21-NOV-2007 14:53:39.42
        Attr Editor = 0
        Attr Method = 0
        Attr Flags = 18448
      EndBody
      Object RtBody $ObjBodyDef 1 15-NOV-2007 14:36:59.65
        Body SysBody 15-NOV-2007 14:36:59.65
          Attr StructName = "MotionControl_USBIO"
          Attr NextAix = "_X10"
        EndBody
        !/**
        ! Super class.
        !*/
        Object Super $Attribute 7 15-NOV-2007 14:36:59.65
          Body SysBody 15-NOV-2007 14:36:59.65
            Attr PgmName = "Super"
            Attr Flags = 393216
            Attr TypeRef = "BaseComponent:Class-BaseIOCard"
          EndBody
        EndObject
        !/**
        ! Status from the USB I/O driver.
        !*/
        Object Status $Attribute 8 15-NOV-2007 14:36:59.65
          Body SysBody 15-NOV-2007 14:37:35.55
            Attr PgmName = "Status"
            Attr Flags = 1040
            Attr TypeRef = "OtherIO:Type-MotionControl_StatusEnum"
          EndBody
        EndObject
        !/**
        ! Watchdog time in seconds.
        ! If the device is not written to within this time, the device will be reset.
        ! If WatchdogTime is zero, the watchdog is not activated.
        !*/
        Object WatchdogTime $Attribute 9 15-NOV-2007 14:36:59.65
          Body SysBody 15-NOV-2007 14:36:59.65
            Attr PgmName = "WatchdogTime"
            Attr TypeRef = "pwrs:Type-$Float32"
          EndBody
        EndObject
      EndObject
      Object IoMethods $RtMethod 27 15-NOV-2007 14:36:59.65
        Object IoCardInit $Method 28 15-NOV-2007 14:36:59.65
          Body SysBody 15-NOV-2007 14:36:59.65
            Attr MethodName = "MotionControl_USBIO-IoCardInit"
          EndBody
        EndObject
        Object IoCardClose $Method 29 15-NOV-2007 14:36:59.65
          Body SysBody 15-NOV-2007 14:36:59.65
            Attr MethodName = "MotionControl_USBIO-IoCardClose"
          EndBody
        EndObject
        Object IoCardRead $Method 30 15-NOV-2007 14:36:59.65
          Body SysBody 15-NOV-2007 14:36:59.65
            Attr MethodName = "MotionControl_USBIO-IoCardRead"
          EndBody
        EndObject
        Object IoCardWrite $Method 31 15-NOV-2007 14:36:59.65
          Body SysBody 15-NOV-2007 14:36:59.65
            Attr MethodName = "MotionControl_USBIO-IoCardWrite"
          EndBody
        EndObject
      EndObject
      Object Template MotionControl_USBIO 2148237312 01-JAN-1970 01:00:00.00
        Body RtBody 15-NOV-2007 14:38:59.75
          Attr Super.Specification = "Motion Control USB I/O"
          Attr Super.DataSheet = "../dsh/motioncontrol_usbio.pdf"
          Attr Super.Process = 1
          Attr Super.ErrorSoftLimit = 50
          Attr Super.ErrorHardLimit = 100
          Attr Super.MaxNoOfChannels = 21
          Attr WatchdogTime = 2.000000e+00
        EndBody
      EndObject
    EndObject
    !/**
    !  @Version 1.0
    !  @Group IO
    !  @Summary Slave object for Modbus TCP I/O.
    !  Slave object for Modbus TCP I/O.
    ! 	
    !  @classlink Modbus_Module otherio_modbus_module.html
    !*/
    Object Modbus_TCP_Slave $ClassDef 3 07-FEB-2008 16:12:21.21
      Body SysBody 21-FEB-2008 11:26:38.84
        Attr Editor = 0
        Attr Method = 0
        Attr Flags = 8272
      EndBody
      Object RtBody $ObjBodyDef 1 08-FEB-2008 10:26:36.84
        Body SysBody 08-FEB-2008 10:26:36.85
          Attr StructName = "Modbus_TCP_Slave"
          Attr NextAix = "_X17"
        EndBody
        !/**
        ! Description of slave
        !*/
        Object Description $Attribute 1 08-FEB-2008 10:26:53.62
          Body SysBody 08-FEB-2008 10:27:28.51
            Attr PgmName = "Description"
            Attr TypeRef = "pwrs:Type-$String80"
          EndBody
        EndObject
        !/**
        ! @Summary Datasheet.
        ! Link to datasheet for the specific slave type.
        !*/
        Object DataSheet $Attribute 2 08-FEB-2008 10:29:10.98
          Body SysBody 08-FEB-2008 10:29:22.41
            Attr PgmName = "DataSheet"
            Attr TypeRef = "pwrs:Type-$URL"
          EndBody
        EndObject
        !/**
        ! @Summary Status of the slave.
        ! Status of the slave. Shows if tcp-link to slave is up or not.
        !*/
        Object Status $Attribute 3 08-FEB-2008 10:29:48.44
          Body SysBody 08-FEB-2008 10:30:23.06
            Attr PgmName = "Status"
            Attr TypeRef = "pwrs:Type-$Status"
          EndBody
        EndObject
        !/**
        ! @Summary Process that handles the slave. Plc(1), rt_io_comm(2) or application process(4).
        ! Process that handles the card.
        ! 
        ! 1: The slave is read by the plc process, and is handled by a specific
        !    thread in the plc, which is specified in the ThreadObject attribute.
        ! 2: The slave is read by the rt_io_comm process.
        ! 4: The slave is handled by an application program.
        !*/
        Object Process $Attribute 4 08-FEB-2008 10:43:19.48
          Body SysBody 30-MAY-2008 15:07:17.32
            Attr PgmName = "Process"
            Attr TypeRef = "pwrb:Type-IoProcessMask"
          EndBody
        EndObject
        !/**
        ! @Summary Plc thread that handles the slave.
        ! The PlcThread object of the plc thread that handles the slave.
        ! The slave is read with the scantime of the thread.
        !*/
        Object ThreadObject $Attribute 5 08-FEB-2008 10:44:05.30
          Body SysBody 08-FEB-2008 10:44:16.17
            Attr PgmName = "ThreadObject"
            Attr TypeRef = "pwrs:Type-$Objid"
          EndBody
        EndObject
        !/**
        ! @Summary IP-address for the remote node..
        ! IP-address for the remote node. Dynamic change is not possible.
        !*/
        Object Address $Attribute 6 08-FEB-2008 10:44:42.47
          Body SysBody 08-FEB-2008 10:47:01.34
            Attr PgmName = "Address"
            Attr TypeRef = "pwrs:Type-$String32"
          EndBody
        EndObject
        !/**
        ! @Summary Flag that disables the slave.
        ! Flag that disables the initialization of the slave, if initialized turns off i/o-handling.
        !*/
        Object DisableSlave $Attribute 16 20-FEB-2008 15:38:59.22
          Body SysBody 20-FEB-2008 15:46:45.06
            Attr PgmName = "DisableSlave"
            Attr TypeRef = "pwrs:Type-$Boolean"
          EndBody
        EndObject
        !/**
        ! @Summary Error count of the slave.
        ! ErrorCount will increase every cycle if status is not MB__NORMAL.
        ! When ErrorCount reaches the ErrorLimit all inputs are reset to zero.
        !*/
        Object ErrorCount $Attribute 7 08-FEB-2008 10:50:15.18
          Body SysBody 08-FEB-2008 10:55:49.84
            Attr PgmName = "ErrorCount"
            Attr TypeRef = "pwrs:Type-$UInt16"
          EndBody
        EndObject
        !/**
        ! @Summary Error limit of the slave.
        ! ErrorCount will increase every cycle if status is not MB__NORMAL.
        ! When ErrorCount reaches the ErrorLimit all inputs are reset to zero.
        !*/
        Object ErrorLimit $Attribute 8 08-FEB-2008 10:55:37.72
          Body SysBody 08-FEB-2008 10:55:53.80
            Attr PgmName = "ErrorLimit"
            Attr TypeRef = "pwrs:Type-$UInt16"
          EndBody
        EndObject
        !/**
        ! @Summary Reconnect count.
        ! If slave is disconnected Proview will try to reconnect until ReconnectLimit is reached.
        ! Reconnect attempt is performed when ErrorCount reaches ErrorLimit.
        !*/
        Object ReconnectCount $Attribute 9 08-FEB-2008 10:56:12.51
          Body SysBody 08-FEB-2008 10:56:17.20
            Attr PgmName = "ReconnectCount"
            Attr TypeRef = "pwrs:Type-$UInt16"
          EndBody
        EndObject
        !/**
        ! @Summary Reconnect limit.
        ! If slave is disconnected Proview will try to reconnect until ReconnectLimit is reached.
        ! Reconnect attempt is performed when ErrorCount reaches ErrorLimit. When reconnect limit
        ! is reached no more attempts is performed and slave is treated as "dead".
        !*/
        Object ReconnectLimit $Attribute 10 08-FEB-2008 10:56:28.05
          Body SysBody 08-FEB-2008 11:19:48.56
            Attr PgmName = "ReconnectLimit"
            Attr TypeRef = "pwrs:Type-$UInt16"
          EndBody
        EndObject
        !/**
        ! @Summary Received number of messages from slave.
        ! Received number of messages from slave.
        !*/
        Object RX_packets $Attribute 11 08-FEB-2008 10:57:16.79
          Body SysBody 08-FEB-2008 10:57:21.35
            Attr PgmName = "RX_packets"
            Attr TypeRef = "pwrs:Type-$UInt32"
          EndBody
        EndObject
        !/**
        ! @Summary Sent number of messages to slave.
        ! Sent number of messages to slave.
        !*/
        Object TX_packets $Attribute 12 08-FEB-2008 10:57:31.03
          Body SysBody 08-FEB-2008 10:57:34.53
            Attr PgmName = "TX_packets"
            Attr TypeRef = "pwrs:Type-$UInt32"
          EndBody
        EndObject
        !/**
        ! @Summary Input area.
        ! Area where alla input data is stored.
        !*/
        Object Inputs $Attribute 14 08-FEB-2008 10:59:26.76
          Body SysBody 08-FEB-2008 11:00:29.99
            Attr PgmName = "Inputs"
            Attr Flags = 3074
            Attr Elements = 256
            Attr TypeRef = "pwrs:Type-$UInt8"
          EndBody
        EndObject
        !/**
        ! @Summary Output area.
        ! Area where alla output data is stored.
        !*/
        Object Outputs $Attribute 15 08-FEB-2008 11:00:48.44
          Body SysBody 08-FEB-2008 11:00:44.86
            Attr PgmName = "Outputs"
            Attr Flags = 3074
            Attr Elements = 256
            Attr TypeRef = "pwrs:Type-$UInt8"
          EndBody
        EndObject
      EndObject
      Object IoMethods $RtMethod 40 08-FEB-2008 11:01:27.50
        Object IoRackInit $Method 41 08-FEB-2008 11:01:47.30
          Body SysBody 21-FEB-2008 11:27:42.84
            Attr MethodName = "Modbus_TCP_Slave-IoRackInit"
          EndBody
        EndObject
        Object IoRackClose $Method 42 08-FEB-2008 11:02:03.02
          Body SysBody 21-FEB-2008 11:27:54.23
            Attr MethodName = "Modbus_TCP_Slave-IoRackClose"
          EndBody
        EndObject
        Object IoRackRead $Method 43 08-FEB-2008 11:02:15.13
          Body SysBody 21-FEB-2008 11:28:02.46
            Attr MethodName = "Modbus_TCP_Slave-IoRackRead"
          EndBody
        EndObject
        Object IoRackWrite $Method 44 08-FEB-2008 11:02:30.28
          Body SysBody 21-FEB-2008 11:28:19.73
            Attr MethodName = "Modbus_TCP_Slave-IoRackWrite"
          EndBody
        EndObject
      EndObject
      Object Template Modbus_TCP_Slave 2148499456 01-JAN-1970 01:00:00.00
        Body RtBody 08-FEB-2008 11:05:14.00
          Attr Process = 1
          Attr ErrorLimit = 50
          Attr ReconnectLimit = 5
        EndBody
      EndObject
    EndObject
    !/**
    !  @Version 1.0
    !  @Group IO
    !  @Summary Module object for Modbus TCP I/O.
    !  Module object for Modbus TCP I/O.
    !  Defines the type of Modbus action that is to be performed and at which address on the slave.
    !  The action is defined by a function code which means either reading or writing data to
    !  the Modbus slave.
    ! 
    !  The supported function codes are:
    ! 	
    !  @b ReadCoils (FC 1)
    !  This function code is used to read from 1 to 2000 contiguous status of coils in a remote device.
    !  Typically the input data area is defined by a number of ChanDi's which represent
    !  the number of coils you want to read. The represenation on the ChanDi should be set to Bit8.
    ! 
    !  @b ReadDiscreteInputs (FC 2)
    !  This function code is used to read from 1 to 2000 contiguous status of discrete inputs
    !  in a remote device. Typically the input data area is defined by a number of ChanDi's 
    !  which represent the number of coils you want to read. 
    !  The represenation on the ChanDi should be set to Bit8.
    ! 
    !  @b ReadHoldingRegisters (FC 3)
    !  This function code is used to read the contents of a contiguous block of holding registers
    !  in a remote device.
    !  Typically the input data area is defined by a number of ChanIi's which represent
    !  the number of registers you want to read. The represenation on the ChanIi should 
    !  be set to UInt16 or Int16. ChanAi and ChanDi is also applicable. In case of ChanDi the
    !  representation should be set to Bit16.
    ! 
    !  @b ReadInputRegisters (FC 4)
    !  This function code is used to read from 1 to 125 contiguous input registers
    !  in a remote device.
    !  Typically the input data area is defined by a number of ChanIi's which represent
    !  the number of registers you want to read. The represenation on the ChanIi should 
    !  be set to UInt16 or Int16. ChanAi and ChanDi is also applicable. In case of ChanDi the
    !  representation should be set to Bit16.
    ! 
    !  @b WriteMultipleCoils (FC 15)
    !  This function code is used to force each coil in a sequence of coils to either ON or OFF
    !  in a remote Device.
    !  Typically the output data area is defined by a number of ChanDo's which represent
    !  the number of coils you want to write. The represenation on the ChanDo should 
    !  be set to Bit8.
    ! 
    !  @b WriteMultipleRegisters (FC 16)
    !  This function code is used to write a block of contiguous registers (1 to 123 registers)
    !  in a remote device.
    !  Typically the output data area is defined by a number of ChanIo's which represent
    !  the number of registers you want to write. The represenation on the ChanIo should 
    !  be set to UInt16 or Int16. ChanAo and ChanDo is also applicable. In case of ChanDo the
    !  representation should be set to Bit16.
    ! 
    !  @classlink Modbus_TPC_Slave otherio_modbus_tcp_slave.html
    !*/
    Object Modbus_Module $ClassDef 4 08-FEB-2008 11:05:36.53
      Body SysBody 21-FEB-2008 11:29:00.89
        Attr Editor = 0
        Attr Method = 0
        Attr Flags = 16464
      EndBody
      Object RtBody $ObjBodyDef 1 08-FEB-2008 11:15:54.62
        Body SysBody 08-FEB-2008 11:15:54.63
          Attr StructName = "Modbus_Module"
          Attr NextAix = "_X8"
        EndBody
        !/**
        ! Description of module
        !*/
        Object Description $Attribute 2 08-FEB-2008 11:18:16.99
          Body SysBody 08-FEB-2008 11:30:31.46
            Attr PgmName = "Description"
            Attr TypeRef = "pwrs:Type-$String80"
          EndBody
        EndObject
        !/**
        ! @Summary Modbus function code.
        ! The function code defines the action that is to be perfomed with the Modbus slave.
        ! The module is handled with the scantime of the thread.
        ! The supported function codes are:
        ! 	
        ! (FC 1) ReadCoils
        ! (FC 2) ReadDiscreteInputs
        ! (FC 3) ReadHoldingRegisters
        ! (FC 4) ReadInputRegisters
        ! (FC 15) WriteMultipleCoils 
        ! (FC 16) WriteMultipleRegisters
        !*/
        Object FunctionCode $Attribute 5 08-FEB-2008 11:19:38.05
          Body SysBody 08-FEB-2008 11:30:37.32
            Attr PgmName = "FunctionCode"
            Attr TypeRef = "OtherIO:Type-Modbus_FCEnum"
          EndBody
        EndObject
        !/**
        ! @Summary Address of data area on Modbus slave.
        ! Address of data area on Modbus slave. 
        !*/
        Object Address $Attribute 6 08-FEB-2008 11:20:03.39
          Body SysBody 08-FEB-2008 11:30:42.64
            Attr PgmName = "Address"
            Attr TypeRef = "pwrs:Type-$UInt16"
          EndBody
        EndObject
        !/**
        ! @Summary Status of the slave.
        ! Status of the module. The status can be any of:
        ! OK
        ! IllegalFunction
        ! IllegalDataAddress
        ! IllegalDataValue
        ! SlaveServiceFailure
        ! Unknown
        !*/
        Object Status $Attribute 7 08-FEB-2008 11:20:34.93
          Body SysBody 08-FEB-2008 11:31:11.41
            Attr PgmName = "Status"
            Attr TypeRef = "OtherIO:Type-ModbusModule_StatusEnum"
          EndBody
        EndObject
        !/**
        ! @Summary Process that handles the card. Plc(1), rt_io_comm(2) or application process(4).
        ! Process that handles the card.
        ! 
        ! 1: The card is read by the plc process, and is handled by a specific
        !    thread in the plc, which is specified in the ThreadObject attribute.
        ! 2: The card is read by the rt_io_comm process.
        ! 4: The card is handled by an application program.
        !*/
        Object Process $Attribute 3 08-FEB-2008 11:19:22.97
          Body SysBody 30-MAY-2008 15:07:32.84
            Attr PgmName = "Process"
            Attr TypeRef = "pwrb:Type-IoProcessMask"
          EndBody
        EndObject
        !/**
        ! @Summary Plc thread that handles the module.
        ! The PlcThread object of the plc thread that handles the module.
        ! The module is handled with the scantime of the thread.
        !*/
        Object ThreadObject $Attribute 4 08-FEB-2008 11:19:22.97
          Body SysBody 08-FEB-2008 11:31:53.32
            Attr PgmName = "ThreadObject"
            Attr TypeRef = "pwrs:Type-$Objid"
          EndBody
        EndObject
      EndObject
      Object IoMethods $RtMethod 45 08-FEB-2008 11:16:05.05
        Object IoCardInit $Method 46 08-FEB-2008 11:17:19.82
          Body SysBody 21-FEB-2008 11:29:43.10
            Attr MethodName = "Modbus_Module-IoCardInit"
          EndBody
        EndObject
        Object IoCardRead $Method 47 08-FEB-2008 11:17:46.70
          Body SysBody 21-FEB-2008 11:29:29.34
            Attr MethodName = "Modbus_Module-IoCardRead"
          EndBody
        EndObject
        Object IoCardWrite $Method 48 08-FEB-2008 11:17:54.76
          Body SysBody 21-FEB-2008 11:29:35.81
            Attr MethodName = "Modbus_Module-IoCardWrite"
          EndBody
        EndObject
      EndObject
      Object Template Modbus_Module 2148761600 01-JAN-1970 01:00:00.00
        Body RtBody 29-MAY-2008 08:28:24.16
          Attr Process = 1
        EndBody
      EndObject
    EndObject
  EndObject
EndVolume
