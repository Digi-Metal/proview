/**
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of Proview (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 **/

#ifndef pn_viewer_qt_h
#define pn_viewer_qt_h

/* pn_viewer_qt.h -- Profinet viewer */

#include "../src/pn_viewer.h"

#include "cow_wow_qt.h"

#include <QLabel>

class PnViewerQtWidget;

class PnViewerQt : public PnViewer {
public:
  PnViewerQt(void* v_parent_ctx, QWidget* v_parent_wid, const char* v_name,
      const char* v_device, pwr_tStatus* status);

  QWidget* nav_widget;
  QWidget* navconf_widget;
  QLabel* msg_label;
  QLabel* cmd_prompt;
  CoWowFocusTimerQt focustimer;
  CoWowFocusTimerQt maptimer;
  CoWowRecall* value_recall;
  CoWowEntryQt* cmd_entry;

  void message(char severity, const char* msg);
  void set_prompt(const char* prompt);
  void open_change_value();

  PnViewerQtWidget* toplevel;
};

class PnViewerQtWidget : public QWidget {
  Q_OBJECT

public:
  PnViewerQtWidget(PnViewerQt* parent_ctx, QWidget* parent)
      : QWidget(parent, Qt::Window), viewer(parent_ctx){};

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void valchanged_cmd_entry();
  void activate_update();
  void activate_filter();
  void activate_setdevice();
  void activate_changevalue();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_help();

private:
  PnViewerQt* viewer;
};

#endif