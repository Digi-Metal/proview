/* 
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and 
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of Proview (the version used to produce the 
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

#ifndef co_ctx_h
#define co_ctx_h

/* cnv_ctx.h -- Setup */


#include <stdio.h>
#include <string>
#include <vector>
#include "pwr.h"
#include "cnv_setup.h"

using namespace std;

class CnvWblTo;
class CnvReadWbl;
class CnvReadXtthelp;

class CnvCtx { 
 private:
  vector<string> depend;

 public:
  CnvCtx() : generate_html(0), generate_xtthelp(0), generate_src(0),
    generate_struct(0), generate_ps(0), generate_cdp(0), common_structfile_only(0), hpp(0), 
    verbose(0), first_class(1), setup(0), wblto(0), rw(0), rx(0)
    {
      strcpy( dir, "");
      strcpy( setup_filename, "");
      strcpy( depend_filename, "");
    }
  pwr_tFileName	dir;
  int		generate_html;
  int		generate_xtthelp;
  int		generate_src;
  int		generate_struct;
  int		generate_ps;
  int		generate_cdp;
  int		common_structfile_only;
  int		hpp;
  int	       	verbose;
  pwr_tFileName setup_filename;
  pwr_tFileName depend_filename;
  pwr_tFileName	dependfile;
  int		first_class;
  CnvSetup	*setup;
  CnvWblTo	*wblto;
  CnvReadWbl	*rw;
  CnvReadXtthelp *rx;

  void add_depend( char *dname);
  void set_dependfile( char *dname) {strncpy( dependfile, dname, sizeof(dependfile));}
  void print_depend();

  static int read_line( char *line, int maxsize, FILE *file);
  static int remove_spaces( const char *in, char *out);
  static char *low( const char *in);
};

#endif