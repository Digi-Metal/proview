!** Invisible: Load a backup dumpfile into development data base.
! 
!  Proview   $Id: restore_bck.pwr_com,v 1.3 2008-11-28 17:15:37 claes Exp $
!  Copyright (C) 2005 SSAB Oxelösund AB.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with the program, if not, write to the Free Software 
!  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!
function int usage()
  printf( "Script to load backup dumpfile into development database.\n\n");
  printf( "pwrc -v 'volumename' @pwr_exe:restore_bck 'nodename' 'dumpfile'\n\n");
  printf( "Create a dumpfile on an process station with rt_bck -p\n\n");
endfunction

main()
  int dump_file;
  int alias_file;
  string str;
  string dbname;
  string volname;
  int i;
  int j;
  int first;
  int len;
  string start;
  string objname;
  string attrname;
  string db_attrname;
  string value;
  string answer;
  
  int loaddb;
  int export_alias;
  string alias_filename;
  
  printf("\n");

  if (p1 == "" || p2 == "")
    usage();
    exit(0);
  endif

  dump_file = fopen(p2, "r");
  if (!dump_file)
    printf( "Unable to open dumpfile %s\n", p2);
    exit();
  endif

  loaddb = 0;
  ask("Do you want to load values from the dumpfile into the database? (Y/N) ", answer);
  if (answer == "y" || answer == "Y") 
    loaddb = 1;
  endif

  export_alias = 0;
  ask("Do you wan to create an alias-file with values from the dumpfile? (Y/N) ", answer);
  if (answer == "y" || answer == "Y") 
    ask("Alias-file name: ", answer);
    alias_file = fopen(answer, "w");
    if (!alias_file)
      printf( "Unable to open output alias file %s\n", answer);
      exit();
    endif
    export_alias = 1;
    alias_filename = answer;
  endif
    
  while (fgets(str, dump_file))
    start = extract(1, 2, str);
    i = strstr(start, "/");
    if (!i)
      i = strstr(str, ".");
      j = strstr(str, " ");
      first = 1;
      len = i-1;
      objname = extract(first, len, str);
      first = i+1;
      len = j-i-1;
      attrname = extract(first, len, str);
      first = j+1;
      len = strlen(str) - j;
      value = extract(first, len, str);
  
      db_attrname = attrname;
      if (attrname == "ActualValue")
        db_attrname = "InitialValue";
      endif

      if (loaddb)
        set attr/attr='db_attrname'/value="'value'"/name='objname'/noconf/log
      endif
      
      if (export_alias)
        fprintf(alias_file, "%s_setvalp %s.%s = \"%s\"\n", p1, objname, attrname, value);
      endif
      
    endif
  endwhile
  
  if (dump_file)
    fclose(dump_file);
  endif
  
  if (alias_file)
    printf("Alias-file created, %s\n", alias_filename);
    fclose(alias_file);
  endif
  
  if (loaddb)
    ask("Do you wan to save the database changes? (Y/N) ", answer);
    if (answer == "y" || answer == "Y") 
      printf("Saving changes...\n");
      save
    else
      printf("Not saving any changes\n");
    endif
  endif

endmain







