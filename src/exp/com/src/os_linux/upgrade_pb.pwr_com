!** Invisible: Script for to create OpPlaceWeb from WebHandler objects during upgrading from V5.3 to V5.4
! 
# Proview   Open Source Process Control.
# Copyright (C) 2005-2016 SSAB EMEA AB.
#
# This file is part of Proview.
#
# This program is free software; you can redistribute it and/or 
# modify it under the terms of the GNU General Public License as 
# published by the Free Software Foundation, either version 2 of 
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with Proview. If not, see <http://www.gnu.org/licenses/>
#
# Linking Proview statically or dynamically with other modules is
# making a combined work based on Proview. Thus, the terms and 
# conditions of the GNU General Public License cover the whole 
# combination.
#
# In addition, as a special exception, the copyright holders of
# Proview give you permission to, from the build function in the
# Proview Configurator, combine Proview with modules generated by the
# Proview PLC Editor to a PLC program, regardless of the license
# terms of these modules. You may copy and distribute the resulting
# combined work under the terms of your choice, provided that every 
# copy of the combined work is accompanied by a complete copy of 
# the source code of Proview (the version used to produce the 
# combined work), being distributed under the terms of the GNU 
# General Public License plus this exception.
!
!
! Script to create OpPlaceWeb objects during upgrading from V5.3 to V5.4,
!
! Find all WebHandler objects and create an OpPlaceWeb.
!

main()
  string name;
  string opname;
  string aname;
  string aopname;
  string attrstr;
  int attrint;
  string child;
  string prevchild;
  string class;
  string nchild;
  string nclass;
  int idx;
  int sts;

  verify(0);

  name = GetClassListAttrRef("WebHandler");

  while ( name != "")

    idx = strrchr( name, "-") - 1;
    opname = extract( 1, idx, name);
    opname = opname + "-OpWeb";
    printf( "--\n");
    printf( "-- Creating OpPlaceWeb object %s\n", opname);
    printf( "--\n");
    sts = CreateObject( "OpWeb", "OpPlaceWeb", name, 3);
    if ( EVEN(sts))
      printf( "** Unable to create object %s, sts %d\n", opname, sts);
      quit
    endif

    aname = name + ".FileName";
    aopname = opname + ".FileName";
    attrstr = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrstr);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".Title";
    aopname = opname + ".Title";
    attrstr = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrstr);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".Text";
    aopname = opname + ".Text";
    attrstr = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrstr);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".EnableLanguage";
    aopname = opname + ".EnableLanguage";
    attrint = GetAttribute( aname, sts);
    sts = SetAttribute( aopname, attrint);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".EnableLogin";
    aopname = opname + ".EnableLogin";
    attrint = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrint);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".EnableAlarmList";
    aopname = opname + ".EnableAlarmList";
    attrint = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrint);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".EnableEventLog";
    aopname = opname + ".EnableEventLog";
    attrint = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrint);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".DisableHelp";
    aopname = opname + ".DisableHelp";
    attrint = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrint);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".DisableProview";
    aopname = opname + ".DisableProview";
    attrint = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrint);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".Language";
    aopname = opname + ".Language";
    attrint = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrint);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".StyleSheet";
    aopname = opname + ".StyleSheet";
    attrstr = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrstr);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".StartURL";
    aopname = opname + ".StartURL";
    attrstr = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrstr);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".LoadArchives";
    aopname = opname + ".LoadArchives";
    attrstr = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrstr);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".PwrHost";
    aopname = opname + ".PwrHost";
    attrstr = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrstr);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    aname = name + ".AppletSignature";
    aopname = opname + ".AppletSignature";
    attrstr = GetAttribute( aname, sts);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aname);
    endif
    sts = SetAttribute( aopname, attrstr);
    if ( EVEN(sts)) 
      printf( "Attribute error: %s\n", aopname);
    endif

    # Move WebGraph, WebLink, AppGraph and AppLink objects
    child = GetChild( name);
    prevchild = "";
    while ( child != "")
      class = GetObjectClass( child);
      if ( class == "WebGraph" || class == "WebLink" || class == "AppGraph" || class == "AppLink")
        MoveObject( child, opname, 2);
        child = prevchild;
      endif
      if ( class == "$NodeHier")
        nchild = GetChild( child);
        if ( nchild != "")
          nclass = GetObjectClass( nchild);
	  if ( nclass == "WebGraph" || nclass == "WebLink" || nclass == "AppGraph" || nclass == "AppLink")
            MoveObject( child, opname, 2);
            child = prevchild;
          endif
        endif
      endif
      prevchild = child;
      if ( child == "")
        child = GetChild( name);
      else
        child = GetNextSibling( child);
      endif
    endwhile
    name = GetNextAttrRef( "WebHandler", name);
  endwhile
  save

endmain
