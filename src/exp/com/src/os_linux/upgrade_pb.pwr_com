!** Invisible: Script for upgrading Profinet modules during upgrading from V5.4 to V5.5
! 
# Proview   Open Source Process Control.
# Copyright (C) 2005-2017 SSAB EMEA AB.
#
# This file is part of Proview.
#
# This program is free software; you can redistribute it and/or 
# modify it under the terms of the GNU General Public License as 
# published by the Free Software Foundation, either version 2 of 
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with Proview. If not, see <http://www.gnu.org/licenses/>
#
# Linking Proview statically or dynamically with other modules is
# making a combined work based on Proview. Thus, the terms and 
# conditions of the GNU General Public License cover the whole 
# combination.
#
# In addition, as a special exception, the copyright holders of
# Proview give you permission to, from the build function in the
# Proview Configurator, combine Proview with modules generated by the
# Proview PLC Editor to a PLC program, regardless of the license
# terms of these modules. You may copy and distribute the resulting
# combined work under the terms of your choice, provided that every 
# copy of the combined work is accompanied by a complete copy of 
# the source code of Proview (the version used to produce the 
# combined work), being distributed under the terms of the GNU 
# General Public License plus this exception.
!
!
! Script for upgrading Profinet modules during upgrading from V5.4 to V5.5,
!
! Sets the Slot attribute.
!

function int is_numeric( string s)
  string s1;
  int ret = 0;
  int len;

  s1 = extract( 1, 1, s);
  
  if ( s1 == "0" || s1 == "1" || s1 == "2" || s1 == "3" || s1 == "4" || s1 == "5" || s1 == "6" || s1 == "7" || s1 == "8" || s1 == "9")
     ret = 1;
  endif
  len = strlen(s);
  if ( len > 1)
    s1 = extract( 2, 1, s);
    if ( s1 == "0" || s1 == "1" || s1 == "2" || s1 == "3" || s1 == "4" || s1 == "5" || s1 == "6" || s1 == "7" || s1 == "8" || s1 == "9")
       ret = 1;
    endif
  endif
  return ret;
endfunction

function int set_slot( string mclass)
  string name;
  string sname;
  string snum;
  int num;
  string attr;
  string parent;
  string child;

  verify(0);

  name = GetClassList( mclass);
  while ( name != "") 

    sname = CutObjectName( name, 1);
    snum = extract( 2, 5, sname);

    num = is_numeric( snum);
    if ( num == 1)
    
      num = snum;

      attr = name + ".Slot";
      SetAttribute( attr, num);
      printf( "%s %d\n", name, num);
    else
      # Count siblings
      parent = GetParent( name);
      child = GetChild( parent);       
      num = 1;
      while ( child != "")
        if ( child == name)
	  attr = name + ".Slot";
	  SetAttribute( attr, num);
	  printf( "%s %d\n", name, num);
          break;
        endif

        child = GetNextSibling( child);
        num++;
      endwhile
    endif

    name = GetNextObject( name);
   
  endwhile
  return 1;
endfunction


main()

  set_slot( "PnModule");
  set_slot( "BaseFcPPO3PnModule");
  set_slot( "ABB_ACS880_PnModule");
  set_slot( "Siemens_Di4_PnModule");
  set_slot( "Siemens_Di2_PnModule");
  set_slot( "Siemens_Do4_PnModule");
  set_slot( "Siemens_Do2_PnModule");
  set_slot( "Siemens_Di32_PnModule");
  set_slot( "Siemens_D16_PnModule");
  set_slot( "Siemens_Dx16_PnModule");
  set_slot( "Siemens_Di8_PnModule");
  set_slot( "Siemens_Do32_PnModule");
  set_slot( "Siemens_Do16_PnModule");
  set_slot( "Siemens_Do8_PnModule");
  set_slot( "Siemens_Ai8_PnModule");
  set_slot( "Siemens_Ai4_PnModule");
  set_slot( "Siemens_Ai2_PnModule");
  set_slot( "Siemens_Ao8_PnModule");
  set_slot( "Siemens_Ao4_PnModule");
  set_slot( "Sinamics_Tgm1_PnModule");

endmain
