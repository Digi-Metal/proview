include $(pwre_dir_symbols)

ifndef variables_mk
 -include $(pwre_sroot)/tools/bld/src/$(os_name)/$(hw_name)/variables.mk
endif
ifndef variables_mk
 include $(pwre_sroot)/tools/bld/src/$(os_name)/variables.mk
endif


ifndef rules_mk
 -include $(pwre_sroot)/tools/bld/src/$(os_name)/$(hw_name)/rules.mk
endif
ifndef rules_mk
 include $(pwre_sroot)/tools/bld/src/$(os_name)/rules.mk
endif

vpath %.idf $(hw_source):$(os_source):$(co_source)

source_dirs = $(hw_source) $(os_source) $(co_source)

sources := $(sort \
             $(foreach file, \
               $(foreach dir, \
                 $(source_dirs), \
                 $(wildcard $(dir)/*.idf) \
               ), $(notdir $(file)) \
             ) \
           )

export_idf := $(patsubst %.idf, $(cnf_dir)/%.version, $(sources))
clean_idf := $(patsubst %.idf, clean_%.version, $(sources))

.SUFFIXES:

$(cnf_dir)/%.version : %.idf
	@ \@$(to-vms $(co_source)/)import import $(to-vms $(tmp_dir)/) \
	  $(source) $(target) $(to-vms $(exp_root)/)

.PHONY : all init copy lib exe clean realclean \
	 $(clean_idf)

all : init

init : $(export_idf)

copy :

lib :

exe :

clean : $(clean_idf)

realclean : $(clean_idf)

$(clean_idf) : clean_%.version : %.idf
	@ \@$(to-vms $(co_source)/)import clean $(to-vms $(tmp_dir)/) \
	  $(source) $(to-vms $(cnf_dir)/$*.version)\
	  $(to-vms $(exp_root)/)
