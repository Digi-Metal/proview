/** 
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and 
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of Proview (the version used to produce the 
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 **/

#ifndef co_array_h
#define co_array_h

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __STDDEF_LOADED
#include <stddef.h>
#endif

typedef struct {
  void *a;
  int elemsize;
  int allocated;
  int alloc_incr;
  int a_size;
} array_sCtx, *array_tCtx;


int array_Init( array_tCtx *ctx, int elemsize, int alloc_incr);
void array_Close( array_tCtx ctx);
int array_Add( array_tCtx ctx, void *elem);
int array_MAdd( array_tCtx ctx, void *elem, int elements);
int array_Get( array_tCtx ctx, int idx, void **elem);
int array_Size( array_tCtx ctx);
void *array_Array( array_tCtx ctx);
void *array_CopyArray( array_tCtx ctx);

#ifdef __cplusplus
}
#endif

#endif
