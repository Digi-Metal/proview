/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2019 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef rt_sev_net_h
#define rt_sev_net_h

#include "pwr.h"
#include "rt_net.h"

#ifdef __cplusplus
extern "C" {
#endif

#define sev_eProcSevClient 121
#define sev_eProcSevServer 122
#define sev_eProcSevImport 123
#define sev_cMsgClass 202
#define sev_cNetVersion 1

typedef enum {
  sev_eMsgType_NodeUp,
  sev_eMsgType_HistItemsRequest,
  sev_eMsgType_HistItems,
  sev_eMsgType_HistDataStore,
  sev_eMsgType_HistDataGetRequest,
  sev_eMsgType_HistDataGet,
  sev_eMsgType_HistItemDelete,
  sev_eMsgType_HistItemStatus,
  sev_eMsgType_ServerStatusRequest,
  sev_eMsgType_ServerStatus,
  sev_eMsgType_HistObjectDataGetRequest,
  sev_eMsgType_HistObjectDataGet,
  sev_eMsgType_EventsStore,
  sev_eMsgType_ExportNodeUp,
  sev_eMsgType_ExportItemsRequest,
  sev_eMsgType_ExportItems,
  sev_eMsgType_ExportData
} sev_eMsgType;

typedef enum {
  sev_eEventType_Info,
  sev_eEventType_Return,
  sev_eEventType_Ack,
  sev_eEventType_Alarm,
  sev_eEventType_Block,
  sev_eEventType_Cancel
} sev_eEventType;

typedef struct {
  sev_eEventType type;
  unsigned int eventprio;
  unsigned int eventid_nix;
  unsigned int eventid_birthtime;
  unsigned int eventid_idx;
  net_sTime time;
  char eventtext[80];
  char eventname[80];
  unsigned int sup_aref_vid;
  unsigned int sup_aref_oix;
  unsigned int sup_aref_offset;
  unsigned int sup_aref_size;
} sev_sEvent;

typedef struct {
  sev_eEventType type;
  unsigned int eventprio;
  unsigned int eventid_nix;
  unsigned int eventid_birthtime;
  unsigned int eventid_idx;
  net_sTime time;
  char eventtext[80];
  char eventname[80];
  unsigned int sup_aref_vid;
  unsigned int sup_aref_oix;
  unsigned int sup_aref_offset;
  unsigned int sup_aref_size;
} sev_sEventV0;

typedef struct {
  pwr_tOName aname;
  pwr_eType type;
  unsigned int size;
  unsigned int elem;
  pwr_tString16 unit;
} sev_sHistAttr;

typedef struct {
  pwr_tOid oid;
  pwr_tOName oname;
  net_sTime storagetime;
  net_sTime creatime;
  net_sTime modtime;
  pwr_tRefId sevid;
  pwr_tString80 description;
  pwr_tFloat32 scantime;
  pwr_tFloat32 deadband;
  pwr_tMask options;
  unsigned int attrnum;
  sev_sHistAttr attr[1];
} sev_sHistItem;

typedef struct {
  pwr_tRefId sevid;
  pwr_eType type;
  unsigned int size;
  int data[1];
} sev_sHistData;

// Message types

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
} sev_sMsgAny;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tStatus Status;
  unsigned int NumItems;
  unsigned int NumAttributes;
  sev_sHistItem Items[1];
} sev_sMsgHistItems;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  net_sTime Time;
  pwr_tUInt32 ServerThread;
  int Data[1];
} sev_sMsgHistDataStore;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  net_sTime Time;
  int Data[1];
} sev_sMsgHistDataStoreV0;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  net_sTime Time;
  pwr_tUInt32 ServerThread;
  int Data[1];
} sev_sMsgExportData;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tOid Oid;
  unsigned int NumEvents;
  pwr_tUInt32 ServerThread;
  sev_sEvent Events[1];
} sev_sMsgEventsStore;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tOid Oid;
  unsigned int NumEvents;
  sev_sEvent Events[1];
} sev_sMsgEventsStoreV0;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tOid Oid;
  pwr_tOName AName;
  net_sTime StartTime;
  net_sTime EndTime;
  int NumPoints;
} sev_sMsgHistDataGetRequest;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tOid Oid;
  pwr_tOName AName;
  pwr_tStatus Status;
  int NumPoints;
  pwr_eType VType;
  unsigned int VSize;
  int Data[1];
} sev_sMsgHistDataGet;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tOid Oid;
  pwr_tOName AName;
  pwr_tStatus Status;
  int NumPoints;
  int NumAttributes;
  unsigned int TotalDataSize;
  sev_sHistAttr Attr[1];
  int Data[1];
} sev_sMsgHistObjectDataGet;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tOid Oid;
  pwr_tOName AName;
} sev_sMsgHistItemDelete;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tOid Oid;
  pwr_tOName AName;
  pwr_tStatus Status;
} sev_sMsgHistItemStatus;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tStatus Status;
} sev_sMsgServerStatus;

typedef struct {
  pwr_tOid oid;
  pwr_tOName oname;
  pwr_tRefId sevid;
  pwr_tString80 description;
  pwr_tFloat32 scantime;
  pwr_tMask options;
  pwr_tOName aname;
  pwr_eType type;
  unsigned int size;
  unsigned int elem;
} sev_sExportItem;

typedef struct {
  pwr_tUInt16 Type;
  pwr_tUInt16 Version;
  pwr_tStatus Status;
  unsigned int NumItems;
  unsigned int NumAttributes;
  sev_sExportItem Items[1];
} sev_sMsgExportItems;


#ifdef __cplusplus
}
#endif

#endif
