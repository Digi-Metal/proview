! 
!  Proview   $Id: op_htre.uil,v 1.2 2005-09-06 10:39:34 claes Exp $
!  Copyright (C) 2005 SSAB Oxelösund AB.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with the program, if not, write to the Free Software 
!  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!
/*************************************************************************
**************************************************************************
*
*                 C O M A T O R   P R O C E S S 
*                 = = = = = = =   = = = = = = =
**************************************************************************
*
* Filnamn	: op_htre.uil
*
* Kompilator	: VMS C ver 2.3
* 
*		  Datum   Pgm.    Kodl.   Kommentar
* Versioner	: 920713  LE
*		  930204  LE		  Infört XmNdefaultPosition
*		  930504  LE		  Delete-knapp, diskret linjetyp
*		  940503  LE		  Tagit bort spec av hjälpbibl.
*					  Görs nu dynamiskt i program.
* System. info	: 
*
* Beskrivning	: Innehåller UIL-delen för trendkurvepaketet.
*		  En include-fil innehåller de språkberoende delarna
*		  av UIL-koden. 
*
*************************************************************************
*************************************************************************/

module tr_Draw
!    version = 'v1.0'
    names = case_sensitive

include file 'pwr_lang:inc_htre.uil'; 

value
    bitmap_colors : color_table ( background color = ' ', foreground color = '*');
! Icon size 50x50
    icon : exported icon ( color_table=bitmap_colors,
'* * * * * * * * * * * * * * * * * * * * * * * * * ',
' * * * * * * * * * * * * * * * * * * * * * * * * *',
'* * * * * * * * * * * * * * * * * * * * * * * * * ',
' * * * * * * * * * * * * * * * * * * * * * * * * *',
'* * * * * * * * * * * * * * * * * * * * * * * * * ',
' * * * * * * * * * * * * * * * * * * * * * * * * *',
'* * * * * * * * * * * * * * * * * * * * * * *** * ',
' * *                     *                   *** *',
'* *   *                                      ** * ',
' * *  *                  *       ** * * *    *** *',
'* *  ***                         ********    ** * ',
' * *  *                  *        * * *      *** *',
'* *   *                          **  *  *    ** * ',
' * *  *                  *       ********    *** *',
'* *   *                           * **  *    ** * ',
' * *  *                  *       ********    *** *',
'* *  **                          * **  **    ** * ',
' * *  *     ******       *                   *** *',
'* *   *   **      **                         ** * ',
' * *  *  *          **   *                   *** *',
'* *   * *             **             ****    ** * ',
' * *  *                 **          *        *** *',
'* *  ** * * * * * * * * * * * * * * * * *    ** * ',
' * *  *                  **      *           *** *',
'* *   *                    **   *            ** * ',
' * *  *                  *   ***             *** *',
'* *   *                                      ** * ',
' * *  *          ***     *                   *** *',
'* *  **      ****   **                       ** * ',
' * *  *   ***         ** *  **               *** *',
'* *   * **              * **  *      ****    ** * ',
' * *  *                  *     **  **        *** *',
'* *   *                          **          ** * ',
' * *  *                  *                   *** *',
'* *  **                                      ** * ',
' * *  *                  *                   *** *',
'* *   *                                      ** * ',
' * *  *                  *                   *** *',
'* *   *                                      ** * ',
' * *  *                  *               *   *** *',
'* *  ******************** ****************** ** * ',
' * *  *     *     *     *     *     *    *   *** *',
'* *                                          ** * ',
' * ********************************************* *',
'* * ******************************************* * ',
' * * * * * * * * * * * * * * * * * * * * * * * * *',
'* * * * * * * * * * * * * * * * * * * * * * * * * ',
' * * * * * * * * * * * * * * * * * * * * * * * * *',
'* * * * * * * * * * * * * * * * * * * * * * * * * ',
' * * * * * * * * * * * * * * * * * * * * * * * * *');



value
	 normal_font:
	       font('-Adobe-Courier-Bold-R-Normal--14-*-*-*-M-*-ISO8859-1');


procedure	HelpCallBack(string);

procedure	MakeNewWindow(integer);
procedure	CloseWindow(integer);
procedure	SaveSettings(integer);
procedure	StopUpdate(integer);
procedure	ScrollBack(integer);
procedure	ScrollForward(integer);
procedure	PlotRaster(integer);
procedure	ZoomPlot(integer);
procedure	RevertPlot(integer);

procedure 	MenuChooseGridLineSolid(integer);
procedure 	MenuChooseGridLineDotted(integer);

procedure	FontSize1(integer);
procedure	FontSize2(integer);
procedure	FontSize3(integer);
procedure	FontSize4(integer);

procedure	CreateMenuFontSize1(integer);
procedure	CreateMenuFontSize2(integer);
procedure	CreateMenuFontSize3(integer);
procedure	CreateMenuFontSize4(integer);
procedure	CreatePopFontSize1(integer);
procedure	CreatePopFontSize2(integer);
procedure	CreatePopFontSize3(integer);
procedure	CreatePopFontSize4(integer);


procedure	ShowMainForm(integer);
procedure	ShowLoadForm(integer);
procedure	ShowPrintForm(integer);
procedure 	ShowSearchForm(integer);
procedure 	ShowSaveAsForm(integer);
procedure	ShowGridForm(integer);

procedure 	DoDefinition(integer);
procedure 	DoLoad(integer);
procedure 	DoPrint(integer);
procedure 	DoSaveAs(integer);
procedure 	DoSearch(integer);
procedure	DoGrid(integer);
procedure 	MainChooseTextColor(integer);
procedure 	MainChooseBackColor(integer);

procedure 	ApplyLoadFilter(integer);
procedure	ApplyLoad(integer);
procedure	ApplyDelete(integer);
procedure 	ApplySearch(integer);
procedure 	ApplySave(integer);
procedure 	ApplyDefineAxis(integer);
procedure 	ApplyDefineYPar(integer);

procedure 	CancelLoad(integer);
procedure 	CancelSaveAs(integer);
procedure 	CancelPrint(integer);
procedure 	CancelSearch(integer);
procedure 	CancelDefinition(integer);
procedure	CancelGrid(integer);

procedure	CreateDrawMainPlotWindowW(integer);
procedure	CreateDrawMainFormW(integer);
procedure	CreateDrawMainStopButtonW(integer);
procedure	CreateDrawMainScrollBackButtonW(integer);
procedure	CreateDrawMainScrollForwButtonW(integer);
procedure	CreateDrawMainGridButtonW(integer);
procedure	CreateDrawMainZoomButtonW(integer);
procedure	CreateDrawMainRevertButtonW(integer);

procedure 	CreatePrintFormFileNameEntryW(integer);
procedure 	CreatePrintFormPrintSelectW(integer);
procedure 	CreatePrintFormRadioFileW(integer);
procedure 	CreatePrintFormRadioPrinterW(integer);
procedure 	CreatePrintFormRadioBothW(integer);
procedure 	CreatePrintFormOrientOptW(integer);
procedure 	CreatePrintFormOrientPortOptW(integer);
procedure 	CreatePrintFormOrientLandOptW(integer);

procedure 	PrintChoosePrinter(integer);
procedure 	PrintChooseOrientPortrait(integer);
procedure 	PrintChooseOrientLandscape(integer);
procedure 	PrintChooseDestFile(integer);
procedure 	PrintChooseDestPrinter(integer);
procedure 	PrintChooseDestBoth(integer);


procedure 	CreateSaveAsFormGroupNameEntryW(integer);
procedure 	CreateSaveAsFormDescrEntryW(integer);
procedure 	CreateSaveAsFormCreatorEntryW(integer);


procedure 	CreateLoadFormFilterButtonW(integer);
procedure 	CreateLoadFormLoadButtonW(integer);
procedure 	CreateLoadFormGroupNameEntryW(integer);
procedure 	CreateLoadFormParamEntryW(integer);
procedure 	CreateLoadFormCreatorEntryW(integer);
procedure 	CreateLoadFormGroupSelectW(integer);

procedure 	LoadChooseGroup(integer);


procedure 	CreateSearchFormClauseEntryW(integer);


procedure	CreateMainFormXParEntryW(integer);
procedure	CreateMainFormXMinEntryW(integer);
procedure	CreateMainFormXMaxEntryW(integer);
procedure	CreateMainFormXStepEntryW(integer);
procedure	CreateMainFormYParEntryW(integer);
procedure	CreateMainFormYSourceEntryW(integer);
procedure	CreateMainFormYOffsetEntryW(integer);
procedure 	CreateMainFormRadioTB1W(integer);
procedure 	CreateMainFormRadioTB2W(integer);
procedure 	CreateMainFormRadioTB3W(integer);
procedure 	CreateMainFormRadioTB4W(integer);
procedure 	CreateMainFormRadioTB5W(integer);
procedure 	CreateMainFormPlotTypeRealW(integer);
procedure 	CreateMainFormPlotTypeHistW(integer);
procedure 	CreateMainFormXTypeTimeW(integer);
procedure 	CreateMainFormXTypeNumW(integer);
procedure 	CreateMainFormYParSelectW(integer);
procedure 	CreateMainFormYSouSelectW(integer);
procedure	CreateMainFormAxisMinEntryW(integer);
procedure	CreateMainFormAxisMaxEntryW(integer);
procedure	CreateMainFormAxisStepEntryW(integer);
procedure	CreateMainFormAxisUnitEntryW(integer);
procedure 	CreateMainFormAxisSelectW(integer);
procedure 	CreateMainFormGroupNameW(integer);
procedure 	CreateMainFormDescrTextW(integer);
procedure 	CreateMainFormYAxisOptW(integer);
procedure 	CreateMainFormYAxis1OptW(integer);
procedure 	CreateMainFormYAxis2OptW(integer);
procedure 	CreateMainFormYAxis3OptW(integer);
procedure 	CreateMainFormYAxis4OptW(integer);
procedure 	CreateMainFormYLineOptW(integer);
procedure 	CreateMainFormYLineSolOptW(integer);
procedure 	CreateMainFormYLineDotOptW(integer);
procedure 	CreateMainFormYLineDisOptW(integer);
procedure 	CreateMainFormYDrawW(integer);
procedure 	CreateMainFormYColOptW(integer);
procedure 	CreateMainFormYCol1OptW(integer);
procedure 	CreateMainFormYCol2OptW(integer);
procedure 	CreateMainFormYCol3OptW(integer);
procedure 	CreateMainFormYCol4OptW(integer);

procedure 	CreateMainFormAxisPrecOptW(integer);
procedure 	CreateMainFormPrec0OptW(integer);
procedure 	CreateMainFormPrec1OptW(integer);
procedure 	CreateMainFormPrec2OptW(integer);
procedure 	CreateMainFormPrec3OptW(integer);
procedure 	CreateMainFormPrec4OptW(integer);

procedure	CreateMainFormYTypePointW(integer);
procedure	CreateMainFormYTypeColumnW(integer);


procedure 	MainChooseTimebase1(integer);
procedure 	MainChooseTimebase2(integer);
procedure 	MainChooseTimebase3(integer);
procedure 	MainChooseTimebase4(integer);
procedure 	MainChooseTimebase5(integer);
procedure 	MainChoosePlotTypeReal(integer);
procedure 	MainChoosePlotTypeHist(integer);
procedure 	MainChooseXTypeTime(integer);
procedure 	MainChooseXTypeNum(integer);
procedure 	MainChooseYParameter(integer);
procedure 	MainChooseYSource(integer);
procedure 	MainChooseAxis(integer);
procedure 	MainChooseYColour1(integer);
procedure 	MainChooseYColour2(integer);
procedure 	MainChooseYColour3(integer);
procedure 	MainChooseYColour4(integer);
procedure 	MainChooseYAxis1(integer);
procedure 	MainChooseYAxis2(integer);
procedure 	MainChooseYAxis3(integer);
procedure 	MainChooseYAxis4(integer);
procedure 	MainChooseYDraw(integer);
procedure 	MainChooseYLineSolid(integer);
procedure 	MainChooseYLineDotted(integer);
procedure 	MainChooseYLineDiscrete(integer);

procedure 	MainChoosePrec0(integer);
procedure 	MainChoosePrec1(integer);
procedure 	MainChoosePrec2(integer);
procedure 	MainChoosePrec3(integer);
procedure 	MainChoosePrec4(integer);

procedure	MainChooseYTypePoint(integer);
procedure	MainChooseYTypeColumn(integer);

procedure	CreateMenuPrintButtonW(integer);
procedure	CreatePopMenuPrintButtonW(integer);
procedure	CreateMainFormPrintButtonW(integer);

procedure	BackColorCancel (integer);
procedure	BackColorOK(integer);
procedure	BackColorApply (integer);

procedure	TextColorCancel (integer);
procedure	TextColorOK(integer);
procedure	TextColorApply (integer);

procedure	GridColorCancel (integer);
procedure	GridColorOK(integer);
procedure	GridColorApply (integer);

procedure 	CreateGridFormGrAxisOptW(integer);
procedure 	CreateGridFormGrAxis1OptW(integer);
procedure 	CreateGridFormGrAxis2OptW(integer);
procedure 	CreateGridFormGrAxis3OptW(integer);
procedure 	CreateGridFormGrAxis4OptW(integer);
procedure 	CreateGridFormGrLineOptW(integer);
procedure 	CreateGridFormGrLineSolOptW(integer);
procedure 	CreateGridFormGrLineDotOptW(integer);

procedure 	GridChooseGridAxis1(integer);
procedure 	GridChooseGridAxis2(integer);
procedure 	GridChooseGridAxis3(integer);
procedure 	GridChooseGridAxis4(integer);
procedure 	GridChooseGridLineSolid(integer);
procedure 	GridChooseGridLineDotted(integer);
procedure 	GridChooseColor(integer);

procedure	CreateMenuGridSolid(integer);
procedure	CreateMenuGridDotted(integer);
procedure	CreatePopGridSolid(integer);
procedure	CreatePopGridDotted(integer);

identifier
		DrawView;



/**************************************************************************/
/**************************************************************************/
/* This describes the main window for the draw application */

object drawmain : XmMainWindow {
    arguments {
    };
    controls {
        XmMenuBar main_menu;
	XmForm drawmainbox;
    };
    callbacks {
    };
};

/**************************************************************************/
/* This describes the objects in the dialogbox in the main window 
   for the draw application */

/**************************************************************************/
/* This describes the menubar in the main window for the draw application */

object main_menu : XmMenuBar {
    arguments {
        XmNorientation = XmHORIZONTAL;
	XmNmenuHelpWidget = XmCascadeButton help_menu_entry;
        XmNspacing = 15;
    };
    controls {
        XmCascadeButton file_menu_entry;
        XmCascadeButton cust_menu_entry;
        XmCascadeButton help_menu_entry;
    };
};

object file_menu_entry:XmCascadeButton {
    arguments {
        XmNlabelString = file_menu_label;   
        XmNmnemonic    = file_menu_key;
    };
    controls {
        XmPulldownMenu file_menu;
    };
};

object cust_menu_entry:XmCascadeButton {
    arguments {
        XmNlabelString = cust_menu_label;   
        XmNmnemonic    = cust_menu_key;
    };
    controls {
        XmPulldownMenu cust_menu;
    };
};

object help_menu_entry:XmCascadeButton {
    arguments {
        XmNlabelString = help_menu_label;   
        XmNmnemonic    = help_menu_key;
    };
    controls {
        XmPulldownMenu help_menu;
    };
};

/* The file menu choices: */

object file_menu:XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments {
        XmNmnemonic    = file_menu_def_key;
        XmNlabelString = file_menu_def_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure ShowMainForm(DrawView);   
	    };
	};
	XmPushButton {
	    arguments {
        XmNmnemonic    = file_menu_load_key;
        XmNlabelString = file_menu_load_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure ShowLoadForm(DrawView);   
	    };
	};
	XmPushButton {
	    arguments {
        XmNmnemonic    = file_menu_clause_key;
        XmNlabelString = search_button_label;   
	    };
	    callbacks {
        XmNactivateCallback = procedure ShowSearchForm(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNmnemonic    = file_menu_new_key;
        XmNlabelString = file_menu_new_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure MakeNewWindow(DrawView);   
	    };
	};
	XmPushButton {
	    arguments {
        XmNmnemonic    = file_menu_print_key;
        XmNlabelString = file_menu_print_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure ShowPrintForm(DrawView);   
	MrmNcreateCallback  = procedure	CreateMenuPrintButtonW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNmnemonic    = file_menu_quit_key;
        XmNlabelString = file_menu_quit_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure CloseWindow(DrawView);   
	    };
	};
    };
};

/* The customize menu choices: */

object cust_menu:XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments {
		XmNmnemonic    = cust_menu_save_key;
		XmNlabelString = cust_menu_save_entry;   
	    };
	    callbacks {
		XmNactivateCallback = procedure SaveSettings(DrawView);   
	    };
	};

        XmCascadeButton {
            arguments {
		XmNmnemonic    = cust_menu_font_key;
		XmNlabelString = font_menu_label;   
            };
            controls {
		XmPulldownMenu {
		    controls {
			XmToggleButton {
			    arguments {
				XmNlabelString = font_menu_size1_entry;   
			    };
		            callbacks {
				XmNvalueChangedCallback = procedure FontSize1(DrawView);
				MrmNcreateCallback  = procedure	CreateMenuFontSize1(DrawView);
			    };
			};
		        XmToggleButton {
			    arguments {
				XmNlabelString = font_menu_size2_entry;   
		            };
		            callbacks {
				XmNvalueChangedCallback = procedure FontSize2(DrawView);
				MrmNcreateCallback  = procedure	CreateMenuFontSize2(DrawView);
		            };
			};
			XmToggleButton {
			    arguments {
				XmNlabelString = font_menu_size3_entry;   
			    };
			    callbacks {
				XmNvalueChangedCallback = procedure FontSize3(DrawView);
				MrmNcreateCallback  = procedure	CreateMenuFontSize3(DrawView);
			    };
			};
			XmToggleButton {
		            arguments {
				XmNlabelString = font_menu_size4_entry;   
		            };
			    callbacks {
				XmNvalueChangedCallback = procedure FontSize4(DrawView);
				MrmNcreateCallback  = procedure	CreateMenuFontSize4(DrawView);
			    };
			};
		    };
		};
	    };
	};

        XmCascadeButton {
            arguments {
		XmNlabelString = y_grid_menu_label;   
            };
            controls {
		XmPulldownMenu {
		    controls {
			XmToggleButton {
			    arguments {
				XmNlabelString  = line_solid_label;   
				XmNset = true;
			    };
			    callbacks {
				XmNvalueChangedCallback = procedure MenuChooseGridLineSolid(DrawView);   
				MrmNcreateCallback  = procedure	CreateMenuGridSolid(DrawView);
			    };
			};
			XmToggleButton {
			    arguments {
				XmNlabelString  = line_dotted_label;   
			    };
			    callbacks {
				XmNvalueChangedCallback = procedure MenuChooseGridLineDotted(DrawView);   
				MrmNcreateCallback  = procedure	CreateMenuGridDotted(DrawView);
			    };
			};
			XmSeparator {
			    arguments {
			XmNorientation = XmHORIZONTAL;
			    };
			    callbacks
			    {
			    };
			};
			XmPushButton {
			    arguments {
				XmNlabelString  = y_grid_options_label;   
			    };
			    callbacks {
				XmNactivateCallback  = procedure ShowGridForm (DrawView);   
			    };
			};
		    };
		};
	    };
	};
    };
};

/* The help menu choices: */

object help_menu:XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments {
        XmNlabelString = help_menu_overview_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure HelpCallBack(help_overview_topic);   
	    };
	};

!	XmPushButton {
!	    arguments {
!        XmNlabelString = help_menu_glossary_entry;   
!	    };
!	    callbacks {
!        XmNactivateCallback = procedure HelpCallBack(help_glossary_topic);
!	    };
!	};

    };
};

/**************************************************************************/
/* This describes the dialogbox in the main window for the draw application */

object drawmainbox : XmForm {
    arguments {
    };
    controls {
        XmPushButton	drawmain_stopbutton;
        XmPushButton	drawmain_scrollbackbutton;
        XmPushButton	drawmain_scrollforwardbutton;
        XmPushButton	drawmain_rasterbutton;
        XmPushButton	drawmain_zoombutton;
        XmPushButton	drawmain_revertbutton;
	XmDrawingArea	drawmain_plotwindow;
        };
    callbacks {
	XmNhelpCallback = procedure HelpCallBack(help_on_draw_main_topic);
        MrmNcreateCallback = procedure CreateDrawMainFormW(DrawView);
    };
};

/**************************************************************************/
/* This describes the objects in the dialogbox in the main window 
   for the draw application */

object drawmain_stopbutton : XmPushButton {
    arguments {
        XmNwidth = 65;
        XmNheight = 30;
        XmNlabelString = stop_button_label;   
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 3;
    };
    callbacks {
        XmNactivateCallback =procedure StopUpdate(DrawView);   
        MrmNcreateCallback = procedure CreateDrawMainStopButtonW(DrawView);
    };
};

object drawmain_scrollbackbutton : XmPushButton {
    arguments {
        XmNwidth = 65;
        XmNheight = 30;
        XmNlabelString = back_button_label;   
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 3;
    };
    callbacks {
        XmNactivateCallback =procedure ScrollBack(DrawView);   
        MrmNcreateCallback = procedure CreateDrawMainScrollBackButtonW(DrawView);
    };
};

object drawmain_scrollforwardbutton : XmPushButton {
    arguments {
        XmNwidth = 65;
        XmNheight = 30;
        XmNlabelString = forward_button_label;   
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 3;
    };
    callbacks {
        XmNactivateCallback =procedure ScrollForward(DrawView);   
        MrmNcreateCallback = procedure CreateDrawMainScrollForwButtonW(DrawView);
    };
};

object drawmain_rasterbutton : XmPushButton {
    arguments {
        XmNwidth = 65;
        XmNheight = 30;
        XmNlabelString = raster_button_label;   
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 3;
    };
    callbacks {
        XmNactivateCallback =procedure PlotRaster(DrawView);   
        MrmNcreateCallback = procedure CreateDrawMainGridButtonW(DrawView);
    };
};

object drawmain_zoombutton : XmPushButton {
    arguments {
        XmNwidth = 65;
        XmNheight = 30;
        XmNlabelString = zoom_button_label;   
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 3;
    };
    callbacks {
        XmNactivateCallback =procedure ZoomPlot(DrawView);   
        MrmNcreateCallback = procedure CreateDrawMainZoomButtonW(DrawView);
    };
};

object drawmain_revertbutton : XmPushButton {
    arguments {
        XmNwidth = 65;
        XmNheight = 30;
        XmNlabelString = revert_button_label;   
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 3;
    };
    callbacks {
        XmNactivateCallback =procedure RevertPlot(DrawView);   
        MrmNcreateCallback = procedure CreateDrawMainRevertButtonW(DrawView);
    };
};


object drawmain_plotwindow : XmDrawingArea {
    arguments {
        XmNborderWidth = 1;
        XmNborderColor = color("black");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 3;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 3;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomWidget = XmPushButton drawmain_stopbutton;
        XmNbottomOffset = 3;
        XmNrightAttachment = XmATTACH_FORM;
        XmNrightOffset = 3;
      };
    callbacks {
        MrmNcreateCallback = procedure CreateDrawMainPlotWindowW(DrawView);
    };
};



/**************************************************************************/
/* This handles the popupmenu */

object pop : XmPopupMenu {
    controls {
	XmPushButton {
	    arguments {
        XmNlabelString = file_menu_def_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure ShowMainForm(DrawView);   
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString = file_menu_load_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure ShowLoadForm(DrawView);   
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString = search_button_label;   
	    };
	    callbacks {
        XmNactivateCallback = procedure ShowSearchForm(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString = file_menu_new_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure MakeNewWindow(DrawView);   
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString = file_menu_print_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure ShowPrintForm(DrawView);   
	MrmNcreateCallback  = procedure	CreatePopMenuPrintButtonW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString = cust_menu_save_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure SaveSettings(DrawView);   
	    };
	};

        XmCascadeButton {
            arguments {
        XmNlabelString = y_grid_menu_label;   
            };
            controls {
		XmPulldownMenu {
		    controls {
			XmToggleButton {
			    arguments {
		        XmNlabelString  = line_solid_label;   
			XmNset = true;
			    };
			    callbacks {
		        XmNvalueChangedCallback  = procedure MenuChooseGridLineSolid(DrawView);   
			MrmNcreateCallback  = procedure	CreatePopGridSolid(DrawView);
			    };
			};
			XmToggleButton {
			    arguments {
		        XmNlabelString  = line_dotted_label;   
			    };
			    callbacks {
		        XmNvalueChangedCallback  = procedure MenuChooseGridLineDotted(DrawView);   
			MrmNcreateCallback  = procedure	CreatePopGridDotted(DrawView);
			    };
			};
			XmSeparator {
			    arguments {
			XmNorientation = XmHORIZONTAL;
			    };
			    callbacks
			    {
			    };
			};
			XmPushButton {
			    arguments {
				XmNlabelString  = y_grid_options_label;   
			    };
			    callbacks {
				XmNactivateCallback  = procedure ShowGridForm (DrawView);   
			    };
			};
		    };
		};
	    };
	};

        XmCascadeButton {
            arguments {
        XmNlabelString = font_menu_label;   
            };
            controls {
		XmPulldownMenu {
		    controls {
			XmToggleButton {
			    arguments {
		        XmNlabelString = font_menu_size1_entry;   
			    };
			    callbacks {
		        XmNvalueChangedCallback = procedure FontSize1(DrawView);
			MrmNcreateCallback  = procedure	CreatePopFontSize1(DrawView);
			    };
			};
			XmToggleButton {
			    arguments {
		        XmNlabelString = font_menu_size2_entry;   
			    };
			    callbacks {
		        XmNvalueChangedCallback = procedure FontSize2(DrawView);
			MrmNcreateCallback  = procedure	CreatePopFontSize2(DrawView);
			    };
			};
			XmToggleButton {
			    arguments {
		        XmNlabelString = font_menu_size3_entry;   
			    };
			    callbacks {
		        XmNvalueChangedCallback = procedure FontSize3(DrawView);
			MrmNcreateCallback  = procedure	CreatePopFontSize3(DrawView);
			    };
			};
			XmToggleButton {
			    arguments {
		        XmNlabelString = font_menu_size4_entry;   
			    };
			    callbacks {
		        XmNvalueChangedCallback = procedure FontSize4(DrawView);
			MrmNcreateCallback  = procedure	CreatePopFontSize4(DrawView);
			    };
			};
		    };
		};
            };
        };

	XmPushButton {
	    arguments {
        XmNlabelString = file_menu_quit_entry;   
	    };
	    callbacks {
        XmNactivateCallback = procedure CloseWindow(DrawView);   
	    };
	};
    };
};


/**************************************************************************/
/* This describes the help dialogbox for the draw application */

object helpform : DXmHelpDialog {
    arguments {
	DXmNapplicationName = help_box_title;
	DXmNglossaryTopic = help_glossary_topic;
	DXmNoverviewTopic = help_overview_topic;
	DXmNaddtopicLabel = help_addtopic_label;
	DXmNbadframeMessage = help_badframe_message;
	DXmNbadlibMessage = help_badlib_message;
	DXmNcloseLabel = help_close_label;
	DXmNcopyLabel = help_copy_label;
	DXmNdismissLabel = help_dismiss_label;
	DXmNeditLabel = help_edit_label;
	DXmNexitLabel = help_exit_label;
	DXmNfileLabel = help_file_label;
	DXmNgobackLabel = help_goback_label;
	DXmNgobacktopicLabel = help_gobacktopic_label;
	DXmNgooverLabel = help_goover_label;
	DXmNgotoLabel = help_goto_label;
	DXmNgototopicLabel = help_gototopic_label;
	DXmNhelpAcknowledgeLabel = help_acknowledge_label;
	DXmNhelphelpLabel = help_help_label;
	DXmNhelpLabel = help_label;
	DXmNhelpOnHelpTitle = help_onhelp_title;
	DXmNhelpontitleLabel = help_ontitle_label;
	DXmNhistoryboxLabel = help_historybox_label;
	DXmNhistoryLabel = help_history_label;
	DXmNkeywordLabel = help_keyword_label;
	DXmNkeywordsLabel = help_keywords_label;
	DXmNnokeywordMessage = help_nokeyword_message;
	DXmNnotitleMessage = help_notitle_message;
	DXmNnulllibMessage = help_nullib_message;
	DXmNsaveasLabel = help_saveas_label;
	DXmNsearchapplyLabel = help_searchapply_label;
	DXmNsearchkeywordboxLabel = help_searchkeywordbox_label;
	DXmNsearchLabel = help_search_label;
	DXmNsearchtitleboxLabel = help_searchtitle_label;
	DXmNselectallLabel = help_selectall_label;
	DXmNtitleLabel = help_title_label;
	DXmNtitlesLabel = help_titles_label;
	DXmNtopictitlesLabel = help_topictitles_label;
	DXmNviewLabel = help_view_label;
	DXmNvisitglosLabel = help_visitglos_label;
	DXmNvisitLabel = help_visit_label;
	DXmNvisittopicLabel = help_visittopic_label;
    };
};


/**************************************************************************/
/**************************************************************************/
/* This form handles the print dialog */

object printform : XmFormDialog {
    arguments {
        XmNdialogTitle  = print_form_title;   
	XmNnoResize = true;
	XmNdefaultPosition = false;
    };
    controls {
	XmForm printdiabox;
    };
    callbacks {
    };
};


object printdiabox : XmForm {
    arguments {
        XmNdefaultButton = XmPushButton printform_dobutton;
        XmNheight = 300;
    };
    controls {
	XmLabel		printform_filenamelabel;
	XmText		printform_filenameentry;
	XmLabel		printform_printerlabel;
	XmScrolledList	printform_printerselection;
	XmRadioBox	printform_destinationchoice;
	XmOptionMenu	printform_paperorientation;
        XmPushButton 	printform_dobutton;
        XmPushButton 	printform_cancelbutton;
    };
    callbacks {
	XmNhelpCallback = procedure HelpCallBack(help_on_print_form_topic);
    };
};
                                   
/**************************************************************************/
/* This describes the objects in the print dialogbox
   in the draw application */

/* This button handles the "OK" function 
   in the print form */

object printform_dobutton : XmPushButton
{
    arguments
    {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = print_button_label;   
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 2;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText printform_filenameentry;
        XmNleftOffset = 20;
    };
    callbacks
    {
        XmNactivateCallback = procedure DoPrint(DrawView);   
    };
};

/* This button handles the "cancel" function 
   in the print form */

object printform_cancelbutton : XmPushButton
{
    arguments
    {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = cancel_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText printform_filenameentry;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmPushButton printform_dobutton;
        XmNtopOffset = 2;
    };
    callbacks
    {
        XmNactivateCallback = procedure CancelPrint(DrawView);   
    };
};


/* This XmLabel text handles filename input
   in the print form */

object printform_filenamelabel : XmLabel {
    arguments {
        XmNlabelString  = print_filename_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

/* This simple text XmNentryCallback handles filename input
   in the print form */

object printform_filenameentry : XmText {
    arguments  {
        XmNcolumns = 50;
        XmNmaxLength = 80;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmLabel printform_filenamelabel;
        XmNtopOffset = 5;
    };
    callbacks {
	MrmNcreateCallback 	= procedure CreatePrintFormFileNameEntryW(DrawView);
    };
};

/* This XmLabel text handles printer XmSelectionDialog 
   in the print form */

object printform_printerlabel : XmLabel {
    arguments {
        XmNlabelString  = printer_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmText printform_filenameentry;
        XmNtopOffset = 20;
    };
    callbacks {
    };
};
                                                                         
/* This listbox handles the printer queue XmSelectionDialog  
   in the print form */

object printform_printerselection : XmScrolledList {
    arguments {
        XmNwidth = 180;
        XmNvisibleItemCount  = 4;   
        XmNselectionPolicy  = XmSINGLE_SELECT;   
        XmNfontList = normal_font;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmLabel printform_printerlabel;
        XmNtopOffset = 5;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 10;
    };
    callbacks {
        XmNsingleSelectionCallback = procedure PrintChoosePrinter(DrawView);
        XmNdefaultActionCallback = procedure DoPrint(DrawView);
        MrmNcreateCallback = procedure CreatePrintFormPrintSelectW(DrawView);
    };
};
                                     
/* This optionmenu handles the paper XmNorientation 
   in the print form */

object printform_paperorientation : XmOptionMenu {
    arguments {
        XmNlabelString  = print_orientation_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList printform_printerselection;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmRadioBox printform_destinationchoice;
        XmNtopOffset = 20;
	XmNnavigationType = XmTAB_GROUP;
    };
    controls {
        XmPulldownMenu orientation_menu;
    };
    callbacks {
	MrmNcreateCallback = procedure CreatePrintFormOrientOptW(DrawView);
    };
};

object orientation_menu : XmPulldownMenu {
    controls {
        XmPushButton      portrait;
        XmPushButton      landscape;
    };
};

object portrait : XmPushButton {
    arguments {
        XmNlabelString  = portrait_label;   
    };
    callbacks {
        XmNactivateCallback  = procedure PrintChooseOrientPortrait(DrawView);   
	MrmNcreateCallback	 = procedure CreatePrintFormOrientPortOptW(DrawView);
    };
};

object landscape : XmPushButton {
    arguments {
        XmNlabelString  = landscape_label;   
    };
    callbacks {
        XmNactivateCallback  = procedure PrintChooseOrientLandscape(DrawView);   
	MrmNcreateCallback	 = procedure CreatePrintFormOrientLandOptW(DrawView);
    };
};
                                                                             
/* This radiobuttonpanel handles the destination for printout 
   in the print form */

object printform_destinationchoice : XmRadioBox {
    arguments {
        XmNorientation  = XmVERTICAL;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList printform_printerselection;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmText	printform_filenameentry;
        XmNtopOffset = 20;
    };
    controls {
        XmToggleButton radio_file;
        XmToggleButton radio_printer;
        XmToggleButton radio_both;
    };
};

object radio_file : XmToggleButton {
    arguments {
        XmNlabelString  = print_dest_file_label;    
    };
    callbacks {
        XmNarmCallback  	= procedure PrintChooseDestFile(DrawView);
        MrmNcreateCallback 	= procedure CreatePrintFormRadioFileW(DrawView);
    };
};

object radio_printer : XmToggleButton {
    arguments {
        XmNlabelString  = print_dest_printer_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure PrintChooseDestPrinter(DrawView);
        MrmNcreateCallback 	= procedure CreatePrintFormRadioPrinterW(DrawView);
    };
};

object radio_both : XmToggleButton {
    arguments {
        XmNlabelString  = print_dest_both_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure PrintChooseDestBoth(DrawView);
        MrmNcreateCallback 	= procedure CreatePrintFormRadioBothW(DrawView);
    };
};



/**************************************************************************/
/**************************************************************************/
/* This form handles the save function in the Save As... dialog */

object saveasform : XmFormDialog {
    arguments {
        XmNdialogTitle  = saveas_form_title;   
	XmNnoResize = true;
	XmNdefaultPosition = false;
    };
    controls {
	XmForm saveasdiabox;
    };
    callbacks {
    };
};


object saveasdiabox : XmForm {
    arguments {
        XmNdefaultButton = XmPushButton saveasform_savebutton;
    };
    controls {
	XmLabel		saveasform_groupname;	
	XmText		saveasform_groupnameentry;	
	XmLabel		saveasform_description;	
	XmText		saveasform_descriptionentry;	
	XmLabel		saveasform_creator;	
	XmText		saveasform_creatorentry;	
	XmPushButton	saveasform_savebutton;
	XmPushButton	saveasform_cancelbutton;
    };
    callbacks {
	XmNhelpCallback = procedure HelpCallBack(help_on_saveas_form_topic);
    };
};
                                   
/**************************************************************************/
/* This describes the objects in the dialogbox for Save As...
   in the draw application */

/* This button handles the save function 
   in the Save As... form*/

object saveasform_savebutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = save_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmLabel saveasform_creator;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure DoSaveAs(DrawView);   
    };
};

/* This button handles XmNcancelCallback in the
   in the Save As... form */

object saveasform_cancelbutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = cancel_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmLabel saveasform_creator;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmPushButton saveasform_savebutton;
        XmNtopOffset = 2;
    };
    callbacks
    {
        XmNactivateCallback = procedure CancelSaveAs(DrawView);   
    };
};

/* This XmLabel text handles the curvegroup name
   in the save as dialog */

object saveasform_groupname : XmLabel {
    arguments {
        XmNlabelString  = curve_group_name_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
};
    callbacks {
    };
};

/* This simple text XmNentryCallback handles the curvegroup name
   in the save as dialog */

object saveasform_groupnameentry : XmText {
    arguments  {
        XmNcolumns = 20;
        XmNmaxLength = 40;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmLabel saveasform_groupname;
        XmNtopOffset = 5;
    };
    callbacks {
	MrmNcreateCallback	= procedure CreateSaveAsFormGroupNameEntryW(DrawView);
    };
};

/* This XmLabel text handles the curvegroup description 
   in the save as dialog */

object saveasform_description : XmLabel {
    arguments {
        XmNlabelString  = curve_group_descr_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmText saveasform_groupnameentry;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

/* This simple text XmNentryCallback handles the curvegroup description 
   in the save as dialog */

object saveasform_descriptionentry : XmText {
    arguments  {
        XmNcolumns = 40;
        XmNmaxLength = 80;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmLabel saveasform_description;
        XmNtopOffset = 5;
    };
    callbacks {
	MrmNcreateCallback	= procedure CreateSaveAsFormDescrEntryW(DrawView);
    };
};
                                                                         
/* This XmLabel text handles the curvegroup creator 
   in the save as dialog */

object saveasform_creator : XmLabel {
    arguments {
        XmNlabelString  = curve_group_creator_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmText saveasform_groupnameentry;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

/* This simple text XmNentryCallback handles the creator name 
   in the save as dialog */

object saveasform_creatorentry : XmText {
    arguments  {
        XmNcolumns = 5;
        XmNmaxLength = 8;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmText saveasform_groupnameentry;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmLabel saveasform_creator;
        XmNtopOffset = 5;
    };
    callbacks {
	MrmNcreateCallback	= procedure CreateSaveAsFormCreatorEntryW(DrawView);
    };
};


/**************************************************************************/
/**************************************************************************/
/* This form handles the load function in the Load dialog */

object loadform : XmFormDialog {
    arguments {
        XmNdialogTitle  = load_form_title;   
	XmNnoResize = false;
	XmNdefaultPosition = false;
    };
    controls {
	XmForm loaddiabox;
    };
    callbacks {
    };
};


object loaddiabox : XmForm {
    arguments {
        XmNdefaultButton = XmPushButton loadform_cancelbutton;
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNtopAttachment = XmATTACH_FORM;
	XmNbottomAttachment = XmATTACH_FORM;
    };
    controls {
	XmLabel		loadform_groupname;	
	XmText		loadform_groupnameentry;	
	XmLabel		loadform_parameter;	
	XmText		loadform_parameterentry;	
	XmLabel		loadform_creator;	
	XmText		loadform_creatorentry;	
	XmPushButton	loadform_filterbutton;
	XmPushButton	loadform_okbutton;
	XmPushButton	loadform_loadbutton;
	XmPushButton	loadform_cancelbutton;
	XmPushButton	loadform_deletebutton;
	XmScrolledList	loadform_curvegroupselection;
    };
    callbacks {
	XmNhelpCallback = procedure HelpCallBack(help_on_load_form_topic);
    };
};
                                   
/**************************************************************************/
/* This describes the objects in the load dialogbox in the
   draw application */

/* This button handles the filter function 
   in the load form*/

object loadform_filterbutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = filter_button_label;   
	XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
	XmNrightWidget = XmScrolledList	loadform_curvegroupselection;
	XmNrightOffset = 0;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure ApplyLoadFilter(DrawView);   
	MrmNcreateCallback = procedure CreateLoadFormFilterButtonW(DrawView);
    };
};
                                   
/* This button handles the load and unmanage function 
   in the load form*/

object loadform_okbutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = load_button_label;   
	XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
	XmNrightWidget = XmScrolledList	loadform_curvegroupselection;
	XmNrightOffset = 0;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton loadform_filterbutton;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure DoLoad(DrawView);   
	MrmNcreateCallback = procedure CreateLoadFormLoadButtonW(DrawView);
    };
};

/* This button handles the load function 
   in the load form*/

object loadform_loadbutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = load_apply_button_label;   
	XmNrightAttachment = XmATTACH_FORM;
	XmNrightOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton loadform_okbutton;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure ApplyLoad(DrawView);   
    };
};

/* This button handles XmNcancelCallback in the
   in the load form */

object loadform_cancelbutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = cancel_button_label;   
	XmNrightAttachment = XmATTACH_FORM;
	XmNrightOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton loadform_loadbutton;
        XmNtopOffset = 2;
    };
    callbacks
    {
        XmNactivateCallback = procedure CancelLoad(DrawView);   
    };
};

/* This button handles delete callback in the
   in the load form */

object loadform_deletebutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = delete_button_label;   
        XmNrightAttachment = XmATTACH_WIDGET;
	XmNrightWidget = XmPushButton loadform_cancelbutton;
        XmNrightOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton loadform_loadbutton;
        XmNtopOffset = 2;
    };
    callbacks
    {
        XmNactivateCallback = procedure ApplyDelete(DrawView);   
    };
};

/* This XmLabel text handles the curvegroup name
   in the load as dialog */

object loadform_groupname : XmLabel {
    arguments {
        XmNlabelString  = curve_group_name_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

/* This simple text XmNentryCallback handles the curvegroup name
   in the load as dialog */

object loadform_groupnameentry : XmText {
    arguments  {
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel loadform_groupname;
        XmNtopOffset = 5;
        XmNcolumns = 20;
        XmNmaxLength = 40;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
    };
    callbacks {
	MrmNcreateCallback = procedure CreateLoadFormGroupNameEntryW(DrawView);
    };
};

/* This XmLabel text handles the curvegroup parameter 
   in the load as dialog */

object loadform_parameter : XmLabel {
    arguments {
        XmNlabelString  = y_parameter_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmText loadform_groupnameentry;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

/* This simple text XmNentryCallback handles the curvegroup parameter 
   in the load dialog */

object loadform_parameterentry : XmText {
    arguments  {
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel loadform_parameter;
        XmNtopOffset = 5;
        XmNcolumns = 20;
        XmNmaxLength = 40;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
    };
    callbacks {
	MrmNcreateCallback	= procedure CreateLoadFormParamEntryW(DrawView);
    };
};
                                                                         
/* This XmLabel text handles the curvegroup creator 
   in the load as dialog */

object loadform_creator : XmLabel {
    arguments {
        XmNlabelString  = curve_group_creator_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmText loadform_groupnameentry;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

/* This simple text XmNentryCallback handles the curvegroup name
   in the load as dialog */

object loadform_creatorentry : XmText {
    arguments  {
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmText loadform_groupnameentry;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel loadform_creator;
        XmNtopOffset = 5;
        XmNcolumns = 5;
        XmNmaxLength = 8;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
    };
    callbacks {
	MrmNcreateCallback	= procedure CreateLoadFormCreatorEntryW(DrawView);
    };
};

/* This listbox handles the curve group XmSelectionDialog 
   in the load form */

object loadform_curvegroupselection : XmScrolledList {
    arguments {
        XmNwidth = 450;  
	XmNlistSizePolicy = XmCONSTANT;
        XmNvisibleItemCount  = 4;  
        XmNselectionPolicy  = XmSINGLE_SELECT;   
        XmNfontList = normal_font;
        XmNrightAttachment = XmATTACH_FORM;
        XmNrightOffset = 10;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = 	XmText loadform_parameterentry;	
        XmNtopOffset = 40;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 10;
    };
    callbacks {
        XmNsingleSelectionCallback = procedure LoadChooseGroup(DrawView);
        XmNdefaultActionCallback = procedure DoLoad(DrawView);
        MrmNcreateCallback = procedure CreateLoadFormGroupSelectW(DrawView);
    };
};


/**************************************************************************/
/**************************************************************************/
/* This form handles the search clause function in the search dialog */

object searchform : XmFormDialog {
    arguments {
        XmNdialogTitle  = search_form_title;   
	XmNnoResize = true;
	XmNdefaultPosition = false;
    };
    controls {
	XmForm searchdiabox;
    };
    callbacks {
    };
};


object searchdiabox : XmForm {
    arguments {
        XmNdefaultButton = XmPushButton searchform_applybutton;
    };
    controls {
	XmLabel		searchform_clause;	
	XmText 	        searchform_clauseentry;	
	XmPushButton	searchform_dobutton;
	XmPushButton	searchform_applybutton;
	XmPushButton	searchform_cancelbutton;
    };
    callbacks {
	XmNhelpCallback = procedure HelpCallBack(help_on_search_form_topic);
    };
};
                                   
/**************************************************************************/
/* This describes the objects in the search clause dialogbox 
   in the draw application */

/* This button handles the OK function 
   in the search form*/

object searchform_dobutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = ok_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmText searchform_clauseentry;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure DoSearch(DrawView);   
    };
};

/* This button handles the apply function 
   in the search form*/

object searchform_applybutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = do_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmText searchform_clauseentry;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton searchform_dobutton;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure ApplySearch(DrawView);   
    };
};

/* This button handles XmNcancelCallback in the
   in the search form */

object searchform_cancelbutton : XmPushButton {
    arguments {
        XmNwidth = 95;
        XmNheight = 30;
        XmNlabelString = cancel_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmText searchform_clauseentry;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton searchform_applybutton;
        XmNtopOffset = 2;
    };
    callbacks
    {
        XmNactivateCallback = procedure CancelSearch(DrawView);   
    };
};

/* This XmLabel text handles the clause text 
   in the search dialog */

object searchform_clause : XmLabel {
    arguments {
        XmNlabelString  = search_clause_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

/* This simple text XmNentryCallback handles the search clause input 
   in the search dialog */

object searchform_clauseentry : XmText {
    arguments  {
        XmNx = 10;
        XmNy = 25;
        XmNcolumns = 40;
        XmNmaxLength = 80;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel searchform_clause;
        XmNtopOffset = 5;
    };
    callbacks {
	MrmNcreateCallback	= procedure CreateSearchFormClauseEntryW(DrawView);
    };
};


/**************************************************************************/
/**************************************************************************/
/* This form handles the functions in the main form */

object mainform : XmFormDialog {
    arguments {
        XmNdialogTitle  = main_form_title;   
	XmNnoResize = true;
	XmNdefaultPosition = false;
    };
    controls {
	XmForm maindiabox;
    };
    callbacks {
    };
};


object maindiabox : XmForm {
    arguments {
        XmNdefaultButton = XmPushButton mainform_dobutton;
    };
    controls {
	XmLabel		mainform_groupname;
	XmLabel		mainform_descriptionlabel;
	XmLabel		mainform_description;
	XmLabel 	mainform_xparlabel;
	XmText		mainform_xparentry;
	XmLabel		mainform_xminlabel;
	XmText		mainform_xminentry;
	XmLabel		mainform_xmaxlabel;
	XmText		mainform_xmaxentry;
	XmLabel		mainform_xsteplabel;
	XmText		mainform_xstepentry;
	XmRadioBox	mainform_xtype;

	XmLabel 	mainform_yparlabel;
	XmText		mainform_yparentry;
	XmRadioBox	mainform_ytype;
	XmLabel		mainform_ysourcelabel;
	XmText		mainform_ysourceentry;
	XmLabel		mainform_yoffsetlabel;
	XmText		mainform_yoffsetentry; 
	XmOptionMenu 	mainform_yaxis;
	XmOptionMenu 	mainform_yline;
	XmOptionMenu 	mainform_ycolour;
	XmToggleButton	mainform_ydraw;
	XmScrolledList	mainform_yparameterselection;
	XmPushButton	mainform_ypardefinebutton;
	XmLabel		mainform_ysourceslabel;
	XmScrolledList	mainform_ysourcesselection;

	XmLabel		mainform_axisselectionlabel;
	XmLabel		mainform_axisminlabel;
	XmText		mainform_axisminentry;
	XmLabel		mainform_axismaxlabel;
	XmText		mainform_axismaxentry;
	XmLabel		mainform_axissteplabel;
	XmText		mainform_axisstepentry;
	XmOptionMenu	mainform_axisprec;
	XmScrolledList	mainform_axisselection;
	XmPushButton	mainform_axisdefinebutton;
	XmLabel		mainform_axisunitlabel;
	XmText		mainform_axisunitentry;

	XmLabel		mainform_plottypelabel;
	XmLabel		mainform_timebaselabel;
	XmRadioBox	mainform_timebases;
	XmRadioBox	mainform_plottype;

	XmPushButton	mainform_dobutton;
	XmPushButton	mainform_searchbutton;
	XmPushButton	mainform_savebutton;
	XmPushButton	mainform_saveasbutton;
	XmPushButton	mainform_loadbutton;
	XmPushButton	mainform_printbutton;
	XmPushButton	mainform_cancelbutton;

	XmLabel		mainform_colorlabel;
	XmPushButton	mainform_textcolbutton;
	XmPushButton	mainform_backcolbutton;

	XmSeparator	mainform_buttonseparator;
	XmSeparator	mainform_xseparator;
	XmSeparator	mainform_yseparator;
	XmSeparator	mainform_axisseparator;
    };
    callbacks {
	XmNhelpCallback = procedure HelpCallBack(help_on_main_form_topic);
    };
};
                                   
/**************************************************************************/
/* This describes the objects in the main definition dialogbox in the 
   draw application */


/* This button handles the OK function 
   in the main form*/

object mainform_dobutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = ok_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure DoDefinition(DrawView);   
    };
};

/* This button handles the search clause function 
   in the main form*/

object mainform_searchbutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = search_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton mainform_dobutton;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure ShowSearchForm(DrawView);   
    };
};

/* This button handles the save function 
   in the main form*/

object mainform_savebutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = save_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton mainform_searchbutton;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure ApplySave(DrawView);   
    };
};

/* This button handles the save as function 
   in the main form*/

object mainform_saveasbutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = saveas_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton mainform_savebutton;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure ShowSaveAsForm(DrawView);   
    };
};

/* This button handles the load function 
   in the main form */

object mainform_loadbutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = load_apply_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton mainform_saveasbutton;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure ShowLoadForm(DrawView);   
    };
};

/* This button handles print in the
   in the main form */

object mainform_printbutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = print_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton mainform_loadbutton;
        XmNtopOffset = 2;
    };
    callbacks
    {
        XmNactivateCallback = procedure ShowPrintForm(DrawView);   
	MrmNcreateCallback  = procedure	CreateMainFormPrintButtonW(DrawView);
    };
};

/* This button handles XmNcancelCallback in the
   in the main form */

object mainform_cancelbutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = cancel_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton mainform_printbutton;
        XmNtopOffset = 2;
    };
    callbacks
    {
        XmNactivateCallback = procedure CancelDefinition(DrawView);   
    };
};


object mainform_groupname : XmLabel {
    arguments {
        XmNlabelString  = '...';   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 5;
    };
    callbacks {
        MrmNcreateCallback = procedure CreateMainFormGroupNameW(DrawView);
    };
};

/* This XmLabel text handles the curvegroup description 
   in the main form dialog */

object mainform_descriptionlabel : XmLabel {
    arguments {
        XmNlabelString  = curve_group_descr_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmLabel mainform_groupname;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 5;
    };
    callbacks {
    };
};

object mainform_description : XmLabel {
    arguments {
        XmNlabelString  = '-';   
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmLabel mainform_descriptionlabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 5;
    };
    callbacks {
        MrmNcreateCallback = procedure CreateMainFormDescrTextW(DrawView);
    };
};

/* This XmLabel text handles the x parameter input 
   in the main form dialog */

object mainform_xparlabel : XmLabel {
    arguments {
        XmNlabelString  = x_parameter_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_descriptionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};


object mainform_xparentry : XmText {
    arguments  {
        XmNcolumns = 13;
        XmNmaxLength = 40;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_xparlabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_descriptionlabel;
        XmNtopOffset = 10;
     };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormXParEntryW(DrawView);
    };
};

/* This XmLabel text handles the x input for min value
   in the main form */

object mainform_xminlabel : XmLabel {
    arguments {
        XmNlabelString  = min_value_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
    };
};

object mainform_xminentry : XmText {
    arguments  {
        XmNcolumns = 16;
        XmNmaxLength = 16;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_xminlabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormXMinEntryW(DrawView);
    };
};

/* This XmLabel text handles the x input for max value
   in the main form */

object mainform_xmaxlabel : XmLabel {
    arguments {
        XmNlabelString  = max_value_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_xminentry;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
    };
};

object mainform_xmaxentry : XmText {
    arguments  {
        XmNcolumns = 16;
        XmNmaxLength = 16;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_xmaxlabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormXMaxEntryW(DrawView);
    };
};

/* This XmLabel text handles the x input for step value
   in the main form */

object mainform_xsteplabel : XmLabel {
    arguments {
        XmNlabelString  = step_value_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_xmaxentry;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
    };
};

object mainform_xstepentry : XmText {
    arguments  {
        XmNcolumns = 10;
        XmNmaxLength = 16;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_xsteplabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormXStepEntryW(DrawView);
    };
};

/* This label text handles y parameter input 
   in the main form dialog */

object mainform_yparlabel : XmLabel {
    arguments {
        XmNlabelString  = y_parameter_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xminlabel;
        XmNtopOffset = 30;
    };
    callbacks {
    };
};


object mainform_yparentry : XmText {
    arguments  {
        XmNcolumns = 40;
        XmNmaxLength = 132;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_yparlabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xminlabel;
        XmNtopOffset = 30;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormYParEntryW(DrawView);
    };
};

/* This XmLabel text handles the input for source value
   in the main form */

object mainform_ysourcelabel : XmLabel {
    arguments {
        XmNlabelString  = source_name_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_yparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
    };
};

object mainform_ysourceentry : XmText {
    arguments  {
        XmNcolumns = 20;
        XmNmaxLength = 40;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_ysourcelabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_yparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormYSourceEntryW(DrawView);
    };
};

/* This label text handles the y input for offset value
   in the main form */

object mainform_yoffsetlabel : XmLabel {
    arguments {
        XmNlabelString  = offset_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_ysourceentry;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_yparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
    };
};

object mainform_yoffsetentry : XmText {
    arguments  {
        XmNcolumns = 11;
        XmNmaxLength = 16;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_yoffsetlabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_yparlabel;
        XmNtopOffset = 15;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormYOffsetEntryW(DrawView);
    };
};


/* This radiobuttonpanel handles the choice of timebase 
   in the main form */

object mainform_timebaselabel : XmLabel {
    arguments {
        XmNlabelString  = timebase_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmScrolledList mainform_axisselection;
        XmNtopOffset = 35;
    };
    callbacks {
    };
};

object mainform_timebases : XmRadioBox {
    arguments {
/*        XmNorientation  = XmVERTICAL; */
        XmNorientation  = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmLabel mainform_timebaselabel;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmScrolledList mainform_axisselection;
        XmNtopOffset = 30;
    };
    controls {
        XmToggleButton radio_timebase1;
        XmToggleButton radio_timebase2;
        XmToggleButton radio_timebase3;
        XmToggleButton radio_timebase4;
        XmToggleButton radio_timebase5;
    };
};

object radio_timebase1 : XmToggleButton {
    arguments {
        XmNlabelString  = timebase_1_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure MainChooseTimebase1(DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormRadioTB1W(DrawView);
    };
};

object radio_timebase2 : XmToggleButton {
    arguments {
        XmNlabelString  = timebase_2_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure MainChooseTimebase2(DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormRadioTB2W(DrawView);
    };
};

object radio_timebase3 : XmToggleButton {
    arguments {
        XmNlabelString  = timebase_3_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure MainChooseTimebase3(DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormRadioTB3W(DrawView);
    };
};

object radio_timebase4 : XmToggleButton {
    arguments {
        XmNlabelString  = timebase_4_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure MainChooseTimebase4(DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormRadioTB4W(DrawView);
    };
};

object radio_timebase5 : XmToggleButton {
    arguments {
        XmNlabelString  = timebase_5_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure MainChooseTimebase5(DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormRadioTB5W(DrawView);
    };
};

/* This radiobuttonpanel handles the plot type choice 
   in the main form */

object mainform_plottypelabel : XmLabel {
    arguments {
        XmNlabelString  = plot_type_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmRadioBox mainform_timebases;
        XmNtopOffset = 15;
    };
    callbacks {
    };
};

object mainform_plottype : XmRadioBox {
    arguments {
/*        XmNorientation  = XmVERTICAL; */
        XmNorientation  = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmLabel mainform_timebaselabel;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmRadioBox mainform_timebases;
        XmNtopOffset = 10;
    };
    controls {
        XmToggleButton radio_realtime;
        XmToggleButton radio_history;
    };
};

object radio_realtime : XmToggleButton {
    arguments {
        XmNlabelString  = plot_type_real_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure MainChoosePlotTypeReal(DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormPlotTypeRealW(DrawView);
    };
};

object radio_history : XmToggleButton {
    arguments {
        XmNlabelString  = plot_type_hist_label;   
    };
    callbacks {
        XmNarmCallback     = procedure MainChoosePlotTypeHist(DrawView);
        MrmNcreateCallback  = procedure CreateMainFormPlotTypeHistW(DrawView);
    };
};
   

/* This radiobuttonpanel handles the x-parameter type choice 
   in the main form */

object mainform_xtype : XmRadioBox {
    arguments {
        XmNorientation  = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_xparentry;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_descriptionlabel;
        XmNtopOffset = 10;
    };
    controls {
        XmToggleButton radio_time;
        XmToggleButton radio_numeric;
    };
};

object radio_time : XmToggleButton {
    arguments {
        XmNlabelString  = x_type_time_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure MainChooseXTypeTime(DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormXTypeTimeW(DrawView);
    };
};

object radio_numeric : XmToggleButton {
    arguments {
        XmNlabelString  = x_type_num_label;   
    };
    callbacks {
        XmNarmCallback     = procedure MainChooseXTypeNum(DrawView);
        MrmNcreateCallback  = procedure CreateMainFormXTypeNumW(DrawView);
    };
};

/* This radiobuttonpanel handles the y-parameter sourcetype choice 
   in the main form */

object mainform_ytype : XmRadioBox {
    arguments {
        XmNorientation  = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_yparentry;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_xminlabel;
        XmNtopOffset = 30;
    };
    controls {
        XmToggleButton radio_point;
        XmToggleButton radio_column;
    };
};

object radio_point : XmToggleButton {
    arguments {
        XmNlabelString  = y_type_point_label;   
    };
    callbacks {
        XmNarmCallback  	= procedure MainChooseYTypePoint(DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormYTypePointW(DrawView);
    };
};

object radio_column : XmToggleButton {
    arguments {
        XmNlabelString  = y_type_column_label;   
    };
    callbacks {
        XmNarmCallback     = procedure MainChooseYTypeColumn(DrawView);
        MrmNcreateCallback  = procedure CreateMainFormYTypeColumnW(DrawView);
    };
};

/* This button sets drawing on or off */

object mainform_ydraw : XmToggleButton {
    arguments {
        XmNlabelString  = y_draw_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmOptionMenu mainform_ycolour;
        XmNleftOffset = 30;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_ysourcelabel;
        XmNtopOffset = 17;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        XmNarmCallback  	= procedure MainChooseYDraw (DrawView);
        MrmNcreateCallback 	= procedure CreateMainFormYDrawW(DrawView);
    };
};
   
/* This button handles the y-parameter define function 
   in the main form */

object mainform_ypardefinebutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = define_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget =  XmScrolledList mainform_yparameterselection;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_yparlabel;
        XmNtopOffset = 15;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        XmNactivateCallback = procedure ApplyDefineYPar(DrawView);   
    };
};

/* This listbox handles the list of y-parameters
   in the main form */

object mainform_yparameterselection : XmScrolledList {
    arguments {
        XmNvisibleItemCount  = 4;   
        XmNwidth = 600;
	XmNlistSizePolicy = XmCONSTANT;
        XmNselectionPolicy  = XmSINGLE_SELECT;   
        XmNfontList = normal_font;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmOptionMenu mainform_yaxis;
        XmNtopOffset = 10;
    };
    callbacks {
        XmNsingleSelectionCallback = procedure MainChooseYParameter(DrawView);
        MrmNcreateCallback = procedure CreateMainFormYParSelectW(DrawView);
    };
};


object mainform_ysourceslabel : XmLabel {
    arguments {
        XmNlabelString  = sources_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget =  XmScrolledList mainform_yparameterselection;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_ysourcelabel;
        XmNtopOffset = 20;
    };
    callbacks {
    };
};


/* This listbox handles the list of y-sources
   in the main form */

object mainform_ysourcesselection : XmScrolledList {
    arguments {
        XmNvisibleItemCount  = 4;
        XmNwidth = 160;
        XmNlistSizePolicy = XmCONSTANT;
        XmNselectionPolicy  = XmSINGLE_SELECT;
        XmNfontList = normal_font;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
	XmNleftWidget = XmLabel mainform_ysourceslabel;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmOptionMenu mainform_yaxis;
        XmNtopOffset = 10;
    };
    callbacks {
        XmNsingleSelectionCallback = procedure MainChooseYSource(DrawView);
        MrmNcreateCallback = procedure CreateMainFormYSouSelectW(DrawView);
    };
};


/* This listbox handles the XmSelectionDialog of axises
   in the main form */

object mainform_axisselection : XmScrolledList {
    arguments {
        XmNwidth = 600;
	XmNlistSizePolicy = XmCONSTANT;
        XmNvisibleItemCount  = 4;   
        XmNselectionPolicy  = XmSINGLE_SELECT;   
        XmNfontList = normal_font;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisminlabel;
        XmNtopOffset = 20;
    };
    callbacks {
        XmNsingleSelectionCallback = procedure MainChooseAxis(DrawView);
        MrmNcreateCallback = procedure CreateMainFormAxisSelectW(DrawView);
    };
};

object mainform_axisselectionlabel : XmLabel {
    arguments {
        XmNlabelString  = axises_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmScrolledList mainform_yparameterselection;
        XmNtopOffset = 30;
    };
    callbacks {
    };
};

/* This XmLabel text handles the axis input for min value
   in the main form */

object mainform_axisminlabel : XmLabel {
    arguments {
        XmNlabelString  = min_value_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

object mainform_axisminentry : XmText {
    arguments  {
        XmNcolumns = 7;
        XmNmaxLength = 20;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_axisminlabel;
        XmNleftOffset = 7;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormAxisMinEntryW(DrawView);
    };
};

/* This XmLabel text handles the axis input for max value
   in the main form */

object mainform_axismaxlabel : XmLabel {
    arguments {
        XmNlabelString  = max_value_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_axisminentry;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

object mainform_axismaxentry : XmText {
    arguments  {
        XmNcolumns = 7;
        XmNmaxLength = 20;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_axismaxlabel;
        XmNleftOffset = 7;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormAxisMaxEntryW(DrawView);
    };
};

/* This XmLabel text handles the axis input for step value
   in the main form */

object mainform_axissteplabel : XmLabel {
    arguments {
        XmNlabelString  = step_value_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_axismaxentry;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

object mainform_axisstepentry : XmText {
    arguments  {
        XmNcolumns = 7;
        XmNmaxLength = 20;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_axissteplabel;
        XmNleftOffset = 7;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormAxisStepEntryW(DrawView);
    };
};

/* This XmLabel text handles the axis input for unit value
   in the main form */

object mainform_axisunitlabel : XmLabel {
    arguments {
        XmNlabelString  = unit_value_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_axisstepentry;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
    };
};

object mainform_axisunitentry : XmText {
    arguments  {
        XmNcolumns = 8;
        XmNmaxLength = 8;
        XmNresizeHeight = false;
        XmNresizeWidth = false;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmLabel mainform_axisunitlabel;
        XmNleftOffset = 7;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
    };
    callbacks {
        MrmNcreateCallback  = procedure CreateMainFormAxisUnitEntryW(DrawView);
    };
};


/* This optionmenu handles the axislabel precision option menu 
   in the main form */

object mainform_axisprec : XmOptionMenu {
    arguments {
        XmNlabelString  = axis_prec_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmText mainform_axisunitentry;
        XmNleftOffset = 7;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_axisselectionlabel;
        XmNtopOffset = 10;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        MrmNcreateCallback = procedure CreateMainFormAxisPrecOptW(DrawView);
    };
    controls {
        XmPulldownMenu mainform_axisprecmenu;
    };
};

object mainform_axisprecmenu : XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_p0_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChoosePrec0(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormPrec0OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_p1_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChoosePrec1(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormPrec1OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_p2_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChoosePrec2(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormPrec2OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_p3_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChoosePrec3(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormPrec3OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_p4_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChoosePrec4(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormPrec4OptW(DrawView);
	    };
	};
    };
};


/* This button handles the axis define function 
   in the main form */

object mainform_axisdefinebutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = define_button_label;   
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftWidget = XmPushButton mainform_ypardefinebutton;
        XmNleftOffset = 0;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmOptionMenu mainform_axisprec;
        XmNtopOffset = 20;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        XmNactivateCallback = procedure ApplyDefineAxis(DrawView);   
    };
};

/* This optionmenu handles the y-axis 
   in the main form */

object mainform_yaxis : XmOptionMenu {
    arguments {
        XmNlabelString  = axis_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_ysourcelabel;
        XmNtopOffset = 15;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        MrmNcreateCallback = procedure CreateMainFormYAxisOptW(DrawView);
    };
    controls {
        XmPulldownMenu mainform_yaxismenu;
    };
};

object mainform_yaxismenu : XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_1_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYAxis1(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYAxis1OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_2_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYAxis2(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYAxis2OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_3_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYAxis3(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYAxis3OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_4_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYAxis4(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYAxis4OptW(DrawView);
	    };
	};
    };
};

/* This optionmenu handles the y line type 
   in the main form */

object mainform_yline : XmOptionMenu {
    arguments {
        XmNlabelString  = line_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmOptionMenu mainform_yaxis;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_ysourcelabel;
        XmNtopOffset = 15;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        MrmNcreateCallback = procedure CreateMainFormYLineOptW(DrawView);
    };
    controls {
        XmPulldownMenu mainform_ylinemenu;
    };
};

object mainform_ylinemenu : XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments {
        XmNlabelString  = line_solid_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYLineSolid(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYLineSolOptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = line_dotted_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYLineDotted(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYLineDotOptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = line_discrete_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYLineDiscrete(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYLineDisOptW(DrawView);
	    };
	};
    };
};

/* This optionmenu handles the y colour 
   in the main form */

object mainform_ycolour : XmOptionMenu {
    arguments {
        XmNlabelString  = colour_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmOptionMenu mainform_yline;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel mainform_ysourcelabel;
        XmNtopOffset = 15;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        MrmNcreateCallback = procedure CreateMainFormYColOptW(DrawView);
    };
    controls {
        XmPulldownMenu mainform_ycolourmenu;
    };
};

object mainform_ycolourmenu : XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments {
        XmNlabelString  = colour1_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYColour1(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYCol1OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = colour2_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYColour2(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYCol2OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = colour3_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYColour3(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYCol3OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = colour4_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure MainChooseYColour4(DrawView);   
	        MrmNcreateCallback   = procedure CreateMainFormYCol4OptW(DrawView);
	    };
	};
    };
};


/* These are separators to divide the parts in the form */

object mainform_xseparator: XmSeparator {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNrightWidget = XmPushButton mainform_dobutton;
        XmNrightOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = 	XmLabel	mainform_xminlabel;
        XmNtopOffset = 20;
    };
    callbacks
    {
    };
};


object mainform_yseparator: XmSeparator {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightAttachment = XmATTACH_WIDGET;
	XmNrightWidget = XmSeparator mainform_buttonseparator;
        XmNrightOffset = 0;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = 	XmScrolledList mainform_yparameterselection;
        XmNtopOffset = 20;
    };
    callbacks
    {
    };
};

object mainform_axisseparator: XmSeparator {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightAttachment = XmATTACH_WIDGET;
	XmNrightWidget = XmSeparator mainform_buttonseparator;
        XmNrightOffset = 0;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = 	XmScrolledList mainform_axisselection;
        XmNtopOffset = 20;
    };
    callbacks
    {
    };
};


object mainform_buttonseparator: XmSeparator {
    arguments {
        XmNorientation = XmVERTICAL;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNrightWidget = XmPushButton mainform_dobutton;
        XmNrightOffset = 7;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
    };
    callbacks
    {
    };
};

object mainform_colorlabel : XmLabel {
    arguments {
        XmNlabelString  = color_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmPushButton mainform_axisdefinebutton;
        XmNtopOffset = 30;
    };
    callbacks {
    };
};


object mainform_textcolbutton : XmPushButton {
    arguments {
        XmNwidth = 125;
        XmNheight = 30;
        XmNlabelString = textcol_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmLabel mainform_colorlabel;
        XmNtopOffset = 5;
    };
    callbacks {
        XmNactivateCallback = procedure MainChooseTextColor(DrawView);   
    };
};

object mainform_backcolbutton : XmPushButton {
    arguments {
        XmNwidth = 125;
        XmNheight = 30;
        XmNlabelString = backcol_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmScrolledList  mainform_ysourcesselection;
        XmNleftOffset = 15;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmPushButton mainform_textcolbutton;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure MainChooseBackColor(DrawView);   
    };
};


/**************************************************************************/
/**************************************************************************/
/* This form handles the functions in the grid form */

object gridform : XmFormDialog {
    arguments {
        XmNdialogTitle  = grid_form_title;   
	XmNnoResize = true;
	XmNdefaultPosition = false;
    };
    controls {
	XmForm griddiabox;
    };
    callbacks {
    };
};


object griddiabox : XmForm {
    arguments {
        XmNdefaultButton = XmPushButton gridform_okbutton;
    };
    controls {
	XmPushButton	gridform_colorbutton;
	XmOptionMenu 	gridform_rasteraxis;
	XmOptionMenu 	gridform_rasterline;

	XmPushButton	gridform_okbutton;
	XmPushButton	gridform_cancelbutton;
    };
    callbacks {
	XmNhelpCallback = procedure HelpCallBack(help_on_grid_form_topic);
    };
};
                                   
/**************************************************************************/
/* This describes the objects in the grid definition dialogbox in the 
   draw application */


object gridform_colorbutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = color_button_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure GridChooseColor(DrawView);   
    };
};

/* This button handles the OK function 
   in the grid form*/

object gridform_okbutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = ok_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmOptionMenu gridform_rasterline;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_FORM;
        XmNtopOffset = 2;
    };
    callbacks {
        XmNactivateCallback = procedure DoGrid(DrawView);   
    };
};


/* This button handles XmNcancelCallback in the
   in the grid form */

object gridform_cancelbutton : XmPushButton {
    arguments {
        XmNwidth = 105;
        XmNheight = 30;
        XmNlabelString = cancel_button_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmOptionMenu gridform_rasterline;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton gridform_okbutton;
        XmNtopOffset = 2;
    };
    callbacks
    {
        XmNactivateCallback = procedure CancelGrid(DrawView);   
    };
};


/* This optionmenu handles the raster axis 
   in the grid form */

object gridform_rasteraxis : XmOptionMenu {
    arguments {
        XmNlabelString  = axis_label;   
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton gridform_colorbutton;
        XmNtopOffset = 15;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        MrmNcreateCallback = procedure CreateGridFormGrAxisOptW(DrawView);
    };
    controls {
        XmPulldownMenu gridform_rasteraxismenu;
    };
};

object gridform_rasteraxismenu : XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments { 
               XmNlabelString  = axis_1_label;     
            };
	    callbacks {  
               XmNactivateCallback  = procedure GridChooseGridAxis1(DrawView);
  	       MrmNcreateCallback   = procedure CreateGridFormGrAxis1OptW(DrawView);   
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_2_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure GridChooseGridAxis2(DrawView);   
	        MrmNcreateCallback   = procedure CreateGridFormGrAxis2OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_3_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure GridChooseGridAxis3(DrawView);   
	        MrmNcreateCallback   = procedure CreateGridFormGrAxis3OptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = axis_4_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure GridChooseGridAxis4(DrawView);   
	MrmNcreateCallback   = procedure CreateGridFormGrAxis4OptW(DrawView);
	    };
	};
    };
};

/* This optionmenu handles the raster line type
   in the grid form */

object gridform_rasterline : XmOptionMenu {
    arguments {
        XmNlabelString  = line_label;   
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftWidget = XmOptionMenu gridform_rasteraxis;
        XmNleftOffset = 20;
        XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmPushButton gridform_colorbutton;
        XmNtopOffset = 15;
	XmNnavigationType = XmTAB_GROUP;
    };
    callbacks {
        MrmNcreateCallback = procedure CreateGridFormGrLineOptW(DrawView);
    };
    controls {
        XmPulldownMenu gridform_rasterlinemenu;
    };
};

object gridform_rasterlinemenu : XmPulldownMenu {
    controls {
	XmPushButton {
	    arguments {
        XmNlabelString  = line_solid_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure GridChooseGridLineSolid(DrawView);   
	        MrmNcreateCallback   = procedure CreateGridFormGrLineSolOptW(DrawView);
	    };
	};
	XmPushButton {
	    arguments {
        XmNlabelString  = line_dotted_label;   
	    };
	    callbacks {
        XmNactivateCallback  = procedure GridChooseGridLineDotted(DrawView);   
	        MrmNcreateCallback   = procedure CreateGridFormGrLineDotOptW(DrawView);
	    };
	};
    };
};



/**************************************************************************/
/**************************************************************************/
/* This form handles the functions in the color options form */

object textcolorform : DXmColorMixDialog {
    arguments {
	XmNdefaultPosition = false;
        XmNdialogTitle  = text_color_title;   
    };
    callbacks {
        XmNcancelCallback   = procedure TextColorCancel (DrawView);
        XmNokCallback       = procedure TextColorOK(DrawView);
        XmNapplyCallback    = procedure TextColorApply (DrawView);
    };
};


/**************************************************************************/
/**************************************************************************/
/* This form handles the functions in the color options form */

object backcolorform : DXmColorMixDialog {
    arguments {
	XmNdefaultPosition = false;
        XmNdialogTitle  = back_color_title;   
    };
    callbacks {
        XmNcancelCallback   = procedure BackColorCancel (DrawView);
        XmNokCallback       = procedure BackColorOK(DrawView);
        XmNapplyCallback    = procedure BackColorApply (DrawView);
    };
};


/**************************************************************************/
/**************************************************************************/
/* This form handles the functions in the color options form */

object gridcolorform : DXmColorMixDialog {
    arguments {
	XmNdefaultPosition = false;
        XmNdialogTitle  = grid_color_title;   
    };
    callbacks {
        XmNcancelCallback   = procedure GridColorCancel (DrawView);
        XmNokCallback       = procedure GridColorOK(DrawView);
        XmNapplyCallback    = procedure GridColorApply (DrawView);
    };
};


end module;

/**************************************************************************/
/**************************************************************************/
