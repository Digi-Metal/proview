! 
!  Proview   $Id: op_rate.uil,v 1.2 2005-09-06 10:39:34 claes Exp $
!  Copyright (C) 2005 SSAB Oxelösund AB.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with the program, if not, write to the Free Software 
!  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!
!  A uil file describing the user interface for the runtime
!  attribute editor
!
module op_rate
		version = 'v1.0'
		names = case_sensitive
			   
!***********************  I N C L U D E  F I L E S  **********************/

include file 'pwr_lang:inc_standard_txt.uil';
include file 'pwr_lang:inc_rate_txt.uil';


identifier
	rate_ctx;

procedure
	 rate_CmdTextCr(any);
	 rate_CmdLabelCr(any);
	 rate_SvnFormCr(any);

	 rate_CmdTextCb(any);
	 rate_ExitCb(any);

!***********************  C O N S T A N T S ******************************

value
    ateDBWidth	: 550;
    ateDBHeight	: 400;

 
    ateButtonWidth	: 65;    
    ateButtonHeight	: 30;

object attributeEditor : XmFormDialog
{                                                 
    arguments {
	XmNnoResize = false;
	XmNresizePolicy = XmRESIZE_NONE;
	XmNautoUnmanage     = false;
        XmNcancelButton    = XmPushButton okButton;
	};

   callbacks {
	};

   controls {
	XmForm			svnForm;
	XmSeparatorGadget	separator1;
	XmLabel			commandLabel;
	XmTextField		commandText;
	XmSeparatorGadget	separator2;
	XmPushButton		okButton;
	XmPushButton		helpButton;
	};

};

object	okButton : XmPushButton
{
    arguments { 
	XmNlabelString = compound_string($ok); 
	XmNwidth = ateButtonWidth;
	XmNleftAttachment = XmATTACH_FORM;
	XmNleftOffset = 20;
	XmNbottomAttachment = XmATTACH_FORM;
	XmNbottomOffset = 5;
    };
    callbacks { 
	XmNactivateCallback = procedure rate_ExitCb(rate_ctx); 
    };
};

object	helpButton : XmPushButton
{
    arguments { 
	XmNlabelString = compound_string($help); 
	XmNwidth = ateButtonWidth;
	XmNsensitive = false;
	XmNrightAttachment = XmATTACH_FORM;
	XmNrightOffset = 20;
	XmNbottomAttachment = XmATTACH_FORM;
	XmNbottomOffset = 5;
    };
    callbacks { 
	XmNactivateCallback = procedure rate_ExitCb(rate_ctx); 
    };
};

object	separator2   : XmSeparatorGadget {
    arguments {
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget = XmPushButton okButton;
	XmNbottomOffset = 4;
	};
   controls {
	};
   callbacks {
	};
};


object	commandLabel   : XmLabel {
	
    arguments {	
	XmNleftAttachment = XmATTACH_FORM;
	XmNleftOffset = 2; 
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget = XmSeparatorGadget separator2;
	XmNbottomOffset = 10;
	XmNlabelString = compound_string(set);
	};
    callbacks {
	MrmNcreateCallback = procedure rate_CmdLabelCr(rate_ctx);
	};
};

object	commandText   : XmTextField {
	
    arguments {	
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmLabel commandLabel; 
	XmNleftOffset = 1; 
	XmNrightAttachment = XmATTACH_FORM;
	XmNrightOffset = 1; 
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget = XmSeparatorGadget separator2;
	XmNbottomOffset = 3;
	XmNmaxLength = 150;
	};
    callbacks {
	XmNactivateCallback = procedure rate_CmdTextCb(rate_ctx);
	MrmNcreateCallback = procedure rate_CmdTextCr(rate_ctx);
	};
};

object	separator1   : XmSeparatorGadget {
    arguments {
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomOffset = 4;
	XmNbottomWidget = XmTextField commandText;
	};
   controls {
	};
   callbacks {
	};
};

object svnForm : XmForm
{
    arguments {
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNtopAttachment = XmATTACH_FORM;
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget = XmSeparatorGadget separator1;
	XmNbottomOffset = 3;
	};
   controls
	{
	};

    callbacks {
	MrmNcreateCallback = procedure rate_SvnFormCr(rate_ctx);
	};
};


end module;
