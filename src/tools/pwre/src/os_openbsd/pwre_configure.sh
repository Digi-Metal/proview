#!/bin/bash

pwre_help()
{
  cat <<EOF
pwre_configure.h

Arguments

--help           Display help.

--version        State fix version of loadfiles, eg

                 > pwre configure --version "29-MAY-2011 16:00:00"

--reset-version  Reset previous version

EOF
}

pwre_config_init()
{
    d=`eval date +\"%F %X\"`
    cat > $cfile <<EOF
#!/bin/bash
#
# pwre configuration file
#
# Generated by pwre_configure $d
# Do not edit this file
#
EOF
}

pwre_config_check_include()
{
    let i=0
    let found=0
    let incfound=0
    IFS=:
    for file in $4
    do
      if test -e $file; then
	echo "...Checking   Yes   $1"
	echo "export PWRE_CONF_$2=1" >> $cfile

	if test $3 == "1"; then
	  conf_cc_define=$conf_cc_define" -DPWRE_CONF_$2=1"
	fi

 	incdir=${file%/*}
	if test $incdir == "/usr/include"; then
          incfound=1
        else
	  while [ $i -lt $inc_cnt ]; do
            if test ${inc_array[$i]} == $incdir; then
              incfound=1
            fi
	    i=$((i+1))
          done
	fi

	if test $incfound -eq 0; then
	  inc_array[$inc_cnt]=$incdir
          inc_cnt=$((inc_cnt+1))
        fi

        found=1
        break
      fi
    done

    if test $found -eq 0; then
	echo "...Checking   No    $1"
    fi
}

pwre_config_check_lib()
{
    let i=0
    let found=0
    let libfound=0
    IFS=:
    for file in $6
    do
      if test -e $file; then
	echo "...Checking   Yes   $1"
	echo "export PWRE_CONF_$2=1" >> $cfile

	if test $5 == "1"; then
	  conf_cc_define=$conf_cc_define" -DPWRE_CONF_$2=1"
	fi

	if test $3 == "lib"; then
	  libdir=${file%/*}
	  if test $libdir == "/usr/lib"; then
            libfound=1
          else
	    while [ $i -lt $lib_cnt ]; do
	      if test ${lib_array[$i]} == $libdir; then
                libfound=1
	      fi
	      i=$((i+1))
            done
	  fi

	  if test $libfound -eq 0; then
	    lib_array[$lib_cnt]=$libdir
            lib_cnt=$((lib_cnt+1))
          fi

	  lib=${file##/*/lib}
          if test $4 == "gtk"; then
	    conf_libgtk=$conf_libgtk" -l${lib%.*}"
          elif test $4 == "motif"; then
	    conf_libmotif=$conf_libmotif" -l${lib%.*}"
          else
	    conf_lib=$conf_lib" -l${lib%%.*}"
          fi
	elif test $3 == "gtk"; then
	  conf_libgtk=$conf_libgtk" \\\`pkg-config --libs gtk+-2.0\\\`"
	  conf_incdirgtk=$conf_incdirgtk" \\\`pkg-config --cflags gtk+-2.0\\\`"
	elif test $3 == "motif"; then
	  conf_libmotif=$conf_libmotif" -lImlib -lMrm -lXm -lXpm -lXt -lX11 -lXext -lXp -lSM -lICE"
	else
           echo "Unknown type"
	fi
	
        found=1
        break
      fi
    done

    if test $found -eq 0; then
	echo "...Checking   No    $1"
	echo "export PWRE_CONF_$2=0" >> $cfile
    fi
}

pwre_create_blddir()
{
  if test ! -e $pwre_croot/src/tools/bld/src/$pwre_os; then
    cp -r $pwre_croot/src/tools/bld/src/os_templ $pwre_croot/src/tools/bld/src/$pwre_os
    mv $pwre_croot/src/tools/bld/src/$pwre_os/hw_templ $pwre_croot/src/tools/bld/src/$pwre_os/$pwre_hw
  elif test ! -e $pwre_croot/src/tools/bld/src/$pwre_os/$pwre_hw; then
    cp -r $pwre_croot/src/tools/bld/src/os_templ/hw_templ $pwre_croot/src/tools/bld/src/$pwre_os/$pwre_hw
  fi
}

pwre_create_makedir()
{
  dirlist=`eval find $pwre_croot -name "os_templ"`
  for dir in $dirlist; do
    newdir=${dir%/*}/$pwre_os
    if test ! -e $newdir; then 
      newdir=${dir%/*}/.$pwre_os
      if test ! -e $newdir; then 
        echo "Creating $newdir"
        cp -pr $dir $newdir
        if test -e $newdir/hw_templ; then
          mv $newdir/hw_templ $newdir/.$pwre_hw
        fi
    
      else
        # os directory .os_ already exist
        # Copy new and modified files
        filelist=`eval ls $dir/`
        for file in $filelist; do
          if test ! -d $dir/$file; then 
            cp -p $dir/$file $newdir/
          fi
        done
        if test -e $newdir/.$pwre_hw; then
          cp -p $dir/hw_templ/* $newdir/.$pwre_hw/
        elif test -e $dir/hw_templ; then
          # Create hw dir
          echo "Creating $newdir/$pwre_hw"
          cp -pr $dir/hw_templ $newdir/.$pwre_hw
        fi
      fi
    else
      ## os director os_ exist
      if test ! -e $newdir/$pwre_hw; then
        if test -e $newdir/.$pwre_hw; then
          cp -p $dir/hw_templ/* $newdir/.$pwre_hw/
        elif test -e $dir/hw_templ; then
          # Create hw dir
          echo "Creating $newdir/.$pwre_hw"
          cp -pr $dir/hw_templ $newdir/.$pwre_hw
        fi
      fi
    fi
  done
}


#pwre_os="os_linux"
#pwre_hw="hw_x86"

cfile="$pwre_broot/pwre_${pwre_hw:3}_${pwre_os:3}.cnf"
dos=`eval echo ${pwre_os} | tr [:lower:] [:upper:]`
dhw=`eval echo ${pwre_hw} | tr [:lower:] [:upper:]`
conf_cc_define="-D$dos=1 -DOS_POSIX -D$dhw=1 -DOS=${pwre_os:3} -DHW=${pwre_hw:3} -D_${dos:3}"
conf_lib=""
conf_libgtk="" 
conf_libmotif="" 
conf_libdir=""
conf_incdirgtk=""
let inc_cnt=0
let lib_cnt=0
let i=0


# Bash
if [ "$SHELL" != "/bin/bash" ] && [ "$SHELL" != "/usr/local/bin/bash" ]; then
    echo "Config error: Default shell has to be bash"
    exit
fi

echo "...Checking         /bin/bash"
if test ! -e /bin/bash; then
  if test -e /usr/local/bin/bash; then
      echo "Config error: /bin/bash not found"
      echo "  Create link /bin/bash to /usr/local/bin/bash (ln -s /usr/local/bin/bash /bin/bash)"
  else
      echo "Config error: /bin/bash not found"
  fi
  exit
fi

if test "$pwre_broot" == ""; then
  echo "Config error: pwre not initialized"
  exit
fi

if test ! -w $pwre_broot; then
  echo "Config error: pwre build root doesn't exist or is not writable"
  exit
fi

if test ! -e $pwre_croot; then
  echo "Config error: pwre source root doesn't exist"
  exit
fi

# Options
if [ "$1" = "--help" ]; then
  pwre_help
  exit
elif [ "$1" = "--version" ] && [ "$2" != "" ] && [ "$3" != "" ]; then
  buildversion=$2" "$3
elif [ "$1" = "--reset-version" ]; then
  buildversion=""
elif [ "$1" != "" ]; then
  echo "Unknown option \"$1\""
  exit
else
  # Catch current version
  if [ -e $cfile ]; then
    ver=`eval cat $cfile | grep "[[:<:]]export PWRE_CONF_BUILDVERSION"`
    ver=${ver#*=\"}
    ver=${ver%\"}
    buildversion=$ver
  fi
fi

pwre_create_blddir
pwre_create_makedir

pwre_config_init

if [ "$buildversion" != "" ]; then
  echo "export PWRE_CONF_BUILDVERSION=\"$buildversion\"" >> $cfile
else
  echo "export PWRE_CONF_BUILDVERSION=\"0\"" >> $cfile
fi
      
#Gtk
  echo ""
  echo "Mandatory :"
pwre_config_check_lib gtk      	GTK      gtk gtk 0 /usr/local/lib/libgtk-x11-2.0.a

pwre_config_check_lib libantlr 	LIBANTLR lib lib 0 /usr/local/lib/libantlr.a
pwre_config_check_lib librpcsvc LIBRPCSVC lib lib 0 /usr/lib/librpcsvc.so:/usr/lib/librpcsvc.a
#pwre_config_check_lib libasound LIBASOUND lib lib 0 /usr/lib/libasound.so:/usr/lib/libasound.a
pwre_config_check_lib libpthread LIBPTHREAD lib lib 0 /usr/lib/libpthread.so:/usr/lib/libpthread.a
pwre_config_check_lib libm     	LIBM     lib lib 0 /usr/lib/libm.so:/usr/lib/libm.a
pwre_config_check_lib libdb_cxx LIBDB_CXX lib lib 0 /usr/local/lib/libdb_cxx.so.6.0
pwre_config_check_lib libz     	LIBZ     lib lib 0 /usr/lib/libz.so:/usr/lib/libz.a
#pwre_config_check_lib libcrypt 	LIBCRYPT lib lib 0 /usr/lib/libcrypt.so:/usr/lib/libcrypt.a
#pwre_config_check_lib librt    LIBRT    lib lib 0 /usr/lib/librt.dylib:/usr/lib/librt.a
pwre_config_check_lib libiconv LIBICONV lib lib 0 /usr/local/lib/libiconv.so:/usr/local/lib/libiconv.a
pwre_config_check_lib libfl    LIBFL    lib lib 0 /usr/lib/libfl.os:/usr/lib/libfl.a

pwre_config_check_include antlr ANTLR 1 /usr/local/include/antlr/CommonAST.hpp
pwre_config_check_include gtk   GTK   1 /usr/local/include/gtk-2.0/gtk/gtk.h
pwre_config_check_include iconv ICONV 1 /usr/local/include/iconv.h
pwre_config_check_include jni   JNI   1 /usr/local/jdk-1.7.0/include/jni.h
pwre_config_check_include jni   JNI   0 /usr/local/jdk-1.7.0/include/openbsd/jni_md.h
pwre_config_check_include libdb_cxx LIBDB_CXX 0 /usr/local/include/db4/db_cxx.h

  echo ""
  echo "Optional :"
pwre_config_check_lib mysql    	MYSQL    lib lib 1 /usr/lib/libmysqlclient.so
pwre_config_check_lib mq       MQ       lib lib 1 /usr/lib/libdmq.so
pwre_config_check_lib libpnioif PNAK    lib lib 1 /usr/lib/libpnioif.so:/usr/local/lib/libpnioif.a
pwre_config_check_lib libusb   LIBUSB   lib lib 1 /usr/lib/libusb-1.0.so


export pwre_conf_alsa=1


let i=0
while [ $i -lt $inc_cnt ]; do
    conf_incdir=$conf_incdir" -I${inc_array[$i]}"
    i=$((i+1))
done

let i=0
while [ $i -lt $lib_cnt ]; do
    conf_libdir=$conf_libdir" -L${lib_array[$i]}"
    i=$((i+1))
done

rm $pwre_croot/src/exe/rt_prio/src/.${pwre_os}/.${pwre_hw}/makefile
#rm $pwre_croot/otherio/exp/rt/src/.${pwre_os}/.${pwre_hw}/makefile
rm $pwre_croot/remote/exe/rs_remote_alcm/src/.${pwre_os}/.${pwre_hw}/makefile
#rm $pwre_croot/profibus/lib/rt/src/.${pwre_os}/.${pwre_hw}/makefile

echo "export wb_rtt=\$pwr_exe/wb_rtt" >> $cfile

echo "export pwre_conf_cc_define=\"$conf_cc_define\"" >> $cfile
echo "export pwre_conf_libpwrco=\"-lpwr_co\"" >> $cfile
echo "export pwre_conf_libpwrrt=\"-lpwr_rt -lpwr_statussrv -lpwr_co -lpwr_msg_dummy\"" >> $cfile
echo "export pwre_conf_libpwrdtt=\"-lpwr_dtt\"" >> $cfile
echo "export pwre_conf_libpwrotherio=\"-lpwr_usbio_dummy -lpwr_usb_dummy\"" >> $cfile
echo "export pwre_conf_libpwrxtt=\"-lpwr_xtt -lpwr_ge -lpwr_cow -lpwr_flow -lpwr_glow\"" >> $cfile
echo "export pwre_conf_libpwrxttgtk=\" -lpwr_xtt_gtk -lpwr_ge_gtk -lpwr_cow_gtk -lpwr_flow_gtk -lpwr_glow_gtk\"" >> $cfile
echo "export pwre_conf_libpwrxttmotif=\"-lpwr_ge_motif -lpwr_cow_motif -lpwr_flow_motif -lpwr_glow_motif\"" >> $cfile
echo "export pwre_conf_libpwrwb=\"-lpwr_wb\"" >> $cfile
echo "export pwre_conf_libpwrwbgtk=\"-lpwr_wb_gtk\"" >> $cfile
echo "export pwre_conf_libpwrwbmotif=\"-lpwr_wb_motif\"" >> $cfile
echo "export pwre_conf_libpwropc=\"-lpwr_opc\"" >> $cfile
echo "export pwre_conf_libpwrremote=\"-lpwr_remote\"" >> $cfile
echo "export pwre_conf_libpwrnmps=\"-lpwr_nmps\"" >> $cfile
echo "export pwre_conf_libpwrtlog=\"-lpwr_tlog\"" >> $cfile
echo "export pwre_conf_libpwrsev=\"-lpwr_sev\"" >> $cfile
echo "export pwre_conf_lib=\"$conf_lib\"" >> $cfile
echo "export pwre_conf_libgtk=\"$conf_libgtk\"" >> $cfile
echo "export pwre_conf_libmotif=\"$conf_libmotif\"" >> $cfile
echo "export pwre_conf_libdir=\"$conf_libdir\"" >> $cfile
echo "export pwre_conf_incdir=\"$conf_incdir\"" >> $cfile
echo "export pwre_conf_incdirgtk=\"$conf_incdirgtk\"" >> $cfile


