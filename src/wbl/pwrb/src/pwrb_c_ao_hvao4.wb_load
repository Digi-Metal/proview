!  pwrb_c_ao_hvao4.wb_load -- Defines the class Ao_HVAO4.
!
!  PROVIEW/R
!  Copyright (C) 1996 by Comator Process AB.
!
!  Analog Output card HVAO4.
!
!/**
!  @Version 1.0
!  @Group IO,IO_PSS9000
!  @Summary Configuration of a analog output card AO4D.
!  Configuration of a PSS9000 analog output card AO4D.
!
!  The Ao_HVAO4 object is positioned below a SSAB_Rack object in the node configuration.
!  Each used cannel of the card is configured with a ChanAo object, placed below the
!  Ao_HVAO4 object.
!*/
SObject pwrb:Class
  Object Ao_HVAO4 $ClassDef 13 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_RtAndDevBodies
      Attr Flags |= pwr_mClassDef_IO
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "Ao_HVAO4"
      EndBody
      !/**
      ! Optional description.
      !*/
      Object Description $Attribute 2 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      ! Device name. Used only in VAX_ELN nodes.
      ! The device name is the identification of the device in the ELN ebuild file.
      !*/
      Object DevName $Attribute 3 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      ! Error counter, incremented for every failed write operation of the card.
      ! When the error counter reaches ErrorSoftLimit, a message is sent to the console log.
      ! When it reaches ErrorHardLimit, all IO handling is aborted.
      !*/
      Object ErrorCount $Attribute 5 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      ! Value of the error counter, when a message is sent to the console log.
      !*/
      Object ErrorSoftLimit $Attribute 6 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Value of the error counter, when all IO handling is aborted.
      !*/
      Object ErrorHardLimit $Attribute 7 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Obsolete since V2.7.
      !*/
      Object DevPolyCoef0 $Attribute 9 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      ! Obsolete since V2.7.
      !*/
      Object DevPolyCoef1 $Attribute 10 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      ! Maximum number of channels. Always 4.
      !*/
      Object MaxNoOfChannels $Attribute 11 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
          Attr Flags |= PWR_MASK_CONST
        EndBody
      EndObject
      !/**
      ! @Summary QBUS address of the card.
      ! QBUS address of the card.
      ! The value is set with address switches on the card.
      ! Note! The value in RegAddress is a decimal value
      !
      !	Card number	Octal address
      !	1		176210		4193416
      !	2		176220		4193424
      !	3		176230		4193432
      !	4		176240		4193440
      !	5		176250		4193448
      !	6		176260		4193456
      !
      ! For VAX_ELN RegAddress is used for documentation only, and usually specified as an octal value.
      !*/
      Object RegAddress $Attribute 12 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Vector address. Used on VAX_ELN only, and only for documentation.
      !*/
      Object VectAddress $Attribute 13 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! @Summary Process that handles the card. Plc(1), rt_io_comm(2) or application process(4).
      ! Process that handles the card.
      !
      ! 1: The card is written to by the plc process, and is handled by a specific
      !    thread in the plc, which is specified in the ThreadObject attribute.
      ! 2: The card is written to by the rt_io_comm process.
      ! 4: The card is handled by an application program.
      !*/
      Object Process $Attribute 14
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! @Summary Plc thread that handles the card.
      ! The PlcThread object of the plc thread that handles the card.
      ! The card is written to with the scantime of the thread.
      !*/
      Object ThreadObject $Intern 15
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Objid"
        EndBody
      EndObject
    EndObject
    Object DevBody $ObjBodyDef 2 
      Object ChannelAllocation $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
    EndObject
    Object Template Ao_HVAO4
      Body RtBody
        Attr MaxNoOfChannels = 4
        Attr Process = 2
      EndBody
    EndObject
    Object AnteAdopt $DbCallBack
      Body SysBody
        Attr MethodName = "Ao_HVAO4-AnteAdopt"
      EndBody
    EndObject
    Object PostUnadopt $DbCallBack
      Body SysBody
        Attr MethodName = "Ao_HVAO4-PostUnadopt"
      EndBody
    EndObject
    Object PostAdopt $DbCallBack
      Body SysBody
        Attr MethodName = "Ao_HVAO4-PostAdopt"
      EndBody
    EndObject
    Object ConfiguratorPoson $Menu
      Object Pointed $Menu
	Object Connect $MenuButton
	  Body SysBody
	    Attr ButtonName = "Connect PlcThread"
	    Attr MethodName = "$Objid-Connect"
	    Attr MethodArguments[0] = "ThreadObject"
	    Attr MethodArguments[1] = "PlcThread"
	    Attr FilterName = "$Objid-IsOkConnect"
	    Attr FilterArguments[0] = "ThreadObject"
	    Attr FilterArguments[1] = "PlcThread"
	  EndBody
	EndObject
      EndObject
    EndObject
  EndObject
EndSObject
