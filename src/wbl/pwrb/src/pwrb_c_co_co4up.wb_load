!  pwrb_c_co_pi24bo.wb_load -- Defines the class Co_PI24BO.
!
!  PROVIEW/R
!  Copyright (C) 1996,99 by Mandator AB.
!
!  Counter card PI24BO.
!
!  Note! This object shares methods with Co_PI24BO and should have an identical data structure.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group IO,IO_PSS9000
!  @Summary Configuration of a counter card CO4uP.
!  Configuration of a PSS9000 counter card CO4uP.
!
!  The Co_CO4uP object is positioned below a SSAB_Rack object in the node configuration.
!  Each used cannel of the card is configured with a ChanCo object, placed below the
!  Co_CO4uP object.
!
!  @b See hardware specification
!  @Link CO4uP http://intern.oxelosund.ssab.se/pss/Hårdvara/PSS-kort-data.htm#CO4uP
!*/
  Object Co_CO4uP $ClassDef 319
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_RtAndDevBodies
      Attr Flags |= pwr_mClassDef_IO
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "Co_CO4uP"
      EndBody
      !/**
      ! Optional description.
      !*/
      Object Description $Attribute 2 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      ! Device name. Used only in VAX_ELN nodes.
      ! The device name is the identification of the device in the ELN ebuild file.
      !*/
      Object DevName $Attribute 3 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      ! Error counter, incremented for every failed read or write operation of the card.
      ! When the error counter reaches ErrorSoftLimit, a message is sent to the console log.
      ! When it reaches ErrorHardLimit, all IO handling is aborted.
      !*/
      Object ErrorCount $Attribute 4
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      ! Value of the error counter, when a message is sent to the console log.
      !*/
      Object ErrorSoftLimit $Attribute 5
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Value of the error counter, when all IO handling is aborted.
      !*/
      Object ErrorHardLimit $Attribute 6
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! @Summary The conversion mask specifies which channel values that are transfered to signal values. 
      ! The conversion mask specifies which channel values that is transfered to signal values. 
      ! If value of a channel, read from the card, should not be used, the corresponding bit in
      ! the conversion mask is set to 0. The value can then be set from the runtime navigator.
      !*/
      Object ConvMask $Attribute 7
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Mask"
        EndBody
      EndObject
      !/**
      ! Maximum number of channels.
      !*/
      Object MaxNoOfCounters $Attribute 8
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
!          Attr Flags |= PWR_MASK_CONST
        EndBody
      EndObject
      !/**
      ! @Summary An extended 32-bit absolute value of the counter is calculated and stored.
      ! An extended 32-bit absolute value of the counter is calculated and stored.
      ! The extended value is convenient to use if there is any risk of overflow.
      ! It is fetched into the plc program with the PIX output of the GetPi object.
      !*/
      Object COAbsFlag $Attribute 9
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! @Summary Number of bits, 16 or 24.
      ! Number of bits, 16 or 24.
      ! If NoOfBits is 16, bit 12 is set in the configuration word of the counter.
      !*/
      Object NoOfBits $Attribute 10
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Enum"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! Internal flag.
      !*/
      Object COWrFlag $Attribute 11
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/** 
      ! @Summary The number of pulses is multiplied with this factor. 2 or 4.
      ! The number of pulses is multiplied with this factor. 2 or 4.
      ! If MulCount is 2, bit 11 is set in the configuration word of the counter.
      !*/
      Object MulCount $Attribute 12
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Enum"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/** 
      ! @Summary The number of pulses is divided with 16. No (0) or 16.
      ! The number of pulses is divided with 16. No (0) or 16.
      ! If DivCount is 16, bit 9 is set in the configuration word of the counter.
      !*/
      Object DivCount $Attribute 13
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Enum"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! @Summary Copy the value in SyncRawValue to the counter value, when rough sync is detected.
      ! Copy the value in SyncRawValue to the counter value, when rough sync is detected.
      ! Actually, it is the write register that is copied to the counter value, and the
      ! SyncRawValue is copied to the write register as system startup.
      ! If CopWrRough is true, bit 13 is set in the configuration word of the counter.
      !*/
      Object CopWrRough $Attribute 14
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! @Summary Copy the value in SyncRawValue to the counter value, when fine sync is detected.
      ! Copy the value in SyncRawValue to the counter value, when fine sync is detected.
      ! Actually, it is the write register that is copied to the counter value, and the
      ! SyncRawValue is copied to the write register as system startup.
      ! If CopWrFine is true, bit 14 is set in the configuration word of the counter.
      !*/
      Object CopWrFine $Attribute 15
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! @Summary Copy the value in SyncRawValue to the write register and to the counter value.
      ! Copy the value in SyncRawValue to the write register and to the counter value.
      ! If LoadWrReg is false, the value in SyncRawValue is copied to the write register, but
      ! not the the counter value.
      ! Bit 15 in the configuration word of the counter is set, if LoadWrReg is true.
      !*/
      Object LoadWrReg $Attribute 16
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! @Summary Length measurement, triggered by the rough sync signal.
      ! Length measurement, triggered by the rough sync signal.
      ! If CopWrRough is true, the counter value will be reset when rough sync is detected,
      ! if false, count will start from the previous value.
      ! Bit 10 in the configuration word of the counter is set.
      !*/
      Object LengthMeasurement $Attribute 17
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! @Summary Speed measurement, pulses per second.
      ! Speed measurement, pulses per second.
      ! Bit 8 in the configuration word of the counter is set.
      !*/
      Object SpeedMeasurement $Attribute 18
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! @Summary Value copied to the counter value when rough or fine sync is detected.
      ! Value copied to the counter value when rough or fine sync is detected.
      ! The value in SyncRawValue is copied to the write register at system startup.
      ! Due to values of CoWrRough an CoWrFine the value in the write register is
      ! copied to the counter value, when a rough or fine sync is detected.
      !*/
      Object SyncRawValue $Attribute 19
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 4
        EndBody
      EndObject
      !/**
      ! @Summary QBUS address of the card.
      ! QBUS address of the card.
      ! The value is set with address switches on the card.
      ! Note! The value in RegAddress is a decimal value
      !
      !	Card number	Octal address	Decimal address
      !	1		176300		4193472
      !	2		176320		4193488
      !	3		176340		4193504
      !	4		176360		4193520
      !
      ! For VAX_ELN RegAddress is used for documentation only, and usually specified as an octal value.
      !*/
      Object RegAddress $Attribute 20
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Vector address. Used on VAX_ELN only, and only for documentation.
      !*/
      Object VectAddress $Attribute 21
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! @Summary Process that handles the card. Plc(1), rt_io_comm(2) or application process(4).
      ! Process that handles the card.
      !
      ! 1: The card is read by the plc process, and is handled by a specific
      !    thread in the plc, which is specified in the ThreadObject attribute.
      ! 2: The card is read by the rt_io_comm process.
      ! 4: The card is handled by an application program.
      !*/
      Object Process $Attribute 22
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! @Summary Plc thread that handles the card.
      ! The PlcThread object of the plc thread that handles the card.
      ! The card read to with the scantime of the thread.
      !*/
      Object ThreadObject $Intern 23
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Objid"
        EndBody
      EndObject
    EndObject
    Object DevBody $ObjBodyDef 2 
      Object ChannelAllocation $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
    EndObject
    Object Template Co_CO4uP
      Body RtBody
	Attr ConvMask = 65535
        Attr COAbsFlag[0] = 1
        Attr COAbsFlag[1] = 1
        Attr COAbsFlag[2] = 1
        Attr COAbsFlag[3] = 1
        Attr NoOfBits[0] = 24
        Attr NoOfBits[1] = 24
        Attr NoOfBits[2] = 24
        Attr NoOfBits[3] = 24
        Attr MulCount[0] = 4
        Attr MulCount[1] = 4
        Attr MulCount[2] = 4
        Attr MulCount[3] = 4
        Attr CopWrRough[0] = 1
        Attr CopWrRough[1] = 1
        Attr CopWrRough[2] = 1
        Attr CopWrRough[3] = 1
        Attr CopWrFine[0] = 1
        Attr CopWrFine[1] = 1
        Attr CopWrFine[2] = 1
        Attr CopWrFine[3] = 1
        Attr MaxNoOfCounters = 4
        Attr Process = 1
      EndBody
    EndObject
    Object AnteAdopt $DbCallBack
      Body SysBody
        Attr MethodName = "Co_PI24BO-AnteAdopt"
      EndBody
    EndObject
    Object PostUnadopt $DbCallBack
      Body SysBody
        Attr MethodName = "Co_PI24BO-PostUnadopt"
      EndBody
    EndObject
    Object PostAdopt $DbCallBack
      Body SysBody
        Attr MethodName = "Co_PI24BO-PostAdopt"
      EndBody
    EndObject
    Object ConfiguratorPoson $Menu
      Object Pointed $Menu
	Object Connect $MenuButton
	  Body SysBody
	    Attr ButtonName = "Connect PlcThread"
	    Attr MethodName = "$Objid-Connect"
	    Attr MethodArguments[0] = "ThreadObject"
	    Attr MethodArguments[1] = "PlcThread"
	    Attr FilterName = "$Objid-IsOkConnect"
	    Attr FilterArguments[0] = "ThreadObject"
	    Attr FilterArguments[1] = "PlcThread"
	  EndBody
	EndObject
      EndObject
    EndObject
  EndObject
EndSObject
