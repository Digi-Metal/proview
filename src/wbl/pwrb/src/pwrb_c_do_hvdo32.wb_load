!  pwrb_c_do_hvdo32.wb_load -- Defines the class Do_HVDO32.
!
!  PROVIEW/R
!  Copyright (C) 1996,99 by Mandator AB.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group IO,IO_PSS9000
!  @Summary Configuration of a digital output card DO32DKS
!  Configuration of a PSS9000 digital output card DO32DKS.
!
!  32 channel output module, shortcut protected.
!  The Do_HVDO32 object is positioned below a SSAB_Rack object in the node configuration.
!  Each used cannel of the card is configured with a ChanDo or ChanPo object, placed below the
!  Do_HVDO32 object.
!
!  @b See hardware specification
!  @Link DO32DKS http://intern.oxelosund.ssab.se/pss/Hårdvara/PSS-kort-data.htm#DO32D
!*/
  Object Do_HVDO32 $ClassDef 99 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_RtAndDevBodies
      Attr Flags |= pwr_mClassDef_IOCard
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "Do_HVDO32"
      EndBody
      !/**
      ! Optional description.
      !*/
      Object Description $Attribute 2 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      ! Device name. Used only in VAX_ELN nodes.
      ! The device name is the identification of the device in the ELN ebuild file.
      !*/
      Object DevName $Attribute 3 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      ! Error counter, incremented for every failed write operation of the card.
      ! When the error counter reaches ErrorSoftLimit, a message is sent to the console log.
      ! When it reaches ErrorHardLimit, all IO handling is aborted.
      !*/
      Object ErrorCount $Attribute 4
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      ! Value of the error counter, when a message is sent to the console log.
      !*/
      Object ErrorSoftLimit $Attribute 5
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Value of the error counter, when all IO handling is aborted.
      !*/
      Object ErrorHardLimit $Attribute 6
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! @Summary The invert mask specifies which channel values that are inverted.
      ! The invert mask specifies which channel values that are inverted before transfered
      ! to the hardeware device.
      ! If value of a channel, should be inverted, the corresponding bit in
      ! the invert mask is set to 1.
      ! Channel 1 - 16 is handled by InvMask1, channel 17 - 32 by InvMask2.
      ! The invert masks are changed with the rtt commands 'set invert /on' and
      ! 'set invert /off'.
      !*/
      Object InvMask1 $Attribute 7
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Mask"
        EndBody
      EndObject
      !/**
      ! See InvMask1. InvMask2 handles channel 17 - 32.
      !*/
      Object InvMask2 $Attribute 8
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Mask"
        EndBody
      EndObject
      !/**
      ! @Summary The test mask specifies which channel values that are fetch from the TestValue attribute.
      ! The test mask specifies which channel values that are fetched from the TestValue
      ! attribute instead of from the hardeware device.
      ! If the value of a channel, should be fetched from the TestValue, the corresponding bit in
      ! the invert mask is set to 1.
      ! Channel 1 - 16 is handled by TestMask1, channel 17 - 32 by TestMask2.
      ! The test masks are changed with the rtt commands 'set dotest /on' and
      ! 'set dotest /off'.
      !*/
      Object TestMask1 $Attribute 9
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Mask"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      ! See TestMask1. TestMask2 handles channel 17 - 32.
      !*/
      Object TestMask2 $Attribute 10
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Mask"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      ! @Summary The test value specifies the value for channels marked for test in the TestMask attribute.
      ! The test value specifies the value for channels marked for test in the TestMask attribute.
      ! Channel 1 - 16 is handled by TestValue1, channel 17 - 32 by TestValue2.
      !
      ! @b Example
      ! If you want to put the value 1 in channel 3, bit 3 in TestMask1 should be 1, and bit 3
      ! in TestValue1 should be 1.
      ! If you want to put the value 0 in channel 18, bit 2 in TestMask2 should be 1, and bit 2
      ! in TestValue2 should be 0.
      !
      ! The test value are changed with the rtt commands 'set testvalue /on' and
      ! 'set testvalue /off'.
      !*/
      Object TestValue1 $Attribute 11
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      ! See TestValue1. TestValue2 handles channel 17 - 32.
      !*/
      Object TestValue2 $Attribute 12
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      ! Bitmask mapped to channel 1 to 16 at emergency break of the IO, i.e if ErrorHardLimit
      ! is exceeded in any card. FixedOutValue should normally be 0, because this is the value
      ! at power loss.
      !*/
      Object FixedOutValue1 $Attribute 13
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
        EndBody
      EndObject
      !/**
      ! Se FixedOutValue1. FixedOutValue2 is the value for channel 17 to 32.
      !*/
      Object FixedOutValue2 $Attribute 14
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
        EndBody
      EndObject
      !/**
      ! Maximum number of channels of the card.
      !*/
      Object MaxNoOfChannels $Attribute 15
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
          Attr Flags |= PWR_MASK_CONST
        EndBody
      EndObject
      !/**
      ! @Summary QBUS address of the card.
      ! QBUS address of the card.
      ! The value is set with address switches on the card.
      ! Note! The value in RegAddress is a decimal value
      !
      !	Card number	Octal address	Decimal Address
      !	1		176000		4193280
      !	2		176004		4193284
      !	3		176010		4193288
      !	4		176014		4193292
      !	5		176020		4193296
      !	6		176024		4193300
      !	7		176030		4193304
      !	8		176034		4193308
      !	9		176040		4193312
      !
      ! For VAX_ELN RegAddress is used for documentation only, and usually specified as an octal value.
      !*/
      Object RegAddress $Attribute 16
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Vector address. Used on VAX_ELN only, and only for documentation.
      !*/
      Object VectAddress $Attribute 17
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! @Summary Process that handles the card. Plc(1), rt_io_comm(2) or application process(4).
      ! Process that handles the card.
      !
      ! 1: The card is written to by the plc process, and is handled by a specific
      !    thread in the plc, which is specified in the ThreadObject attribute.
      ! 2: The card is written to by the rt_io_comm process.
      ! 4: The card is handled by an application program.
      !*/
      Object Process $Attribute 18
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! @Summary Plc thread that handles the card.
      ! The PlcThread object of the plc thread that handles the card.
      ! The card is written to with the scantime of the thread.
      !*/
      Object ThreadObject $Intern 19
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Objid"
        EndBody
      EndObject
      !/**
      !  @Summary A URL to the data sheet for the equipment in this object.
      !  A URL to the data sheet for the equipment of this object.
      !  The data sheet can be displayed from the popup menu for this object.
      !*/
      Object DataSheet $Attribute 20
        Body SysBody
          Attr TypeRef = "pwrs:Type-$URL"
        EndBody
      EndObject
    EndObject
    Object DevBody $ObjBodyDef 2 
      Object ChannelAllocation $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
    EndObject
    Object Template Do_HVDO32
      Body RtBody
        Attr MaxNoOfChannels = 32
	Attr ErrorSoftLimit = 15
	Attr ErrorHardLimit = 50
        Attr Process = 1
 	Attr DataSheet = "$pwr_lang/ssab_do_hvdo32.pdf"
      EndBody
    EndObject
    Object AnteAdopt $DbCallBack
      Body SysBody
        Attr MethodName = "Do_HVDO32-AnteAdopt"
      EndBody
    EndObject
    Object PostUnadopt $DbCallBack
      Body SysBody
        Attr MethodName = "Do_HVDO32-PostUnadopt"
      EndBody
    EndObject
    Object PostAdopt $DbCallBack
      Body SysBody
        Attr MethodName = "Do_HVDO32-PostAdopt"
      EndBody
    EndObject
    Object ConfiguratorPoson $Menu
      Object Pointed $Menu
	Object Connect $MenuButton
	  Body SysBody
	    Attr ButtonName = "Connect PlcThread"
	    Attr MethodName = "$Objid-Connect"
	    Attr MethodArguments[0] = "ThreadObject"
	    Attr MethodArguments[1] = "PlcThread"
	    Attr FilterName = "$Objid-IsOkConnect"
	    Attr FilterArguments[0] = "ThreadObject"
	    Attr FilterArguments[1] = "PlcThread"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object IoMethods $RtMethod
      Object IoCardInit $Method
        Body SysBody
          Attr MethodName = "Do_HVDO32-IoCardInit"
        EndBody
      EndObject
      Object IoCardClose $Method
        Body SysBody
          Attr MethodName = "Do_HVDO32-IoCardClose"
        EndBody
      EndObject
      Object IoCardWrite $Method
        Body SysBody
          Attr MethodName = "Do_HVDO32-IoCardWrite"
        EndBody
      EndObject
    EndObject
  EndObject
EndSObject
