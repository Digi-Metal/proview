! 
!  Proview   $Id: pwrs_c_rootvolume.wb_load,v 1.6 2006-02-23 14:37:20 claes Exp $
!  Copyright (C) 2005 SSAB Oxelösund AB.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with the program, if not, write to the Free Software 
!  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
!
!  pwrs_c_rootvolume.wb_load -- Defines the class RootVolume.
!
SObject pwrs:Class
!/**
!  @Group Volumes
!  A root volume contains the root of the object tree of the
!  realtime database of a node. The volume is loadede into
!  the database at system startup.
!
!  Only one rootvolume can be loaded into a node, and in one
!  qcom bus, the root volume can only be loaded into one node.
!
!  It is possible to mount objects of other volumes in the object
!  tree of a root volume. SubVolumes, SharedVolumes, DynamicVolumes
!  and RootVolumes of remote nodes, can be mounted by placing
!  mount objects in the object tree.
!
!  The volume has to be registred in the global volume list, and is
!  identified by a volume identity.
!  
!  In the directory volume of a project, a root volume is configured
!  by a RootVolumeConfig object, and the node the volume is to be
!  loaded into is specified with a RootVolumeLoad object.
!
!  @b See also
!  @classlink RootVolumeConfig pwrb_rootvolumeconfig.html
!  @classlink RootVolumeLoad pwrb_rootvolumeload.html
!  @classlink SubVolume pwrs_subvolume.html
!  @classlink SharedVolume pwrs_sharedvolume.html
!  @classlink DynamicVolume pwrs_dynamicvolume.html
!  @classlink ClassVolume pwrs_classvolume.html
!  @classlink VolumeId pwrs_volumeid.html
!*/
  Object $RootVolume $ClassDef pwr_eCix_RootVolume
    Body SysBody
      Attr Flags |= pwr_mClassDef_System
      Attr Flags |= pwr_mClassDef_TopObject
    EndBody
    Object SysBody $ObjBodyDef 1
      Body SysBody
        Attr StructName = "RootVolume"
      EndBody
      Object Description $Attribute 1
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      Object NextOix $Attribute 2
        Body SysBody
          Attr TypeRef = "pwrs:Type-$ObjectIx"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
      Object RtVersion $Attribute 3
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
      Object RtCreTime $Attribute 4
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
      Object RtCreator $Attribute 5
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String16"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
      Object RtCardinality $Attribute 6
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
      Object RtBodySize $Attribute 7
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
      Object OperatingSystem $Attribute 8
        Body SysBody
          Attr TypeRef = "pwrs:Type-$OpSysMask"
        EndBody
      EndObject
    EndObject
    Object Template $RootVolume
      Body SysBody
      EndBody
    EndObject
  EndObject
EndSObject
