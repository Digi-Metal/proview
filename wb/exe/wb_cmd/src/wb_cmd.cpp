/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2018 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

/* wb.cpp -- graphical editor */

#include <unistd.h>
#include <sys/stat.h>

#include "co_string.h"

#include "wb_main.h"

int main(int argc, char* argv[])
{
  int i;
  int found = 0;
  char wmg[80];
  pwr_tFileName file;

  if (argc > 1) {
    for (i = 1; i < argc; i++) {
      if (streq(argv[i], "-f")) {
        if (i + 1 >= argc) {
          // Wb::usage();
          exit(0);
        }
        found = 1;
        strcpy(wmg, argv[i + 1]);
        i++;
      }
    }
    strcpy(file, argv[0]);
    strcat(file, "_");
    strcat(file, wmg);
  }

  if (!found) {
    const char* flavours[] = { "qt", "gtk", "motif" };
    for (int i = 0; i < 3; i++) {
      strcpy(file, "$pwr_exe/wb_cmd_");
      strcat(file, flavours[i]);
      dcli_translate_filename(file, file);
      struct stat st;
      if (stat(file, &st) == 0) {
        strcpy(wmg, flavours[i]);
        break;
      }

      strcpy(file, "$pwr_eexe/wb_cmd_");
      strcat(file, flavours[i]);
      dcli_translate_filename(file, file);
      if (stat(file, &st) == 0) {
        strcpy(wmg, flavours[i]);
        break;
      }
    }
  }

  execvp(file, argv);
}
