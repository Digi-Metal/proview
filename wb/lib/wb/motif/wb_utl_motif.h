/* 
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2011 SSAB Oxelosund AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and 
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of Proview (the version used to produce the 
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 **/

#include "wb_utl.h"

#ifndef wb_utl_motif_h
#define wb_utl_motif_h


#ifndef _XtIntrinsic_h
#include <X11/Intrinsic.h>
#endif

class wb_utl_motif : public wb_utl {
 public:
  Widget widget;

  wb_utl_motif( Widget w) : widget(w) {}
  ~wb_utl_motif() {}
  int create_mainwindow( int argc, char **argv);
  int destroy_mainwindow();
  int utl_foe_new( const char *name, pwr_tOid	plcpgm,
			   ldh_tWBContext ldhwbctx, ldh_tSesContext ldhsesctx,
			   WFoe **foectx, int map_window, ldh_eAccess access);
  int utl_foe_new_local( WFoe *foectx, const char *name, pwr_tOid plcpgm, 
			 ldh_tWBContext ldhwbctx, ldh_tSesContext ldhsesctx, 
			 vldh_t_node nodeobject, unsigned long windowindex, 
			 unsigned long new_window, WFoe **return_foectx, 
			 int map_window, ldh_eAccess access, 
			 foe_eFuncAccess function_access);
};

#endif
