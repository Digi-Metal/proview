/*
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of Proview (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 **/

#ifndef wb_foe_qt_h
#define wb_foe_qt_h

/* wb_foe_qt.h -- function block object editor */

#include "flow_ctx.h"
#include "flow_api.h"
#ifndef wb_foe_h
#include "wb_foe.h"
#endif

#ifndef cow_wow_qt_h
#include "cow_wow_qt.h"
#endif

class WFoeQtWidget;

class WFoeQt : public WFoe {
public:
  QLabel *label;
  QLineEdit *textinput;
  QSplitter *pane;
  QSplitter *subpane;
  QWidget *caution;
  QWidget *caution_label;
  QWidget *adb;
  QWidget *foe_window;
  QWidget *popupmenu;
  QWidget *file_entry;
  QAction *save;
  QAction *exit;
  QAction *savetrace;
  QAction *restoretrace;
  QWidget *print;
  QAction *syntax;
  QAction *compile;
  QAction *redraw;
  QAction *plcattribute;
  QAction *winddelete;
  QWidget *quit;
  QAction *cut;
  QAction *copy;
  QAction *paste;
  QAction *undelete;
  QAction *unselect;
  QAction *createnode;
  QAction *createcon;
  QAction *connectA;
  QAction *del;
  QAction *changetext;
  QAction *expand;
  QAction *compress;
  QWidget *edit_entry;       /* entry of the menu */
  QWidget *search_entry;     /* entry of the menu */
  QWidget *customize_entry;  /* entry of the menu */
  QAction *trace_togg;       /* togg under the function entry of the menu */
  QAction *simulate_togg;    /* togg under the function entry of the menu */
  QAction *view_togg;        /* togg under the function entry of the menu */
  QAction *edit_togg;        /* togg under the function entry of the menu */
  QWidget *con_palette;
  QWidget *node_palette;
  QWidget *nav_palette;
  QAction *view_objectpal;
  QAction *view_conpal;
  QAction *view_plantpal;
  QAction *tools_save;
  QAction *tools_build;
  QAction *tools_redraw;
  QAction *tools_singlelinetext;
  QAction *tools_bodytext;
  QAction *tools_textheader;
  QAction *tools_document;
  QAction *tools_document_landscape;
  QAction *tools_confeedback;
  QAction *lockconpoint;
  QAction *move_right;
  QAction *move_left;
  QAction *move_up;
  QAction *move_down;
  QAction *select_addnextright;
  QAction *select_addnextleft;
  QAction *select_addnextup;
  QAction *select_addnextdown;
  QAction *select_cp_nextright;
  QAction *select_cp_nextleft;
  QAction *select_cp_nextup;
  QAction *select_cp_nextdown;
  CoWowFocusTimerQt focustimer;

  WFoeQt(void *f_parent_ctx, QWidget *f_parent_wid, const char *f_name,
         pwr_tObjid plcprogram, ldh_tWBContext ldhwbctx,
         ldh_tSesContext ldhsesctx, int f_map_window, ldh_eAccess f_access,
         unsigned int f_options, pwr_tStatus *sts);
  WFoeQt(void *f_parent_ctx, QWidget *f_parent_wid, const char *f_name,
         pwr_tObjid plcprogram, ldh_tWBContext ldhwbctx,
         ldh_tSesContext ldhsesctx, vldh_t_node nodeobject,
         unsigned long windowindex, unsigned long new_window, int f_map_window,
         ldh_eAccess f_access, foe_eFuncAccess function_access,
         unsigned int f_options, pwr_tStatus *sts);

  virtual void pop();
  virtual WAtt *watt_new(void *a_parent_ctx, ldh_tSesContext a_ldhses,
                         pwr_sAttrRef a_aref, int a_editmode,
                         int a_advanced_user, int a_display_objectname);
  virtual WAttText *watttext_new(void *a_parent_ctx, ldh_tSesContext a_ldhses,
                                 pwr_sAttrRef a_aref, int a_editmode,
                                 pwr_tStatus *status);
  virtual WFoe *subwindow_new(void *f_parent_ctx, char *f_name,
                              pwr_tObjid plcprogram, ldh_tWBContext ldhwbctx,
                              ldh_tSesContext ldhsesctx, vldh_t_node nodeobject,
                              unsigned long windowindex,
                              unsigned long new_window, int f_map_window,
                              ldh_eAccess f_access,
                              foe_eFuncAccess function_access,
                              unsigned int f_options, pwr_tStatus *sts);
  virtual void destroy();
  virtual void set_title();
  virtual void message(const char *new_label);
  virtual void msgbox(const char *new_label);
  virtual int create_window(int x_top, int y_top, int width_adb, int height_adb,
                            ldh_tSesContext ldhsession,
                            foe_eFuncAccess function_access);
  virtual int get_textinput(const char *message,
                            int (*function)(WFoe *, char *));
  virtual int edit_set_entries();
  virtual int view_set_entries();
  virtual void set_mode_button_state(int mode, int state);
  virtual int modify_popup(unsigned long popupmenu_mask, int x, int y);
  virtual int get_selection(char *str, int len);
  virtual void popupmsg(const char *new_label, void (*yes_procedure)(WFoe *),
                        void (*no_procedure)(WFoe *),
                        void (*cancel_procedure)(WFoe *));

  int register_callbacks();

  static void reset_current_node(WFoe *foe);
  static void delete_subwindow_ok_cb(void *ctx, void *data);

private:
  WFoeQtWidget *toplevel;
};

class WFoeQtWidget : public QWidget {
  Q_OBJECT

public:
  WFoeQtWidget(WFoeQt *parent_ctx, QWidget *parent)
      : QWidget(parent, Qt::Window), foe(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent *event);
  void closeEvent(QCloseEvent *event);

public slots:
  void activate_history();
  void activate_printdialog();
  void activate_createobject();
  void activate_select_next();
  void activate_select_addnext();
  void activate_select_cp_next();
  void activate_scroll();
  void activate_move();
  void activate_gridsize();
  void activate_palette_con();
  void activate_palette_object();
  void activate_palette_plant();
  void activate_confeedback(bool set);
  void activate_singlelinetext();
  void activate_bodytext();
  void activate_textheader();
  void activate_document();
  void activate_document_landscape();
  void activate_trace_togg(bool set);
  void activate_simulate_togg(bool set);
  void activate_view_togg(bool set);
  void activate_edit_togg(bool set);
  void valchanged_textinput();
  void popup_unmap_cb();

  void wfoeqt_reset_current_node();

private:
  WFoeQt *foe;
};

#endif