/* 
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2012 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and 
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of Proview (the version used to produce the 
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 **/

#ifndef wb_build_h
#define wb_build_h

#include "pwr.h"
#include "wb_ldh.h"
#include "wb_session.h"
#include "wb_wnav.h"
#include "wb_build_opt.h"

class Wtt;

class wb_build : public wb_status
{
 public:
  wb_build( wb_session ses, WNav *wnav = 0):
    m_session(ses), m_wnav(wnav), m_hierarchy(pwr_cNOid) {};

  void classlist( pwr_tCid cid);
  void node( char *nodename, void *volumelist, int volumecnt);
  void volume();
  void rootvolume( pwr_tVid vid);
  void classvolume( pwr_tVid vid);
  void planthier( pwr_tOid oid);
  void nodehier( pwr_tOid oid);
  void plcpgm( pwr_tOid oid);
  void xttgraph( pwr_tOid oid);
  void webhandler( pwr_tOid oid);
  void webbrowserconfig( pwr_tOid oid);
  void webgraph( pwr_tOid oid);
  void application( pwr_tOid oid);

  wb_build_opt opt;
  wb_session m_session;
  WNav *m_wnav;
  pwr_tOid m_hierarchy;
};

#endif

