/* 
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2014 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and 
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of Proview (the version used to produce the 
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 **/

#ifndef wb_recix_h
#define wb_recix_h

#include <map>
#include <string>
#include "pwr.h"
#include "wb_object.h"

using namespace std;

class wb_recix {
  typedef map< string, pwr_tOix>::iterator ix_iterator;
  
 private:
  map< string, pwr_tOix> m_ix;
  pwr_tOName m_srcroot;
  pwr_tOName m_destroot;
  int m_destroot_len;

  bool add_object_ctree( wb_object &o);

 public:
  wb_recix() : m_destroot_len(0) {
    strcpy( m_srcroot, "");
    strcpy( m_destroot, "");
  }
  bool add_object_tree( wb_object &o);
  bool add( const char *str, pwr_tOix ix);
  void set_destination( const char *dest) { 
    strncpy( m_destroot, dest, sizeof(m_destroot));
    m_destroot_len = strlen(m_destroot);
  }
  bool get( char *str, pwr_tOix *ix);
  void clear();
};

#endif




