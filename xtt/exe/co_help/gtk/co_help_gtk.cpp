/* 
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2013 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and 
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of Proview (the version used to produce the 
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

/* co_help_gtk.cpp -- Help window */

#include "flow_std.h"

#include <stdio.h>
#include <stdlib.h>
#include <locale.h>

#include <gtk/gtk.h>

#include "co_dcli.h"

#include "co_lng.h"
#include "flow.h"
#include "flow_browctx.h"
#include "flow_browapi.h"
#include "co_help_gtk.h"
#include "cow_xhelp_gtk.h"

void CoHelpGtk::close_cb( void *ctx, void *xhelp)
{
  delete (CoXHelpGtk *)xhelp;
  exit(0);
}

void CoHelpGtk::cohelp_mainloop()
{
  gtk_main();
}

int main(  int argc, char *argv[])
{
  int sts;

  gtk_init( &argc, &argv);

  setlocale( LC_NUMERIC, "POSIX");
  setlocale( LC_TIME, "en_US");

  new CoHelpGtk( argc, argv, &sts);
  exit(sts);
}

CoHelpGtk::~CoHelpGtk()
{
}

CoHelpGtk::CoHelpGtk( int argc, char *argv[], int *return_sts) :
  CoHelpMain( argc, argv, return_sts)
{
  pwr_tStatus   sts;
#if 0
  const int	window_width = 400;
  const int    	window_height = 700;
  char		title[120] = "Xtt ";

  // Gtk
  toplevel = (GtkWidget *) g_object_new( GTK_TYPE_WINDOW, 
					 "default-height", window_height,
					 "default-width", window_width,
					 "title", title,
					 NULL);
#endif
  // Create help window
  CoXHelp *xhelp = new CoXHelpGtk( 0 /*toplevel*/, this, xhelp_eUtility_Xtt, &sts);
  // xhelp->open_URL_cb = open_URL_cb;
  CoXHelp::set_default( xhelp);
  xhelp->close_cb = close_cb;

  exec_help();

  cohelp_mainloop();  

}






