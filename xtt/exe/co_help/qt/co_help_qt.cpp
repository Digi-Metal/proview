/*
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of Proview (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

/* co_help_qt.cpp -- Help window */

#include <locale.h>

#include "co_help_qt.h"

#include "cow_qt_helpers.h"
#include "cow_xhelp_qt.h"

#include <QApplication>

void CoHelpQt::close_cb(void* ctx, void* xhelp)
{
  ((CoXHelpQt*)xhelp)->toplevel->close();
  exit(0);
}

int main(int argc, char* argv[])
{
  int sts;

  QApplication app(argc, argv);

  setlocale(LC_NUMERIC, "POSIX");
  setlocale(LC_TIME, "en_US");

  new CoHelpQt(argc, argv, &sts);

  return app.exec();
}

CoHelpQt::~CoHelpQt()
{
}

CoHelpQt::CoHelpQt(int argc, char* argv[], int* return_sts)
    : CoHelpMain(argc, argv, return_sts)
{
  pwr_tStatus sts;

  debug_print("co_help_qt: started with arguments:\n");
  if (argc > 1) {
    for (int i = 1; i < argc; i++) {
      debug_print("arg%d: %s\n", i, argv[i]);
    }
  }

  // Create help window
  CoXHelp* xhelp
      = new CoXHelpQt(0 /*toplevel*/, this, xhelp_eUtility_Xtt, &sts);
  // xhelp->open_URL_cb = open_URL_cb;
  CoXHelp::set_default(xhelp);
  xhelp->close_cb = close_cb;

  exec_help();
}