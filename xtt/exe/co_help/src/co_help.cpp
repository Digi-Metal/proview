/* 
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2015 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and 
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of Proview (the version used to produce the 
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

/* co_help.cpp -- Help window */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/stat.h>

#include "pwr.h"
#include "co_dcli.h"

int main( int argc, char *argv[])
{
  int i;
  int found = 0;
  char wmg[80];
  pwr_tFileName file;
  
  if ( argc > 1) {

    for ( i = 1; i < argc; i++) {
      if ( strcmp( argv[i], "-f") == 0) {
	if ( i+1 >= argc) {
	  printf( "co_help: Syntax error\n");
	  exit(0);
	}
	found = 1;
	strcpy( wmg, argv[i+1]);
	i++;
      }
    }
  }
  if ( !found) {
    struct stat st;

    strcpy( file, "$pwr_exe/co_help_gtk");
    dcli_translate_filename( file, file);
    if ( stat( file, &st) == 0)
      strcpy( wmg, "gtk");
    else
      strcpy( wmg, "motif");
  }

  strcpy( file, argv[0]);
  strcat( file, "_");
  strcat( file, wmg);

  execvp( file, argv);
}
