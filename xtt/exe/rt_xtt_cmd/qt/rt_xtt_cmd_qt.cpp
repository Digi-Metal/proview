/*
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of Proview (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

/* wb_cmd_qt.c -- command file processing
   The main program of pwrc.  */

#include <iostream>

#include "co_dcli.h"

#include "cow_qt_helpers.h"

#include "xtt_xnav_qt.h"

#include "rt_xtt_cmd_qt.h"

#include <QApplication>
#include <QMainWindow>

XttCmdQt::XttCmdQt(QWidget* w)
{
  pwr_tStatus sts;
  pwr_tOName opplace = "";

  xnav = new XNavQt(this, w, "Plant", &brow_widget, (xnav_sStartMenu*)root_menu,
      opplace, 0, &sts);

  xnav->message_cb = &message_cb;
  xnav->close_cb = XttCmd::close_cb;
  xnav->login();
}

static int timeout_func()
{
  while (QApplication::hasPendingEvents()) {
    QApplication::processEvents();
  }
  return 1;
}

int main(int argc, char* argv[])
{
  pwr_tStatus sts;
  int i;
  char str[256];
  XttCmdQt* cmd;
  int quiet = 0;
  bool hide = false;
  char title[80];

  /* If arguments, treat them as a command and then exit */
  // Open directory volume as default

  debug_print("rt_xtt_cmd_qt: started with arguments:\n");

  str[0] = 0;
  for (i = 1; i < argc; i++) {
    debug_print("arg%d: %s\n", i, argv[i]);
    if (argv[i][0] == '-') {
      switch (argv[i][1]) {
      case 'h':
        XttCmd::usage();
        exit(0);
      case 'q':
        // Quiet
        quiet = 1;
        break;
      case 'i':
        // Hide
        hide = true;
        break;
      case '-':
        // Display sent to qt
        i++;
        break;
      default:
        std::cout << "Unknown argument: " << argv[i] << '\n';
      }
    } else {
      if (str[0] != 0) {
        strcat(str, " ");
      }
      strcat(str, argv[i]);
    }
  }

  sts = gdh_Init("rt_xtt_cmd");
  if (EVEN(sts)) {
    printf("Unable to connect to database\n");
    exit(0);
  }

  QApplication app(argc, argv);

  setlocale(LC_TIME, "en_US");
  setlocale(LC_NUMERIC, "POSIX");

  strcat(title, "Xtt Cmd");

  // Qt
  QMainWindow* toplevel = new QMainWindow();
  toplevel->setMinimumSize(400, 700);
  toplevel->setWindowTitle(fl(title));
  toplevel->setAttribute(Qt::WA_DeleteOnClose);

  cmd = new XttCmdQt(toplevel);

  toplevel->setCentralWidget(cmd->brow_widget);
  toplevel->show();
  if (hide) {
    toplevel->setVisible(false);
  }

  if (!quiet) {
    std::cout << "\n\
Proview is free software; covered by the GNU General Public License.\n\
You can redistribute it and/or modify it under the terms of this license.\n\
\n\
Proview is distributed in the hope that it will be useful \n\
but WITHOUT ANY WARRANTY; without even the implied warranty of \n\
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the \n\
GNU General Public License for more details.\n\n";
  }

  if (str[0] != 0) {
    dcli_remove_blank(str, str);
    sts = cmd->xnav->command(str);
    if (ODD(sts)) {
      return 0;
    }
    exit(sts);
  }
  sts = dcli_input_init(&cmd->chn, &cmd->recall_buf);
  if (EVEN(sts)) {
    exit(sts);
  }

  // Init input

  while (1) {
    unsigned long terminator;
    unsigned long option = DCLI_OPT_TIMEOUT;

    /* get and parse the command */

    /* get input */
    dcli_qio_set_attr(&cmd->chn, 1);
    sts = dcli_get_input_string(&cmd->chn, str, &terminator, sizeof(str),
        cmd->recall_buf, option, 1, timeout_func, 0, "xttc> ");
    dcli_qio_reset(&cmd->chn);

    //    sts = scanf( "%s", str);

    if (strcmp(str, "") == 0) {
      continue;
    }

    dcli_remove_blank(str, str);
    sts = cmd->xnav->command(str);

    while (QApplication::hasPendingEvents()) {
      QApplication::processEvents();
    }
  }
}