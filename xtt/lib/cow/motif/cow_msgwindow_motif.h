/** 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2018 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 **/

#ifndef co_msgwindow_motif_h
#define co_msgwindow_motif_h

/* cow_msgwindow_motif.h -- Message window */

#ifndef cow_msgwindow_h
# include "cow_msgwindow.h"
#endif

#include <Xm/Xm.h>

class MsgWindowMotif : public MsgWindow {
  public:
    MsgWindowMotif(
	void *msg_parent_ctx,
	Widget	msg_parent_wid,
	const char *msg_name,
	pwr_tStatus *status);
    ~MsgWindowMotif();

    Widget		parent_wid;
    Widget		toplevel;
    Widget		form;
    Widget		nav_widget;

    void	map();
    void	unmap();

    static void action_inputfocus( Widget w, XmAnyCallbackStruct *data);
    static void activate_exit( Widget w, MsgWindow *msgw, XmAnyCallbackStruct *data);
    static void activate_clear( Widget w, MsgWindow *msgw, XmAnyCallbackStruct *data);
    static void activate_zoom_in( Widget w, MsgWindow *msgw, XmAnyCallbackStruct *data);
    static void activate_zoom_out( Widget w, MsgWindow *msgw, XmAnyCallbackStruct *data);
    static void activate_zoom_reset( Widget w, MsgWindow *msgw, XmAnyCallbackStruct *data);
    static void activate_help( Widget w, MsgWindow *msgw, XmAnyCallbackStruct *data);
    static void activate_help_message( Widget w, MsgWindow *msgw, XmAnyCallbackStruct *data);
    static void create_form( Widget w, MsgWindow *msgw, XmAnyCallbackStruct *data);

};

#endif
