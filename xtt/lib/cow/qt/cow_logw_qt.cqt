/**
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of Proview (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 **/

/* co_logw_qt.cpp -- History log window */

#include "glow_std.h"

#include <stdio.h>
#include <stdlib.h>

#include "co_cdh.h"
#include "co_time.h"
#include "co_dcli.h"
#include "co_lng.h"
#include "cow_xhelp.h"
#include "cow_logw_qt.h"
#include "cow_logwnav_qt.h"
#include "cow_wow_qt.h"

#include <QMenuBar>
#include <QVBoxLayout>

CoLogWQt::CoLogWQt(void *logw_parent_ctx, QWidget *logw_parent_wid,
                   const char *logw_name, int l_show_item, pwr_tStatus *status)
    : CoLogW(logw_parent_ctx, logw_name, l_show_item, status)
{
  toplevel = new CoLogWQtWidget(this, logw_parent_wid);
  toplevel->setToolTip(fl("cow_logw widget"));
  toplevel->setMinimumSize(800, 600);
  toplevel->setWindowTitle(fl(logw_name));
  toplevel->setAttribute(Qt::WA_DeleteOnClose);

  CoWowQt::SetWindowIcon(toplevel);

  QMenuBar *menu_bar = new QMenuBar();

  // File Entry
  QMenu *file = menu_bar->addMenu("&File");
  addMenuItem(toplevel, file, "&Print", SLOT(activate_print()), "",
              "document-print");
  addMenuItem(toplevel, file, "&Close", SLOT(close()), "CTRL+W", "window-close");

  // View menu
  QMenu *view = menu_bar->addMenu("&View");
  addMenuItem(toplevel, view, "Zoom &In", SLOT(activate_zoom_in()), "CTRL+I",
              "zoom-in");
  addMenuItem(toplevel, view, "Zoom &Out", SLOT(activate_zoom_out()), "CTRL+O",
              "zoom-out");
  addMenuItem(toplevel, view, "Zoom &Reset", SLOT(activate_zoom_reset()), "",
              "zoom-original");

  QVBoxLayout *form = new QVBoxLayout(toplevel);

  // Create logwnav
  logwnav = new CoLogWNavQt(this, toplevel, l_show_item, &nav_widget);

  form->setMenuBar(menu_bar);
  add_expanding(form, nav_widget);

  toplevel->setLayout(form);
  toplevel->show();

  wow = new CoWowQt(toplevel);
}

void CoLogWQt::print()
{
  pwr_tStatus sts;

  CoWowQt::CreateBrowPrintDialogQt(name, logwnav->brow->ctx,
                                   flow_eOrientation_Portrait, 1.0,
                                   (void *) this, &sts);
}

void CoLogWQtWidget::focusInEvent(QFocusEvent *event)
{
  if (!logw->focustimer.disabled()) {
    logw->logwnav->set_input_focus();
    logw->focustimer.disable(400);
  }

  QWidget::focusInEvent(event);
}

void CoLogWQtWidget::closeEvent(QCloseEvent *event)
{
  delete logw;
  QWidget::closeEvent(event);
}

void CoLogWQtWidget::activate_zoom_in()
{
  logw->logwnav->zoom(1.2);
}

void CoLogWQtWidget::activate_zoom_out()
{
  logw->logwnav->zoom(5.0 / 6);
}

void CoLogWQtWidget::activate_zoom_reset()
{
  logw->logwnav->unzoom();
}

void CoLogWQtWidget::activate_help()
{
  CoXHelp::dhelp("messagewindow_refman", 0, navh_eHelpFile_Other,
                 "$pwr_lang/man_dg.dat", true);
}