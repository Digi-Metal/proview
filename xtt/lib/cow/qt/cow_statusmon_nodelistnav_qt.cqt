/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2018 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

/* co_statusmon_nodelistnav_qt.cpp -- Console message window. */

#include "cow_qt_helpers.h"
#include "cow_statusmon_nodelistnav_qt.h"
#include "cow_wow_qt.h"

#include "flow_browwidget_qt.h"

#include <QApplication>
#include <QTimer>

NodelistNavQt::NodelistNavQt(void* nodelist_parent_ctx,
    QWidget* nodelist_parent_wid, MsgWindow* nodelist_msg_window,
    char* nodelist_nodename, int nodelist_mode, int nodelist_view_node_descr,
    int nodelist_msgw_pop, QWidget** w)
    : NodelistNav(nodelist_parent_ctx, nodelist_msg_window, nodelist_nodename,
          nodelist_mode, nodelist_view_node_descr, nodelist_msgw_pop)
{
  trace_obj = new NodelistNavQtTraceObject(this);

  debug_print("creating a scrolledbrowwidgetqt\n");
  form_widget = scrolledbrowwidgetqt_new(init_brow_cb, this, &brow_widget);

  showNow(brow_widget);

  *w = form_widget;

  wow = new CoWowQt(trace_obj);
}

NodelistNavQt::~NodelistNavQt()
{
  debug_print("NodelistNavQt::~NodelistNavQt\n");
  delete trace_obj;

  delete brow;
  form_widget->close();
}

void NodelistNavQt::beep()
{
  QApplication::beep();
}

void NodelistNavQt::set_input_focus()
{
  brow_widget->setFocus();
}

void NodelistNavQt::trace_start()
{
  trace_obj->trace_scan();
}

NodelistNavQtTraceObject::NodelistNavQtTraceObject(NodelistNavQt* parent)
    : QWidget(), nodelistnav(parent)
{
  trace_timerid = new QTimer(this);
}

void NodelistNavQtTraceObject::trace_scan()
{
  if (nodelistnav->trace_started) {
    nodelistnav->update_nodes();

    brow_TraceScan(nodelistnav->brow->ctx);

    initOneShotTimer(trace_timerid, SLOT(trace_scan()), nodelistnav->scantime);
  }
}