/*
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of Proview (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_keyboard_qt_h
#define xtt_keyboard_qt_h

/* xtt_keyboard_qt.h -- Virtual keyboard */

#ifndef xtt_keyboard_h
# include "xtt_keyboard.h"
#endif

class XttKeyboardQt : public XttKeyboard {
public:
  XttKeyboardQt(void *xn_parent_ctx, QWidget *xn_parent_wid,
                const char *xn_name, QWidget **w, keyboard_eKeymap keymap,
                keyboard_eType type, int xn_color_theme, pwr_tStatus *status);
  ~XttKeyboardQt();

  void set_inputfocus();
  void pop();
  void set_transient(void *basewidget);

  QWidget *keyboard_widget;
  QWidget *form_widget;
  int displayed;
  int closing_down;

private:
  QDialog *toplevel;
};

class XttKeyboardQtWidget : public QDialog {
public:
  XttKeyboardQtWidget(XttKeyboardQt *parent_ctx, QWidget *parent)
      : QDialog(parent), kb(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent *event);
  void closeEvent(QCloseEvent *event);

private:
  XttKeyboardQt *kb;
};

#endif