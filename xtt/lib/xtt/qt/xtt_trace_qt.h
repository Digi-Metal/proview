/*
 * Proview   Open Source Process Control.
 * Copyright (C) 2005-2017 SSAB EMEA AB.
 *
 * This file is part of Proview.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Proview. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking Proview statically or dynamically with other modules is
 * making a combined work based on Proview. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * Proview give you permission to, from the build function in the
 * Proview Configurator, combine Proview with modules generated by the
 * Proview PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of Proview (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_trace_qt_h
#define xtt_trace_qt_h

#include "flow_ctx.h"
#include "flow_api.h"
#ifndef xtt_trace_h
#include "xtt_trace.h"
#endif
#include <QWidget>

class RtTraceQtWidget;

class RtTraceQt : public RtTrace {
public:
  QWidget *flow_widget;
  QWidget *form;
  QWidget *menu;
  QWidget *nav_shell;
  QWidget *nav_widget;

  RtTraceQt(void *parent_ctx, QWidget *parent_wid, pwr_tObjid objid,
            pwr_tStatus *status);
  ~RtTraceQt();

  void pop();
  void popup_menu_position(int event_x, int event_y, int *x, int *y);
  RtTrace *subwindow_new(void *ctx, pwr_tObjid oid, pwr_tStatus *sts);

private:
  RtTraceQtWidget *toplevel;
};

class RtTraceQtWidget : public QWidget {
  Q_OBJECT

public:
  RtTraceQtWidget(RtTraceQt *parent_ctx, QWidget *parent)
      : QWidget(parent, Qt::Window), rt(parent_ctx) {}

protected:
  void closeEvent(QCloseEvent *event);

public slots:
  void activate_print();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_scantime1();
  void activate_scantime2();
  void activate_scantime3();
  void activate_scantime4();
  void activate_scantime5();

private:
  RtTraceQt *rt;
};

#endif